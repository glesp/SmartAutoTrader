Project Path: SmartAutoTrader

Source Tree:

```
SmartAutoTrader
├── frontend
│   ├── tsconfig.node.json
│   ├── index.html
│   ├── tsconfig.app.json
│   ├── README.md
│   ├── public
│   │   └── vite.svg
│   ├── package-lock.json
│   ├── package.json
│   ├── tsconfig.json
│   ├── eslint.config.js
│   ├── vite.config.ts
│   └── src
│       ├── App.tsx
│       ├── main.tsx
│       ├── contexts
│       │   ├── AuthContext.tsx
│       │   ├── index.ts
│       │   ├── AuthProvider.tsx
│       │   └── VehicleContext.tsx
│       ├── App.css
│       ├── index.css
│       ├── styles
│       │   └── recommendations.css
│       ├── components
│       │   ├── chat
│       │   │   ├── index.tsx
│       │   │   └── ChatInterface.tsx
│       │   ├── auth
│       │   │   ├── LoginForm.tsx
│       │   │   └── RegisterForm.tsx
│       │   ├── layout
│       │   │   ├── Navbar.tsx
│       │   │   ├── Footer.tsx
│       │   │   └── Header.tsx
│       │   ├── user
│       │   │   ├── FavoritesList.tsx
│       │   │   └── Profile.tsx
│       │   ├── common
│       │   │   ├── ErrorMessage.tsx
│       │   │   ├── LoadingSpinner.tsx
│       │   │   └── Button.tsx
│       │   └── vehicles
│       │       ├── VehicleCard.tsx
│       │       ├── VehicleRecommendations.tsx
│       │       ├── VehicleList.tsx
│       │       ├── VehicleFilters.tsx
│       │       └── VehicleDetail.tsx
│       ├── vite-env.d.ts
│       ├── assets
│       │   └── react.svg
│       ├── pages
│       │   ├── RegisterPage.tsx
│       │   ├── LoginPage.tsx
│       │   ├── ProfilePage.tsx
│       │   ├── RecommendationsPage.tsx
│       │   ├── VehicleDetailPage.tsx
│       │   ├── VehicleListingPage.tsx
│       │   └── HomePage.tsx
│       └── services
│           └── api.ts
├── backend
│   ├── SmartAutoTrader.API.http
│   ├── SmartAutoTrader.API.csproj
│   ├── smartautotrader.db
│   ├── appsettings.json
│   ├── Models
│   │   ├── Inquiry.cs
│   │   ├── Vehicle.cs
│   │   ├── User.cs
│   │   └── ChatHistory.cs
│   ├── identifier.sqlite
│   ├── Logs
│   │   └── app_log.txt
│   ├── Properties
│   │   └── launchSettings.json
│   ├── appsettings.Development.json
│   ├── DataSeeding
│   │   └── VehicleSeederScript.cs
│   ├── Controllers
│   │   ├── ChatController.cs
│   │   ├── FavoritesController.cs
│   │   ├── VehiclesController.cs
│   │   ├── InquiriesController.cs
│   │   ├── RecommendationsController.cs
│   │   └── AuthController.cs
│   ├── Data
│   │   └── ApplicationDbContext.cs
│   ├── Services
│   │   ├── AIServiceRegistration.cs
│   │   ├── RecommendationParameters.cs
│   │   ├── HuggingFaceRecommendationsService.cs
│   │   ├── ChatRecommendationsService.cs
│   │   └── AuthService.cs
│   └── Program.cs
├── README.md
└── PythonServices
    └── embedding_service
        ├── requirements.txt
        ├── app.py
        └── venv

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/tsconfig.node.json`:

```json
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/index.html`:

```html
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React + TS</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/tsconfig.app.json`:

```json
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["src"]
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/README.md`:

```md
# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:

```js
export default tseslint.config({
  extends: [
    // Remove ...tseslint.configs.recommended and replace with this
    ...tseslint.configs.recommendedTypeChecked,
    // Alternatively, use this for stricter rules
    ...tseslint.configs.strictTypeChecked,
    // Optionally, add this for stylistic rules
    ...tseslint.configs.stylisticTypeChecked,
  ],
  languageOptions: {
    // other options...
    parserOptions: {
      project: ['./tsconfig.node.json', './tsconfig.app.json'],
      tsconfigRootDir: import.meta.dirname,
    },
  },
})
```

You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:

```js
// eslint.config.js
import reactX from 'eslint-plugin-react-x'
import reactDom from 'eslint-plugin-react-dom'

export default tseslint.config({
  plugins: {
    // Add the react-x and react-dom plugins
    'react-x': reactX,
    'react-dom': reactDom,
  },
  rules: {
    // other rules...
    // Enable its recommended typescript rules
    ...reactX.configs['recommended-typescript'].rules,
    ...reactDom.configs.recommended.rules,
  },
})
```

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/public/vite.svg`:

```svg
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/package-lock.json`:

```json
{
  "name": "smart-auto-trader-client",
  "version": "0.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "smart-auto-trader-client",
      "version": "0.0.0",
      "dependencies": {
        "@emotion/react": "^11.14.0",
        "@emotion/styled": "^11.14.0",
        "@mui/icons-material": "^6.4.7",
        "@mui/material": "^6.4.7",
        "axios": "^1.8.2",
        "react": "^19.0.0",
        "react-dom": "^19.0.0",
        "react-icons": "^5.5.0",
        "react-router-dom": "^7.3.0"
      },
      "devDependencies": {
        "@eslint/js": "^9.21.0",
        "@types/react": "^19.0.10",
        "@types/react-dom": "^19.0.4",
        "@typescript-eslint/eslint-plugin": "^8.26.0",
        "@typescript-eslint/parser": "^8.26.0",
        "@vitejs/plugin-react": "^4.3.4",
        "eslint": "^9.22.0",
        "eslint-config-prettier": "^10.1.1",
        "eslint-plugin-prettier": "^5.2.3",
        "eslint-plugin-react": "^7.37.4",
        "eslint-plugin-react-hooks": "^5.2.0",
        "eslint-plugin-react-refresh": "^0.4.19",
        "globals": "^15.15.0",
        "prettier": "^3.5.3",
        "typescript": "~5.7.2",
        "typescript-eslint": "^8.24.1",
        "vite": "^6.2.0"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.26.2.tgz",
      "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.25.9",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.26.8",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.8.tgz",
      "integrity": "sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.26.10.tgz",
      "integrity": "sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==",
      "dev": true,
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.26.10",
        "@babel/helper-compilation-targets": "^7.26.5",
        "@babel/helper-module-transforms": "^7.26.0",
        "@babel/helpers": "^7.26.10",
        "@babel/parser": "^7.26.10",
        "@babel/template": "^7.26.9",
        "@babel/traverse": "^7.26.10",
        "@babel/types": "^7.26.10",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.26.10.tgz",
      "integrity": "sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang==",
      "dependencies": {
        "@babel/parser": "^7.26.10",
        "@babel/types": "^7.26.10",
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.26.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz",
      "integrity": "sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.26.5",
        "@babel/helper-validator-option": "^7.25.9",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
      "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
      "dependencies": {
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
      "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-imports": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9",
        "@babel/traverse": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.26.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz",
      "integrity": "sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
      "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
      "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
      "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.10.tgz",
      "integrity": "sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g==",
      "dev": true,
      "dependencies": {
        "@babel/template": "^7.26.9",
        "@babel/types": "^7.26.10"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.26.10.tgz",
      "integrity": "sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA==",
      "dependencies": {
        "@babel/types": "^7.26.10"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.25.9.tgz",
      "integrity": "sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.25.9.tgz",
      "integrity": "sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.26.10.tgz",
      "integrity": "sha512-2WJMeRQPHKSPemqk/awGrAiuFfzBmOIPXKizAsVhWH9YJqLZ0H+HS4c8loHGgW6utJ3E/ejXQUsiGaQy2NZ9Fw==",
      "dependencies": {
        "regenerator-runtime": "^0.14.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.26.9.tgz",
      "integrity": "sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA==",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/parser": "^7.26.9",
        "@babel/types": "^7.26.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.10.tgz",
      "integrity": "sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A==",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.26.10",
        "@babel/parser": "^7.26.10",
        "@babel/template": "^7.26.9",
        "@babel/types": "^7.26.10",
        "debug": "^4.3.1",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse/node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.26.10.tgz",
      "integrity": "sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ==",
      "dependencies": {
        "@babel/helper-string-parser": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@emotion/babel-plugin": {
      "version": "11.13.5",
      "resolved": "https://registry.npmjs.org/@emotion/babel-plugin/-/babel-plugin-11.13.5.tgz",
      "integrity": "sha512-pxHCpT2ex+0q+HH91/zsdHkw/lXd468DIN2zvfvLtPKLLMo6gQj7oLObq8PhkrxOZb/gGCq03S3Z7PDhS8pduQ==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.16.7",
        "@babel/runtime": "^7.18.3",
        "@emotion/hash": "^0.9.2",
        "@emotion/memoize": "^0.9.0",
        "@emotion/serialize": "^1.3.3",
        "babel-plugin-macros": "^3.1.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^4.0.0",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "stylis": "4.2.0"
      }
    },
    "node_modules/@emotion/cache": {
      "version": "11.14.0",
      "resolved": "https://registry.npmjs.org/@emotion/cache/-/cache-11.14.0.tgz",
      "integrity": "sha512-L/B1lc/TViYk4DcpGxtAVbx0ZyiKM5ktoIyafGkH6zg/tj+mA+NE//aPYKG0k8kCHSHVJrpLpcAlOBEXQ3SavA==",
      "dependencies": {
        "@emotion/memoize": "^0.9.0",
        "@emotion/sheet": "^1.4.0",
        "@emotion/utils": "^1.4.2",
        "@emotion/weak-memoize": "^0.4.0",
        "stylis": "4.2.0"
      }
    },
    "node_modules/@emotion/hash": {
      "version": "0.9.2",
      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.9.2.tgz",
      "integrity": "sha512-MyqliTZGuOm3+5ZRSaaBGP3USLw6+EGykkwZns2EPC5g8jJ4z9OrdZY9apkl3+UP9+sdz76YYkwCKP5gh8iY3g=="
    },
    "node_modules/@emotion/is-prop-valid": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-1.3.1.tgz",
      "integrity": "sha512-/ACwoqx7XQi9knQs/G0qKvv5teDMhD7bXYns9N/wM8ah8iNb8jZ2uNO0YOgiq2o2poIvVtJS2YALasQuMSQ7Kw==",
      "dependencies": {
        "@emotion/memoize": "^0.9.0"
      }
    },
    "node_modules/@emotion/memoize": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.9.0.tgz",
      "integrity": "sha512-30FAj7/EoJ5mwVPOWhAyCX+FPfMDrVecJAM+Iw9NRoSl4BBAQeqj4cApHHUXOVvIPgLVDsCFoz/hGD+5QQD1GQ=="
    },
    "node_modules/@emotion/react": {
      "version": "11.14.0",
      "resolved": "https://registry.npmjs.org/@emotion/react/-/react-11.14.0.tgz",
      "integrity": "sha512-O000MLDBDdk/EohJPFUqvnp4qnHeYkVP5B0xEG0D/L7cOKP9kefu2DXn8dj74cQfsEzUqh+sr1RzFqiL1o+PpA==",
      "dependencies": {
        "@babel/runtime": "^7.18.3",
        "@emotion/babel-plugin": "^11.13.5",
        "@emotion/cache": "^11.14.0",
        "@emotion/serialize": "^1.3.3",
        "@emotion/use-insertion-effect-with-fallbacks": "^1.2.0",
        "@emotion/utils": "^1.4.2",
        "@emotion/weak-memoize": "^0.4.0",
        "hoist-non-react-statics": "^3.3.1"
      },
      "peerDependencies": {
        "react": ">=16.8.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@emotion/serialize": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-1.3.3.tgz",
      "integrity": "sha512-EISGqt7sSNWHGI76hC7x1CksiXPahbxEOrC5RjmFRJTqLyEK9/9hZvBbiYn70dw4wuwMKiEMCUlR6ZXTSWQqxA==",
      "dependencies": {
        "@emotion/hash": "^0.9.2",
        "@emotion/memoize": "^0.9.0",
        "@emotion/unitless": "^0.10.0",
        "@emotion/utils": "^1.4.2",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@emotion/sheet": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/@emotion/sheet/-/sheet-1.4.0.tgz",
      "integrity": "sha512-fTBW9/8r2w3dXWYM4HCB1Rdp8NLibOw2+XELH5m5+AkWiL/KqYX6dc0kKYlaYyKjrQ6ds33MCdMPEwgs2z1rqg=="
    },
    "node_modules/@emotion/styled": {
      "version": "11.14.0",
      "resolved": "https://registry.npmjs.org/@emotion/styled/-/styled-11.14.0.tgz",
      "integrity": "sha512-XxfOnXFffatap2IyCeJyNov3kiDQWoR08gPUQxvbL7fxKryGBKUZUkG6Hz48DZwVrJSVh9sJboyV1Ds4OW6SgA==",
      "dependencies": {
        "@babel/runtime": "^7.18.3",
        "@emotion/babel-plugin": "^11.13.5",
        "@emotion/is-prop-valid": "^1.3.0",
        "@emotion/serialize": "^1.3.3",
        "@emotion/use-insertion-effect-with-fallbacks": "^1.2.0",
        "@emotion/utils": "^1.4.2"
      },
      "peerDependencies": {
        "@emotion/react": "^11.0.0-rc.0",
        "react": ">=16.8.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@emotion/unitless": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.10.0.tgz",
      "integrity": "sha512-dFoMUuQA20zvtVTuxZww6OHoJYgrzfKM1t52mVySDJnMSEa08ruEvdYQbhvyu6soU+NeLVd3yKfTfT0NeV6qGg=="
    },
    "node_modules/@emotion/use-insertion-effect-with-fallbacks": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@emotion/use-insertion-effect-with-fallbacks/-/use-insertion-effect-with-fallbacks-1.2.0.tgz",
      "integrity": "sha512-yJMtVdH59sxi/aVJBpk9FQq+OR8ll5GT8oWd57UpeaKEVGab41JWaCFA7FRLoMLloOZF/c/wsPoe+bfGmRKgDg==",
      "peerDependencies": {
        "react": ">=16.8.0"
      }
    },
    "node_modules/@emotion/utils": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-1.4.2.tgz",
      "integrity": "sha512-3vLclRofFziIa3J2wDh9jjbkUz9qk5Vi3IZ/FSTKViB0k+ef0fPV7dYrUIugbgupYDx7v9ud/SjrtEP8Y4xLoA=="
    },
    "node_modules/@emotion/weak-memoize": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@emotion/weak-memoize/-/weak-memoize-0.4.0.tgz",
      "integrity": "sha512-snKqtPW01tN0ui7yu9rGv69aJXr/a/Ywvl11sUjNtEcRc+ng/mQriFL0wLXMef74iHa/EkftbDzU9F8iFbH+zg=="
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.1.tgz",
      "integrity": "sha512-kfYGy8IdzTGy+z0vFGvExZtxkFlA4zAxgKEahG9KE1ScBjpQnFsNOX8KTU5ojNru5ed5CVoJYXFtoxaq5nFbjQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.1.tgz",
      "integrity": "sha512-dp+MshLYux6j/JjdqVLnMglQlFu+MuVeNrmT5nk6q07wNhCdSnB7QZj+7G8VMUGh1q+vj2Bq8kRsuyA00I/k+Q==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.1.tgz",
      "integrity": "sha512-50tM0zCJW5kGqgG7fQ7IHvQOcAn9TKiVRuQ/lN0xR+T2lzEFvAi1ZcS8DiksFcEpf1t/GYOeOfCAgDHFpkiSmA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.1.tgz",
      "integrity": "sha512-GCj6WfUtNldqUzYkN/ITtlhwQqGWu9S45vUXs7EIYf+7rCiiqH9bCloatO9VhxsL0Pji+PF4Lz2XXCES+Q8hDw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.1.tgz",
      "integrity": "sha512-5hEZKPf+nQjYoSr/elb62U19/l1mZDdqidGfmFutVUjjUZrOazAtwK+Kr+3y0C/oeJfLlxo9fXb1w7L+P7E4FQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.1.tgz",
      "integrity": "sha512-hxVnwL2Dqs3fM1IWq8Iezh0cX7ZGdVhbTfnOy5uURtao5OIVCEyj9xIzemDi7sRvKsuSdtCAhMKarxqtlyVyfA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.1.tgz",
      "integrity": "sha512-1MrCZs0fZa2g8E+FUo2ipw6jw5qqQiH+tERoS5fAfKnRx6NXH31tXBKI3VpmLijLH6yriMZsxJtaXUyFt/8Y4A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.1.tgz",
      "integrity": "sha512-0IZWLiTyz7nm0xuIs0q1Y3QWJC52R8aSXxe40VUxm6BB1RNmkODtW6LHvWRrGiICulcX7ZvyH6h5fqdLu4gkww==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.1.tgz",
      "integrity": "sha512-NdKOhS4u7JhDKw9G3cY6sWqFcnLITn6SqivVArbzIaf3cemShqfLGHYMx8Xlm/lBit3/5d7kXvriTUGa5YViuQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.1.tgz",
      "integrity": "sha512-jaN3dHi0/DDPelk0nLcXRm1q7DNJpjXy7yWaWvbfkPvI+7XNSc/lDOnCLN7gzsyzgu6qSAmgSvP9oXAhP973uQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.1.tgz",
      "integrity": "sha512-OJykPaF4v8JidKNGz8c/q1lBO44sQNUQtq1KktJXdBLn1hPod5rE/Hko5ugKKZd+D2+o1a9MFGUEIUwO2YfgkQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.1.tgz",
      "integrity": "sha512-nGfornQj4dzcq5Vp835oM/o21UMlXzn79KobKlcs3Wz9smwiifknLy4xDCLUU0BWp7b/houtdrgUz7nOGnfIYg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.1.tgz",
      "integrity": "sha512-1osBbPEFYwIE5IVB/0g2X6i1qInZa1aIoj1TdL4AaAb55xIIgbg8Doq6a5BzYWgr+tEcDzYH67XVnTmUzL+nXg==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.1.tgz",
      "integrity": "sha512-/6VBJOwUf3TdTvJZ82qF3tbLuWsscd7/1w+D9LH0W/SqUgM5/JJD0lrJ1fVIfZsqB6RFmLCe0Xz3fmZc3WtyVg==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.1.tgz",
      "integrity": "sha512-nSut/Mx5gnilhcq2yIMLMe3Wl4FK5wx/o0QuuCLMtmJn+WeWYoEGDN1ipcN72g1WHsnIbxGXd4i/MF0gTcuAjQ==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.1.tgz",
      "integrity": "sha512-cEECeLlJNfT8kZHqLarDBQso9a27o2Zd2AQ8USAEoGtejOrCYHNtKP8XQhMDJMtthdF4GBmjR2au3x1udADQQQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.1.tgz",
      "integrity": "sha512-xbfUhu/gnvSEg+EGovRc+kjBAkrvtk38RlerAzQxvMzlB4fXpCFCeUAYzJvrnhFtdeyVCDANSjJvOvGYoeKzFA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.1.tgz",
      "integrity": "sha512-O96poM2XGhLtpTh+s4+nP7YCCAfb4tJNRVZHfIE7dgmax+yMP2WgMd2OecBuaATHKTHsLWHQeuaxMRnCsH8+5g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.1.tgz",
      "integrity": "sha512-X53z6uXip6KFXBQ+Krbx25XHV/NCbzryM6ehOAeAil7X7oa4XIq+394PWGnwaSQ2WRA0KI6PUO6hTO5zeF5ijA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.1.tgz",
      "integrity": "sha512-Na9T3szbXezdzM/Kfs3GcRQNjHzM6GzFBeU1/6IV/npKP5ORtp9zbQjvkDJ47s6BCgaAZnnnu/cY1x342+MvZg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.1.tgz",
      "integrity": "sha512-T3H78X2h1tszfRSf+txbt5aOp/e7TAz3ptVKu9Oyir3IAOFPGV6O9c2naym5TOriy1l0nNf6a4X5UXRZSGX/dw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.1.tgz",
      "integrity": "sha512-2H3RUvcmULO7dIE5EWJH8eubZAI4xw54H1ilJnRNZdeo8dTADEZ21w6J22XBkXqGJbe0+wnNJtw3UXRoLJnFEg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.1.tgz",
      "integrity": "sha512-GE7XvrdOzrb+yVKB9KsRMq+7a2U/K5Cf/8grVFRAGJmfADr/e/ODQ134RK2/eeHqYV5eQRFxb1hY7Nr15fv1NQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.1.tgz",
      "integrity": "sha512-uOxSJCIcavSiT6UnBhBzE8wy3n0hOkJsBOzy7HDAuTDE++1DJMRRVCPGisULScHL+a/ZwdXPpXD3IyFKjA7K8A==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.1.tgz",
      "integrity": "sha512-Y1EQdcfwMSeQN/ujR5VayLOJ1BHaK+ssyk0AEzPjC+t1lITgsnccPqFjb6V+LsTp/9Iov4ysfjxLaGJ9RPtkVg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.5.0.tgz",
      "integrity": "sha512-RoV8Xs9eNwiDvhv7M+xcL4PWyRyIXRY/FLp3buU4h1EYfdF7unWUy3dOjPqb3C7rMUewIcqwW850PgS8h1o1yg==",
      "dev": true,
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.19.2",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.19.2.tgz",
      "integrity": "sha512-GNKqxfHG2ySmJOBSHg7LxeUx4xpuCoFjacmlCoYWEbaPXLwvfIjixRI12xCQZeULksQb23uiA8F40w5TojpV7w==",
      "dev": true,
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-array/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@eslint/config-array/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@eslint/config-helpers": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.1.0.tgz",
      "integrity": "sha512-kLrdPDJE1ckPo94kmPPf9Hfd0DU0Jw6oKYrhe+pwSC0iTUInmTa+w6fw8sGgcfkFJGNdWOUeOaDM4quW4a7OkA==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.12.0.tgz",
      "integrity": "sha512-cmrR6pytBuSMTaBweKoGMwu3EiHiEC+DoyupPmlZ0HxBJBtIxwe+j/E4XPIKNx+Q74c8lXKPwYawBf5glsTkHg==",
      "dev": true,
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.0.tgz",
      "integrity": "sha512-yaVPAiNAalnCZedKLdR21GOGILMLKPyqSLWaAjQFvYA2i/ciDi8ArYVr69Anohb6cH2Ukhqti4aFnYyPm8wdwQ==",
      "dev": true,
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.22.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.22.0.tgz",
      "integrity": "sha512-vLFajx9o8d1/oL2ZkpMYbkLv8nDB6yaIwFNt7nI4+I80U/z03SxmfOMsLbvWr3p7C+Wnoh//aOu2pQW8cS0HCQ==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.2.7.tgz",
      "integrity": "sha512-JubJ5B2pJ4k4yGxaNLdbjrnk9d/iDz6/q8wOilpIowd6PJPgaxCuHBnBszq7Ce2TyMrywm5r4PnKm6V3iiZF+g==",
      "dev": true,
      "dependencies": {
        "@eslint/core": "^0.12.0",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.2.tgz",
      "integrity": "sha512-xeO57FpIu4p1Ri3Jq/EXq4ClRm86dVF2z/+kvFnyqVYRavTZmaFaUBbWCOuuTh0o/g7DSsk6kc2vrS4Vl5oPOQ==",
      "dev": true,
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ=="
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@mui/core-downloads-tracker": {
      "version": "6.4.7",
      "resolved": "https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-6.4.7.tgz",
      "integrity": "sha512-XjJrKFNt9zAKvcnoIIBquXyFyhfrHYuttqMsoDS7lM7VwufYG4fAPw4kINjBFg++fqXM2BNAuWR9J7XVIuKIKg==",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mui-org"
      }
    },
    "node_modules/@mui/icons-material": {
      "version": "6.4.7",
      "resolved": "https://registry.npmjs.org/@mui/icons-material/-/icons-material-6.4.7.tgz",
      "integrity": "sha512-Rk8cs9ufQoLBw582Rdqq7fnSXXZTqhYRbpe1Y5SAz9lJKZP3CIdrj0PfG8HJLGw1hrsHFN/rkkm70IDzhJsG1g==",
      "dependencies": {
        "@babel/runtime": "^7.26.0"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mui-org"
      },
      "peerDependencies": {
        "@mui/material": "^6.4.7",
        "@types/react": "^17.0.0 || ^18.0.0 || ^19.0.0",
        "react": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@mui/material": {
      "version": "6.4.7",
      "resolved": "https://registry.npmjs.org/@mui/material/-/material-6.4.7.tgz",
      "integrity": "sha512-K65StXUeGAtFJ4ikvHKtmDCO5Ab7g0FZUu2J5VpoKD+O6Y3CjLYzRi+TMlI3kaL4CL158+FccMoOd/eaddmeRQ==",
      "dependencies": {
        "@babel/runtime": "^7.26.0",
        "@mui/core-downloads-tracker": "^6.4.7",
        "@mui/system": "^6.4.7",
        "@mui/types": "^7.2.21",
        "@mui/utils": "^6.4.6",
        "@popperjs/core": "^2.11.8",
        "@types/react-transition-group": "^4.4.12",
        "clsx": "^2.1.1",
        "csstype": "^3.1.3",
        "prop-types": "^15.8.1",
        "react-is": "^19.0.0",
        "react-transition-group": "^4.4.5"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mui-org"
      },
      "peerDependencies": {
        "@emotion/react": "^11.5.0",
        "@emotion/styled": "^11.3.0",
        "@mui/material-pigment-css": "^6.4.7",
        "@types/react": "^17.0.0 || ^18.0.0 || ^19.0.0",
        "react": "^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/react": {
          "optional": true
        },
        "@emotion/styled": {
          "optional": true
        },
        "@mui/material-pigment-css": {
          "optional": true
        },
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@mui/private-theming": {
      "version": "6.4.6",
      "resolved": "https://registry.npmjs.org/@mui/private-theming/-/private-theming-6.4.6.tgz",
      "integrity": "sha512-T5FxdPzCELuOrhpA2g4Pi6241HAxRwZudzAuL9vBvniuB5YU82HCmrARw32AuCiyTfWzbrYGGpZ4zyeqqp9RvQ==",
      "dependencies": {
        "@babel/runtime": "^7.26.0",
        "@mui/utils": "^6.4.6",
        "prop-types": "^15.8.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mui-org"
      },
      "peerDependencies": {
        "@types/react": "^17.0.0 || ^18.0.0 || ^19.0.0",
        "react": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@mui/styled-engine": {
      "version": "6.4.6",
      "resolved": "https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-6.4.6.tgz",
      "integrity": "sha512-vSWYc9ZLX46be5gP+FCzWVn5rvDr4cXC5JBZwSIkYk9xbC7GeV+0kCvB8Q6XLFQJy+a62bbqtmdwS4Ghi9NBlQ==",
      "dependencies": {
        "@babel/runtime": "^7.26.0",
        "@emotion/cache": "^11.13.5",
        "@emotion/serialize": "^1.3.3",
        "@emotion/sheet": "^1.4.0",
        "csstype": "^3.1.3",
        "prop-types": "^15.8.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mui-org"
      },
      "peerDependencies": {
        "@emotion/react": "^11.4.1",
        "@emotion/styled": "^11.3.0",
        "react": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/react": {
          "optional": true
        },
        "@emotion/styled": {
          "optional": true
        }
      }
    },
    "node_modules/@mui/system": {
      "version": "6.4.7",
      "resolved": "https://registry.npmjs.org/@mui/system/-/system-6.4.7.tgz",
      "integrity": "sha512-7wwc4++Ak6tGIooEVA9AY7FhH2p9fvBMORT4vNLMAysH3Yus/9B9RYMbrn3ANgsOyvT3Z7nE+SP8/+3FimQmcg==",
      "dependencies": {
        "@babel/runtime": "^7.26.0",
        "@mui/private-theming": "^6.4.6",
        "@mui/styled-engine": "^6.4.6",
        "@mui/types": "^7.2.21",
        "@mui/utils": "^6.4.6",
        "clsx": "^2.1.1",
        "csstype": "^3.1.3",
        "prop-types": "^15.8.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mui-org"
      },
      "peerDependencies": {
        "@emotion/react": "^11.5.0",
        "@emotion/styled": "^11.3.0",
        "@types/react": "^17.0.0 || ^18.0.0 || ^19.0.0",
        "react": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/react": {
          "optional": true
        },
        "@emotion/styled": {
          "optional": true
        },
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@mui/types": {
      "version": "7.2.21",
      "resolved": "https://registry.npmjs.org/@mui/types/-/types-7.2.21.tgz",
      "integrity": "sha512-6HstngiUxNqLU+/DPqlUJDIPbzUBxIVHb1MmXP0eTWDIROiCR2viugXpEif0PPe2mLqqakPzzRClWAnK+8UJww==",
      "peerDependencies": {
        "@types/react": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@mui/utils": {
      "version": "6.4.6",
      "resolved": "https://registry.npmjs.org/@mui/utils/-/utils-6.4.6.tgz",
      "integrity": "sha512-43nZeE1pJF2anGafNydUcYFPtHwAqiBiauRtaMvurdrZI3YrUjHkAu43RBsxef7OFtJMXGiHFvq43kb7lig0sA==",
      "dependencies": {
        "@babel/runtime": "^7.26.0",
        "@mui/types": "^7.2.21",
        "@types/prop-types": "^15.7.14",
        "clsx": "^2.1.1",
        "prop-types": "^15.8.1",
        "react-is": "^19.0.0"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mui-org"
      },
      "peerDependencies": {
        "@types/react": "^17.0.0 || ^18.0.0 || ^19.0.0",
        "react": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@pkgr/core": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@pkgr/core/-/core-0.1.1.tgz",
      "integrity": "sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/unts"
      }
    },
    "node_modules/@popperjs/core": {
      "version": "2.11.8",
      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/popperjs"
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.35.0.tgz",
      "integrity": "sha512-uYQ2WfPaqz5QtVgMxfN6NpLD+no0MYHDBywl7itPYd3K5TjjSghNKmX8ic9S8NU8w81NVhJv/XojcHptRly7qQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.35.0.tgz",
      "integrity": "sha512-FtKddj9XZudurLhdJnBl9fl6BwCJ3ky8riCXjEw3/UIbjmIY58ppWwPEvU3fNu+W7FUsAsB1CdH+7EQE6CXAPA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.35.0.tgz",
      "integrity": "sha512-Uk+GjOJR6CY844/q6r5DR/6lkPFOw0hjfOIzVx22THJXMxktXG6CbejseJFznU8vHcEBLpiXKY3/6xc+cBm65Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.35.0.tgz",
      "integrity": "sha512-3IrHjfAS6Vkp+5bISNQnPogRAW5GAV1n+bNCrDwXmfMHbPl5EhTmWtfmwlJxFRUCBZ+tZ/OxDyU08aF6NI/N5Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.35.0.tgz",
      "integrity": "sha512-sxjoD/6F9cDLSELuLNnY0fOrM9WA0KrM0vWm57XhrIMf5FGiN8D0l7fn+bpUeBSU7dCgPV2oX4zHAsAXyHFGcQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.35.0.tgz",
      "integrity": "sha512-2mpHCeRuD1u/2kruUiHSsnjWtHjqVbzhBkNVQ1aVD63CcexKVcQGwJ2g5VphOd84GvxfSvnnlEyBtQCE5hxVVw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.35.0.tgz",
      "integrity": "sha512-mrA0v3QMy6ZSvEuLs0dMxcO2LnaCONs1Z73GUDBHWbY8tFFocM6yl7YyMu7rz4zS81NDSqhrUuolyZXGi8TEqg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.35.0.tgz",
      "integrity": "sha512-DnYhhzcvTAKNexIql8pFajr0PiDGrIsBYPRvCKlA5ixSS3uwo/CWNZxB09jhIapEIg945KOzcYEAGGSmTSpk7A==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.35.0.tgz",
      "integrity": "sha512-uagpnH2M2g2b5iLsCTZ35CL1FgyuzzJQ8L9VtlJ+FckBXroTwNOaD0z0/UF+k5K3aNQjbm8LIVpxykUOQt1m/A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.35.0.tgz",
      "integrity": "sha512-XQxVOCd6VJeHQA/7YcqyV0/88N6ysSVzRjJ9I9UA/xXpEsjvAgDTgH3wQYz5bmr7SPtVK2TsP2fQ2N9L4ukoUg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.35.0.tgz",
      "integrity": "sha512-5pMT5PzfgwcXEwOaSrqVsz/LvjDZt+vQ8RT/70yhPU06PTuq8WaHhfT1LW+cdD7mW6i/J5/XIkX/1tCAkh1W6g==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.35.0.tgz",
      "integrity": "sha512-c+zkcvbhbXF98f4CtEIP1EBA/lCic5xB0lToneZYvMeKu5Kamq3O8gqrxiYYLzlZH6E3Aq+TSW86E4ay8iD8EA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.35.0.tgz",
      "integrity": "sha512-s91fuAHdOwH/Tad2tzTtPX7UZyytHIRR6V4+2IGlV0Cej5rkG0R61SX4l4y9sh0JBibMiploZx3oHKPnQBKe4g==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.35.0.tgz",
      "integrity": "sha512-hQRkPQPLYJZYGP+Hj4fR9dDBMIM7zrzJDWFEMPdTnTy95Ljnv0/4w/ixFw3pTBMEuuEuoqtBINYND4M7ujcuQw==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.35.0.tgz",
      "integrity": "sha512-Pim1T8rXOri+0HmV4CdKSGrqcBWX0d1HoPnQ0uw0bdp1aP5SdQVNBy8LjYncvnLgu3fnnCt17xjWGd4cqh8/hA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.35.0.tgz",
      "integrity": "sha512-QysqXzYiDvQWfUiTm8XmJNO2zm9yC9P/2Gkrwg2dH9cxotQzunBHYr6jk4SujCTqnfGxduOmQcI7c2ryuW8XVg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.35.0.tgz",
      "integrity": "sha512-OUOlGqPkVJCdJETKOCEf1mw848ZyJ5w50/rZ/3IBQVdLfR5jk/6Sr5m3iO2tdPgwo0x7VcncYuOvMhBWZq8ayg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.35.0.tgz",
      "integrity": "sha512-2/lsgejMrtwQe44glq7AFFHLfJBPafpsTa6JvP2NGef/ifOa4KBoglVf7AKN7EV9o32evBPRqfg96fEHzWo5kw==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.35.0.tgz",
      "integrity": "sha512-PIQeY5XDkrOysbQblSW7v3l1MDZzkTEzAfTPkj5VAu3FW8fS4ynyLg2sINp0fp3SjZ8xkRYpLqoKcYqAkhU1dw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.6.8",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.8.tgz",
      "integrity": "sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.20.6",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.6.tgz",
      "integrity": "sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.20.7"
      }
    },
    "node_modules/@types/cookie": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz",
      "integrity": "sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA=="
    },
    "node_modules/@types/estree": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz",
      "integrity": "sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==",
      "dev": true
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true
    },
    "node_modules/@types/parse-json": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.2.tgz",
      "integrity": "sha512-dISoDXWWQwUquiKsyZ4Ng+HX2KsPL7LyHKHQwgGFEA3IaKac4Obd+h2a/a6waisAoepJlBcx9paWqjA8/HVjCw=="
    },
    "node_modules/@types/prop-types": {
      "version": "15.7.14",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.14.tgz",
      "integrity": "sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ=="
    },
    "node_modules/@types/react": {
      "version": "19.0.10",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.0.10.tgz",
      "integrity": "sha512-JuRQ9KXLEjaUNjTWpzuR231Z2WpIwczOkBEIvbHNCzQefFIT0L8IqE6NV6ULLyC1SI/i234JnDoMkfg+RjQj2g==",
      "dependencies": {
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "19.0.4",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.0.4.tgz",
      "integrity": "sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==",
      "dev": true,
      "peerDependencies": {
        "@types/react": "^19.0.0"
      }
    },
    "node_modules/@types/react-transition-group": {
      "version": "4.4.12",
      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.12.tgz",
      "integrity": "sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==",
      "peerDependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.26.1.tgz",
      "integrity": "sha512-2X3mwqsj9Bd3Ciz508ZUtoQQYpOhU/kWoUqIf49H8Z0+Vbh6UF/y0OEYp0Q0axOGzaBGs7QxRwq0knSQ8khQNA==",
      "dev": true,
      "dependencies": {
        "@eslint-community/regexpp": "^4.10.0",
        "@typescript-eslint/scope-manager": "8.26.1",
        "@typescript-eslint/type-utils": "8.26.1",
        "@typescript-eslint/utils": "8.26.1",
        "@typescript-eslint/visitor-keys": "8.26.1",
        "graphemer": "^1.4.0",
        "ignore": "^5.3.1",
        "natural-compare": "^1.4.0",
        "ts-api-utils": "^2.0.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "@typescript-eslint/parser": "^8.0.0 || ^8.0.0-alpha.0",
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.26.1.tgz",
      "integrity": "sha512-w6HZUV4NWxqd8BdeFf81t07d7/YV9s7TCWrQQbG5uhuvGUAW+fq1usZ1Hmz9UPNLniFnD8GLSsDpjP0hm1S4lQ==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/scope-manager": "8.26.1",
        "@typescript-eslint/types": "8.26.1",
        "@typescript-eslint/typescript-estree": "8.26.1",
        "@typescript-eslint/visitor-keys": "8.26.1",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.26.1.tgz",
      "integrity": "sha512-6EIvbE5cNER8sqBu6V7+KeMZIC1664d2Yjt+B9EWUXrsyWpxx4lEZrmvxgSKRC6gX+efDL/UY9OpPZ267io3mg==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "8.26.1",
        "@typescript-eslint/visitor-keys": "8.26.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/type-utils": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.26.1.tgz",
      "integrity": "sha512-Kcj/TagJLwoY/5w9JGEFV0dclQdyqw9+VMndxOJKtoFSjfZhLXhYjzsQEeyza03rwHx2vFEGvrJWJBXKleRvZg==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/typescript-estree": "8.26.1",
        "@typescript-eslint/utils": "8.26.1",
        "debug": "^4.3.4",
        "ts-api-utils": "^2.0.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.26.1.tgz",
      "integrity": "sha512-n4THUQW27VmQMx+3P+B0Yptl7ydfceUj4ON/AQILAASwgYdZ/2dhfymRMh5egRUrvK5lSmaOm77Ry+lmXPOgBQ==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.26.1.tgz",
      "integrity": "sha512-yUwPpUHDgdrv1QJ7YQal3cMVBGWfnuCdKbXw1yyjArax3353rEJP1ZA+4F8nOlQ3RfS2hUN/wze3nlY+ZOhvoA==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "8.26.1",
        "@typescript-eslint/visitor-keys": "8.26.1",
        "debug": "^4.3.4",
        "fast-glob": "^3.3.2",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^2.0.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/utils": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.26.1.tgz",
      "integrity": "sha512-V4Urxa/XtSUroUrnI7q6yUTD3hDtfJ2jzVfeT3VK0ciizfK2q/zGC0iDh1lFMUZR8cImRrep6/q0xd/1ZGPQpg==",
      "dev": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.4.0",
        "@typescript-eslint/scope-manager": "8.26.1",
        "@typescript-eslint/types": "8.26.1",
        "@typescript-eslint/typescript-estree": "8.26.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.26.1.tgz",
      "integrity": "sha512-AjOC3zfnxd6S4Eiy3jwktJPclqhFHNyd8L6Gycf9WUPoKZpgM5PjkxY1X7uSy61xVpiJDhhk7XT2NVsN3ALTWg==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "8.26.1",
        "eslint-visitor-keys": "^4.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys/node_modules/eslint-visitor-keys": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
      "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.3.4.tgz",
      "integrity": "sha512-SCCPBJtYLdE8PX/7ZQAs1QAZ8Jqwih+0VBLum1EGqmCCQal+MIUqLCzj3ZUy8ufbC0cAM4LRlSTm7IQJwWT4ug==",
      "dev": true,
      "dependencies": {
        "@babel/core": "^7.26.0",
        "@babel/plugin-transform-react-jsx-self": "^7.25.9",
        "@babel/plugin-transform-react-jsx-source": "^7.25.9",
        "@types/babel__core": "^7.20.5",
        "react-refresh": "^0.14.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "peerDependencies": {
        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0"
      }
    },
    "node_modules/acorn": {
      "version": "8.14.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.14.1.tgz",
      "integrity": "sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==",
      "dev": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "is-array-buffer": "^3.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-includes": {
      "version": "3.1.8",
      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz",
      "integrity": "sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "is-string": "^1.0.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlast": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flat": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
      "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flatmap": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
      "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.tosorted": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3",
        "es-errors": "^1.3.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
      "dev": true,
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/async-function": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "dev": true,
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/axios": {
      "version": "1.8.3",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.8.3.tgz",
      "integrity": "sha512-iP4DebzoNlP/YN2dpwCgb8zoCmhtkajzS48JvwmkSkXvPI3DHc7m+XYL5tGnSlJtR6nImXZmdCuN5aP8dh1d8A==",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.0",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/babel-plugin-macros": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-macros/-/babel-plugin-macros-3.1.0.tgz",
      "integrity": "sha512-Cg7TFGpIr01vOQNODXOOaGz2NpCU5gl8x1qJFbb6hbZxR7XrcE2vtbAsTAbJ7/xwJtUuJEw8K8Zr/AE0LHlesg==",
      "dependencies": {
        "@babel/runtime": "^7.12.5",
        "cosmiconfig": "^7.0.0",
        "resolve": "^1.19.0"
      },
      "engines": {
        "node": ">=10",
        "npm": ">=6"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.4.tgz",
      "integrity": "sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001688",
        "electron-to-chromium": "^1.5.73",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.1"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "dev": true,
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "dev": true,
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001704",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001704.tgz",
      "integrity": "sha512-+L2IgBbV6gXB4ETf0keSvLr7JUrRVbIaB/lrQ1+z8mRcQiisG5k+lG6O4n6Y5q6f5EuNfaYXKgymucphlEXQew==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ]
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true
    },
    "node_modules/convert-source-map": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz",
      "integrity": "sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A=="
    },
    "node_modules/cookie": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-1.0.2.tgz",
      "integrity": "sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/cosmiconfig": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-7.1.0.tgz",
      "integrity": "sha512-AdmX6xUzdNASswsFtmwSt7Vj8po9IuqXm0UXz7QKPuEUmPB4XyjGfaAr2PSuELMwkRMVH1EpIkX5bTZGRB3eCA==",
      "dependencies": {
        "@types/parse-json": "^4.0.0",
        "import-fresh": "^3.2.1",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0",
        "yaml": "^1.10.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/cosmiconfig/node_modules/yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw=="
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/inspect-js"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/debug": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.0.tgz",
      "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "dev": true,
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "dev": true,
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/dom-helpers": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
      "dependencies": {
        "@babel/runtime": "^7.8.7",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.116",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.116.tgz",
      "integrity": "sha512-mufxTCJzLBQVvSdZzX1s5YAuXsN1M4tTyYxOOL1TcSKtIzQ9rjIrm7yFK80rN5dwGTePgdoABDSHpuVtRQh0Zw==",
      "dev": true
    },
    "node_modules/error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dependencies": {
        "is-arrayish": "^0.2.1"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.23.9",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.9.tgz",
      "integrity": "sha512-py07lI0wjxAC/DcfK1S6G7iANonniZwTISvdPzk9hzeH0IZIshbuuFxLIU96OyF89Yb9hiqWn8M/bY83KY5vzA==",
      "dev": true,
      "dependencies": {
        "array-buffer-byte-length": "^1.0.2",
        "arraybuffer.prototype.slice": "^1.0.4",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "data-view-buffer": "^1.0.2",
        "data-view-byte-length": "^1.0.2",
        "data-view-byte-offset": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-set-tostringtag": "^2.1.0",
        "es-to-primitive": "^1.3.0",
        "function.prototype.name": "^1.1.8",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.0",
        "get-symbol-description": "^1.1.0",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "internal-slot": "^1.1.0",
        "is-array-buffer": "^3.0.5",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.2",
        "is-regex": "^1.2.1",
        "is-shared-array-buffer": "^1.0.4",
        "is-string": "^1.1.1",
        "is-typed-array": "^1.1.15",
        "is-weakref": "^1.1.0",
        "math-intrinsics": "^1.1.0",
        "object-inspect": "^1.13.3",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.7",
        "own-keys": "^1.0.1",
        "regexp.prototype.flags": "^1.5.3",
        "safe-array-concat": "^1.1.3",
        "safe-push-apply": "^1.0.0",
        "safe-regex-test": "^1.1.0",
        "set-proto": "^1.0.0",
        "string.prototype.trim": "^1.2.10",
        "string.prototype.trimend": "^1.0.9",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-length": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4",
        "typed-array-length": "^1.0.7",
        "unbox-primitive": "^1.1.0",
        "which-typed-array": "^1.1.18"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-iterator-helpers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
      "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-set-tostringtag": "^2.0.3",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.6",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "iterator.prototype": "^1.1.4",
        "safe-array-concat": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
      "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
      "dev": true,
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
      "dev": true,
      "dependencies": {
        "is-callable": "^1.2.7",
        "is-date-object": "^1.0.5",
        "is-symbol": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/esbuild": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.1.tgz",
      "integrity": "sha512-BGO5LtrGC7vxnqucAe/rmvKdJllfGaYWdyABvyMoXQlfYMb2bbRuReWR5tEGE//4LcNJj9XrkovTqNYRFZHAMQ==",
      "dev": true,
      "hasInstallScript": true,
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.1",
        "@esbuild/android-arm": "0.25.1",
        "@esbuild/android-arm64": "0.25.1",
        "@esbuild/android-x64": "0.25.1",
        "@esbuild/darwin-arm64": "0.25.1",
        "@esbuild/darwin-x64": "0.25.1",
        "@esbuild/freebsd-arm64": "0.25.1",
        "@esbuild/freebsd-x64": "0.25.1",
        "@esbuild/linux-arm": "0.25.1",
        "@esbuild/linux-arm64": "0.25.1",
        "@esbuild/linux-ia32": "0.25.1",
        "@esbuild/linux-loong64": "0.25.1",
        "@esbuild/linux-mips64el": "0.25.1",
        "@esbuild/linux-ppc64": "0.25.1",
        "@esbuild/linux-riscv64": "0.25.1",
        "@esbuild/linux-s390x": "0.25.1",
        "@esbuild/linux-x64": "0.25.1",
        "@esbuild/netbsd-arm64": "0.25.1",
        "@esbuild/netbsd-x64": "0.25.1",
        "@esbuild/openbsd-arm64": "0.25.1",
        "@esbuild/openbsd-x64": "0.25.1",
        "@esbuild/sunos-x64": "0.25.1",
        "@esbuild/win32-arm64": "0.25.1",
        "@esbuild/win32-ia32": "0.25.1",
        "@esbuild/win32-x64": "0.25.1"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "9.22.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.22.0.tgz",
      "integrity": "sha512-9V/QURhsRN40xuHXWjV64yvrzMjcz7ZyNoF2jJFmy9j/SLk0u1OLSZgXi28MrXjymnjEGSR80WCdab3RGMDveQ==",
      "dev": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.19.2",
        "@eslint/config-helpers": "^0.1.0",
        "@eslint/core": "^0.12.0",
        "@eslint/eslintrc": "^3.3.0",
        "@eslint/js": "9.22.0",
        "@eslint/plugin-kit": "^0.2.7",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.3.0",
        "eslint-visitor-keys": "^4.2.0",
        "espree": "^10.3.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-config-prettier": {
      "version": "10.1.1",
      "resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-10.1.1.tgz",
      "integrity": "sha512-4EQQr6wXwS+ZJSzaR5ZCrYgLxqvUjdXctaEtBqHcbkW944B1NQyO4qpdHQbXBONfwxXdkAY81HH4+LUfrg+zPw==",
      "dev": true,
      "bin": {
        "eslint-config-prettier": "bin/cli.js"
      },
      "peerDependencies": {
        "eslint": ">=7.0.0"
      }
    },
    "node_modules/eslint-plugin-prettier": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/eslint-plugin-prettier/-/eslint-plugin-prettier-5.2.3.tgz",
      "integrity": "sha512-qJ+y0FfCp/mQYQ/vWQ3s7eUlFEL4PyKfAJxsnYTJ4YT73nsJBWqmEpFryxV9OeUiqmsTsYJ5Y+KDNaeP31wrRw==",
      "dev": true,
      "dependencies": {
        "prettier-linter-helpers": "^1.0.0",
        "synckit": "^0.9.1"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint-plugin-prettier"
      },
      "peerDependencies": {
        "@types/eslint": ">=8.0.0",
        "eslint": ">=8.0.0",
        "eslint-config-prettier": "*",
        "prettier": ">=3.0.0"
      },
      "peerDependenciesMeta": {
        "@types/eslint": {
          "optional": true
        },
        "eslint-config-prettier": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-plugin-react": {
      "version": "7.37.4",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.4.tgz",
      "integrity": "sha512-BGP0jRmfYyvOyvMoRX/uoUeW+GqNj9y16bPQzqAHf3AYII/tDs+jMN0dBVkl88/OZwNGwrVFxE7riHsXVfy/LQ==",
      "dev": true,
      "dependencies": {
        "array-includes": "^3.1.8",
        "array.prototype.findlast": "^1.2.5",
        "array.prototype.flatmap": "^1.3.3",
        "array.prototype.tosorted": "^1.1.4",
        "doctrine": "^2.1.0",
        "es-iterator-helpers": "^1.2.1",
        "estraverse": "^5.3.0",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
        "minimatch": "^3.1.2",
        "object.entries": "^1.1.8",
        "object.fromentries": "^2.0.8",
        "object.values": "^1.2.1",
        "prop-types": "^15.8.1",
        "resolve": "^2.0.0-next.5",
        "semver": "^6.3.1",
        "string.prototype.matchall": "^4.0.12",
        "string.prototype.repeat": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
      }
    },
    "node_modules/eslint-plugin-react-hooks": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
      }
    },
    "node_modules/eslint-plugin-react-refresh": {
      "version": "0.4.19",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.19.tgz",
      "integrity": "sha512-eyy8pcr/YxSYjBoqIFSrlbn9i/xvxUFa8CjzAYo9cFjgGXqq1hyjihcpZvxRLalpaWmueWR81xn7vuKmAFijDQ==",
      "dev": true,
      "peerDependencies": {
        "eslint": ">=8.40"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/resolve": {
      "version": "2.0.0-next.5",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.3.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.3.0.tgz",
      "integrity": "sha512-pUNxi75F8MJ/GdeKtVLSbYg4ZI34J6C0C7sbL4YOp2exGwen7ZsuBqKzUhXd0qMQ362yET3z+uPwKeg/0C2XCQ==",
      "dev": true,
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/eslint/node_modules/eslint-visitor-keys": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
      "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/espree": {
      "version": "10.3.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.3.0.tgz",
      "integrity": "sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==",
      "dev": true,
      "dependencies": {
        "acorn": "^8.14.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree/node_modules/eslint-visitor-keys": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
      "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true
    },
    "node_modules/fast-diff": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.3.0.tgz",
      "integrity": "sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==",
      "dev": true
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-root": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true
    },
    "node_modules/follow-redirects": {
      "version": "1.15.9",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz",
      "integrity": "sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "dev": true,
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/form-data": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.2.tgz",
      "integrity": "sha512-hGfm/slu0ZabnNt4oaRZ6uREyfCj6P4fT/n6A1rGV+Z0VdGXjfOhVUpkn6qVQONHGIFwmveGXyDs75+nr6FM8w==",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "functions-have-names": "^1.2.3",
        "hasown": "^2.0.2",
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "15.15.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-15.15.0.tgz",
      "integrity": "sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==",
      "dev": true,
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "dev": true,
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true
    },
    "node_modules/has-bigints": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "dev": true,
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
      "dev": true,
      "dependencies": {
        "dunder-proto": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hoist-non-react-statics": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
      "dependencies": {
        "react-is": "^16.7.0"
      }
    },
    "node_modules/hoist-non-react-statics/node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/internal-slot": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
      "dev": true,
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
    },
    "node_modules/is-async-function": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
      "dev": true,
      "dependencies": {
        "async-function": "^1.0.0",
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.1",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bigint": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
      "dev": true,
      "dependencies": {
        "has-bigints": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-finalizationregistry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-map": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-set": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-string": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-symbols": "^1.1.0",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "dev": true,
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakmap": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakset": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "dev": true
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true
    },
    "node_modules/iterator.prototype": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
      "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
      "dev": true,
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "get-proto": "^1.0.0",
        "has-symbols": "^1.1.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsx-ast-utils": {
      "version": "3.3.5",
      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
      "dev": true,
      "dependencies": {
        "array-includes": "^3.1.6",
        "array.prototype.flat": "^1.3.1",
        "object.assign": "^4.1.4",
        "object.values": "^1.1.6"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "dev": true,
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "node_modules/nanoid": {
      "version": "3.3.9",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.9.tgz",
      "integrity": "sha512-SppoicMGpZvbF1l3z4x7No3OlIjP7QJvC9XR7AhZr1kL133KHnKPztkKDc+Ir4aJ/1VhTySrtKhrsycmrMQfvg==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0",
        "has-symbols": "^1.1.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.entries": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.8.tgz",
      "integrity": "sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.fromentries": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.values": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
      "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/own-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
      "dev": true,
      "dependencies": {
        "get-intrinsic": "^1.2.6",
        "object-keys": "^1.1.1",
        "safe-push-apply": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "dependencies": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.3",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.3.tgz",
      "integrity": "sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "nanoid": "^3.3.8",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/prettier": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz",
      "integrity": "sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==",
      "dev": true,
      "bin": {
        "prettier": "bin/prettier.cjs"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/prettier/prettier?sponsor=1"
      }
    },
    "node_modules/prettier-linter-helpers": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/prettier-linter-helpers/-/prettier-linter-helpers-1.0.0.tgz",
      "integrity": "sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==",
      "dev": true,
      "dependencies": {
        "fast-diff": "^1.1.2"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/prop-types/node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/react": {
      "version": "19.0.0",
      "resolved": "https://registry.npmjs.org/react/-/react-19.0.0.tgz",
      "integrity": "sha512-V8AVnmPIICiWpGfm6GLzCR/W5FXLchHop40W4nXBmdlEceh16rCN8O8LNWm5bh5XUX91fh7KpA+W0TgMKmgTpQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "19.0.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.0.0.tgz",
      "integrity": "sha512-4GV5sHFG0e/0AD4X+ySy6UJd3jVl1iNsNHdpad0qhABJ11twS3TTBnseqsKurKcsNqCEFeGL3uLpVChpIO3QfQ==",
      "dependencies": {
        "scheduler": "^0.25.0"
      },
      "peerDependencies": {
        "react": "^19.0.0"
      }
    },
    "node_modules/react-icons": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.5.0.tgz",
      "integrity": "sha512-MEFcXdkP3dLo8uumGI5xN3lDFNsRtrjbOEKDLD7yv76v4wpnEq2Lt2qeHaQOr34I/wPN3s3+N08WkQ+CW37Xiw==",
      "peerDependencies": {
        "react": "*"
      }
    },
    "node_modules/react-is": {
      "version": "19.0.0",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-19.0.0.tgz",
      "integrity": "sha512-H91OHcwjZsbq3ClIDHMzBShc1rotbfACdWENsmEf0IFvZ3FgGPtdHMcsv45bQ1hAbgdfiA8SnxTKfDS+x/8m2g=="
    },
    "node_modules/react-refresh": {
      "version": "0.14.2",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.14.2.tgz",
      "integrity": "sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-router": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-7.3.0.tgz",
      "integrity": "sha512-466f2W7HIWaNXTKM5nHTqNxLrHTyXybm7R0eBlVSt0k/u55tTCDO194OIx/NrYD4TS5SXKTNekXfT37kMKUjgw==",
      "dependencies": {
        "@types/cookie": "^0.6.0",
        "cookie": "^1.0.1",
        "set-cookie-parser": "^2.6.0",
        "turbo-stream": "2.4.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "react": ">=18",
        "react-dom": ">=18"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/react-router-dom": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-7.3.0.tgz",
      "integrity": "sha512-z7Q5FTiHGgQfEurX/FBinkOXhWREJIAB2RiU24lvcBa82PxUpwqvs/PAXb9lJyPjTs2jrl6UkLvCZVGJPeNuuQ==",
      "dependencies": {
        "react-router": "7.3.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "react": ">=18",
        "react-dom": ">=18"
      }
    },
    "node_modules/react-transition-group": {
      "version": "4.4.5",
      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "dom-helpers": "^5.0.1",
        "loose-envify": "^1.4.0",
        "prop-types": "^15.6.2"
      },
      "peerDependencies": {
        "react": ">=16.6.0",
        "react-dom": ">=16.6.0"
      }
    },
    "node_modules/reflect.getprototypeof": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.1",
        "which-builtin-type": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.14.1",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz",
      "integrity": "sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw=="
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rollup": {
      "version": "4.35.0",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.35.0.tgz",
      "integrity": "sha512-kg6oI4g+vc41vePJyO6dHt/yl0Rz3Thv0kJeVQ3D1kS3E5XSuKbPc29G4IpT/Kv1KQwgHVcN+HtyS+HYLNSvQg==",
      "dev": true,
      "dependencies": {
        "@types/estree": "1.0.6"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.35.0",
        "@rollup/rollup-android-arm64": "4.35.0",
        "@rollup/rollup-darwin-arm64": "4.35.0",
        "@rollup/rollup-darwin-x64": "4.35.0",
        "@rollup/rollup-freebsd-arm64": "4.35.0",
        "@rollup/rollup-freebsd-x64": "4.35.0",
        "@rollup/rollup-linux-arm-gnueabihf": "4.35.0",
        "@rollup/rollup-linux-arm-musleabihf": "4.35.0",
        "@rollup/rollup-linux-arm64-gnu": "4.35.0",
        "@rollup/rollup-linux-arm64-musl": "4.35.0",
        "@rollup/rollup-linux-loongarch64-gnu": "4.35.0",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.35.0",
        "@rollup/rollup-linux-riscv64-gnu": "4.35.0",
        "@rollup/rollup-linux-s390x-gnu": "4.35.0",
        "@rollup/rollup-linux-x64-gnu": "4.35.0",
        "@rollup/rollup-linux-x64-musl": "4.35.0",
        "@rollup/rollup-win32-arm64-msvc": "4.35.0",
        "@rollup/rollup-win32-ia32-msvc": "4.35.0",
        "@rollup/rollup-win32-x64-msvc": "4.35.0",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "has-symbols": "^1.1.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-push-apply": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
      "dev": true,
      "dependencies": {
        "es-errors": "^1.3.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/scheduler": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.25.0.tgz",
      "integrity": "sha512-xFVuu11jh+xcO7JOAGJNOXld8/TcEHK/4CituBUeUb5hqxJLj9YuemAEuvm9gQ/+pgXYfbQuqAkiYu+u7YEsNA=="
    },
    "node_modules/semver": {
      "version": "7.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.1.tgz",
      "integrity": "sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/set-cookie-parser": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",
      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ=="
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "dev": true,
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "dev": true,
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-proto": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
      "dev": true,
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "dev": true,
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "dev": true,
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/source-map": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
      "integrity": "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/string.prototype.matchall": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
      "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "regexp.prototype.flags": "^1.5.3",
        "set-function-name": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.repeat": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
      "dev": true,
      "dependencies": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.5"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.10",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-data-property": "^1.1.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-object-atoms": "^1.0.0",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/stylis": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/stylis/-/stylis-4.2.0.tgz",
      "integrity": "sha512-Orov6g6BB1sDfYgzWfTHDOxamtX1bE/zo104Dh9e6fqJ3PooipYyfJ0pUmrZO2wAvO8YbEyeFrkV91XTsGMSrw=="
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/synckit": {
      "version": "0.9.2",
      "resolved": "https://registry.npmjs.org/synckit/-/synckit-0.9.2.tgz",
      "integrity": "sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==",
      "dev": true,
      "dependencies": {
        "@pkgr/core": "^0.1.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/unts"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/ts-api-utils": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.0.1.tgz",
      "integrity": "sha512-dnlgjFSVetynI8nzgJ+qF62efpglpWRk8isUEWZGWlJYySCTD6aKvbUDu+zbPeDakk3bg5H4XpitHukgfL1m9w==",
      "dev": true,
      "engines": {
        "node": ">=18.12"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "dev": true
    },
    "node_modules/turbo-stream": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/turbo-stream/-/turbo-stream-2.4.0.tgz",
      "integrity": "sha512-FHncC10WpBd2eOmGwpmQsWLDoK4cqsA/UT/GqNoaKOQnT8uzhtCbg3EoUDMvqpOSAI0S26mr0rkjzbOO6S3v1g=="
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
      "dev": true,
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.15",
        "reflect.getprototypeof": "^1.0.9"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0",
        "reflect.getprototypeof": "^1.0.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typescript": {
      "version": "5.7.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.7.3.tgz",
      "integrity": "sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==",
      "dev": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/typescript-eslint": {
      "version": "8.26.1",
      "resolved": "https://registry.npmjs.org/typescript-eslint/-/typescript-eslint-8.26.1.tgz",
      "integrity": "sha512-t/oIs9mYyrwZGRpDv3g+3K6nZ5uhKEMt2oNmAPwaY4/ye0+EH4nXIPYNtkYFS6QHm+1DFg34DbglYBz5P9Xysg==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/eslint-plugin": "8.26.1",
        "@typescript-eslint/parser": "8.26.1",
        "@typescript-eslint/utils": "8.26.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.1.0",
        "which-boxed-primitive": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/vite": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/vite/-/vite-6.2.1.tgz",
      "integrity": "sha512-n2GnqDb6XPhlt9B8olZPrgMD/es/Nd1RdChF6CBD/fHW6pUyUTt2sQW2fPRX5GiD9XEa6+8A6A4f2vT6pSsE7Q==",
      "dev": true,
      "dependencies": {
        "esbuild": "^0.25.0",
        "postcss": "^8.5.3",
        "rollup": "^4.30.1"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
        "jiti": ">=1.21.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.16.0",
        "tsx": "^4.8.1",
        "yaml": "^2.4.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "jiti": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "tsx": {
          "optional": true
        },
        "yaml": {
          "optional": true
        }
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
      "dev": true,
      "dependencies": {
        "is-bigint": "^1.1.0",
        "is-boolean-object": "^1.2.1",
        "is-number-object": "^1.1.1",
        "is-string": "^1.1.1",
        "is-symbol": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
      "dev": true,
      "dependencies": {
        "call-bound": "^1.0.2",
        "function.prototype.name": "^1.1.6",
        "has-tostringtag": "^1.0.2",
        "is-async-function": "^2.0.0",
        "is-date-object": "^1.1.0",
        "is-finalizationregistry": "^1.1.0",
        "is-generator-function": "^1.0.10",
        "is-regex": "^1.2.1",
        "is-weakref": "^1.0.2",
        "isarray": "^2.0.5",
        "which-boxed-primitive": "^1.1.0",
        "which-collection": "^1.0.2",
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-collection": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
      "dev": true,
      "dependencies": {
        "is-map": "^2.0.3",
        "is-set": "^2.0.3",
        "is-weakmap": "^2.0.2",
        "is-weakset": "^2.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.19",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
      "dev": true,
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "for-each": "^0.3.5",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true
    },
    "node_modules/yaml": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.7.0.tgz",
      "integrity": "sha512-+hSoy/QHluxmC9kCIJyL/uyFmLmc+e5CFR5Wa+bpIhIj85LVb9ZH2nVnqrHoSvKogwODv0ClqZkmiSSaIH5LTA==",
      "dev": true,
      "optional": true,
      "peer": true,
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  }
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/package.json`:

```json
{
  "name": "smart-auto-trader-client",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/icons-material": "^6.4.7",
    "@mui/material": "^6.4.7",
    "axios": "^1.8.2",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-icons": "^5.5.0",
    "react-router-dom": "^7.3.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@typescript-eslint/eslint-plugin": "^8.26.0",
    "@typescript-eslint/parser": "^8.26.0",
    "@vitejs/plugin-react": "^4.3.4",
    "eslint": "^9.22.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-react": "^7.37.4",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "prettier": "^3.5.3",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0"
  }
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/tsconfig.json`:

```json
{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/eslint.config.js`:

```js
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  }
)

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/vite.config.ts`:

```ts
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  server: {
    proxy: {
      '/api': {
        target: 'https://localhost:7001',
        secure: false,
        changeOrigin: true,
      },
    },
  },
})

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/App.tsx`:

```tsx
import { BrowserRouter, Routes, Route } from 'react-router-dom'
import {
  Container,
  CssBaseline,
  ThemeProvider,
  createTheme,
} from '@mui/material'
import HomePage from './pages/HomePage'
import VehicleListingPage from './pages/VehicleListingPage'
import VehicleDetailPage from './pages/VehicleDetailPage'
import LoginPage from './pages/LoginPage'
import RegisterPage from './pages/RegisterPage'
import ProfilePage from './pages/ProfilePage'
import Header from './components/layout/Header'
import Footer from './components/layout/Footer'
import { AuthProvider } from './contexts'
import RecommendationsPage from './pages/RecommendationsPage'

// Create a theme instance
const theme = createTheme({
  palette: {
    primary: {
      main: '#1976d2', // Blue color
    },
    secondary: {
      main: '#dc004e', // Pink color
    },
  },
})

function App() {
  return (
    <ThemeProvider theme={theme}>
      <CssBaseline /> {/* This normalizes CSS across browsers */}
      <BrowserRouter>
        <AuthProvider>
          <div className="app">
            <Header />
            <Container component="main" sx={{ py: 4 }}>
              <Routes>
                <Route path="/" element={<HomePage />} />
                <Route path="/vehicles" element={<VehicleListingPage />} />
                <Route path="/vehicles/:id" element={<VehicleDetailPage />} />
                <Route path="/login" element={<LoginPage />} />
                <Route path="/register" element={<RegisterPage />} />
                <Route path="/profile" element={<ProfilePage />} />
                {/* Add the recommendations routes */}
                <Route
                  path="/recommendations"
                  element={<RecommendationsPage />}
                />{' '}
                {/* Temporarily using VehicleListingPage */}
                <Route
                  path="/recommendations/:userId"
                  element={<RecommendationsPage />}
                />{' '}
                {/* Temporarily using VehicleListingPage */}
              </Routes>
            </Container>
            <Footer />
          </div>
        </AuthProvider>
      </BrowserRouter>
    </ThemeProvider>
  )
}

export default App

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/main.tsx`:

```tsx
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import App from './App.tsx'
import './index.css'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>
)

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/contexts/AuthContext.tsx`:

```tsx
import { createContext } from 'react'

// Define the User interface
export interface User {
  id: number
  username: string
  email: string
  firstName?: string
  lastName?: string
}

// Define a UserRegistration interface for the register function
export interface UserRegistration {
  username: string
  email: string
  password: string
  firstName?: string
  lastName?: string
  phoneNumber?: string
}

// Define the AuthContextType interface
export interface AuthContextType {
  user: User | null
  token: string | null
  isAuthenticated: boolean
  loading: boolean
  login: (email: string, password: string) => Promise<void>
  register: (userData: UserRegistration) => Promise<void>
  logout: () => void
}

// Create the context with default values
export const AuthContext = createContext<AuthContextType>({
  user: null,
  token: null,
  isAuthenticated: false,
  loading: true,
  login: async () => {},
  register: async () => {},
  logout: () => {},
})

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/contexts/index.ts`:

```ts
// src/contexts/index.ts
export * from './AuthContext'
export * from './AuthProvider'

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/contexts/AuthProvider.tsx`:

```tsx
import { useState, useEffect, ReactNode } from 'react'
import { authService } from '../services/api'
import { AuthContext, User, UserRegistration } from './AuthContext'

export const AuthProvider = ({ children }: { children: ReactNode }) => {
  const [user, setUser] = useState<User | null>(null)
  const [token, setToken] = useState<string | null>(
    localStorage.getItem('token')
  )
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    // Check if token exists in localStorage and validate it
    const checkAuth = async () => {
      const storedToken = localStorage.getItem('token')
      const storedUser = localStorage.getItem('user')

      if (storedToken && storedUser) {
        setToken(storedToken)
        setUser(JSON.parse(storedUser))
      }

      setLoading(false)
    }

    checkAuth()
  }, [])

  const login = async (email: string, password: string) => {
    try {
      const response = await authService.login(email, password)

      setToken(response.token)
      setUser(response.user)

      localStorage.setItem('token', response.token)
      localStorage.setItem('user', JSON.stringify(response.user))
    } catch (error) {
      console.error('Login error:', error)
      throw error
    }
  }

  const register = async (userData: UserRegistration) => {
    try {
      await authService.register(userData)
      // Automatically login after registration
      await login(userData.email, userData.password)
    } catch (error) {
      console.error('Registration error:', error)
      throw error
    }
  }

  const logout = () => {
    setToken(null)
    setUser(null)
    localStorage.removeItem('token')
    localStorage.removeItem('user')
  }

  return (
    <AuthContext.Provider
      value={{
        user,
        token,
        isAuthenticated: !!token,
        loading,
        login,
        register,
        logout,
      }}
    >
      {children}
    </AuthContext.Provider>
  )
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/App.css`:

```css
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/index.css`:

```css
:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/styles/recommendations.css`:

```css
/* recommendations.css */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.aspect-w-16 {
  position: relative;
  padding-bottom: 56.25%;
}

.aspect-w-16 > * {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/* Recommended vehicle card styles */
.recommended-badge {
  background-color: rgba(37, 99, 235, 0.1);
  color: rgb(30, 64, 175);
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
}

@media (min-width: 768px) and (max-width: 1024px) {
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .lg\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .lg\:col-span-1 {
    grid-column: span 1 / span 1;
  }

  .lg\:col-span-3 {
    grid-column: span 3 / span 3;
  }
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/components/chat/index.tsx`:

```tsx
import ChatInterface from './ChatInterface'

export { ChatInterface }
export default ChatInterface

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/components/chat/ChatInterface.tsx`:

```tsx
import { useState, useRef, useEffect, useContext } from 'react'
import axios from 'axios'
import { AuthContext } from '../../contexts/AuthContext'

// Type definitions
interface ChatInterfaceProps {
  onRecommendationsUpdated: (
    vehicles: Vehicle[],
    parameters: RecommendationParameters
  ) => void
}

interface Message {
  id: string | number
  content: string
  sender: 'user' | 'ai'
  timestamp: Date
  vehicles?: Vehicle[]
  parameters?: RecommendationParameters
}

interface Vehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  fuelType: number
  vehicleType: number
  images?: VehicleImage[] | { $values: VehicleImage[] }
}

interface VehicleImage {
  id: number
  imageUrl: string
  isPrimary: boolean
}

interface RecommendationParameters {
  minPrice?: number
  maxPrice?: number
  minYear?: number
  maxYear?: number
  preferredMakes?: string[]
  preferredVehicleTypes?: number[]
  preferredFuelTypes?: number[]
  desiredFeatures?: string[]
}

interface ChatHistoryItem {
  id: number
  userMessage: string
  aiResponse: string
  timestamp: string
}

// Helper function to extract arrays from ASP.NET response format
const extractArray = <T,>(data: T[] | { $values: T[] } | undefined): T[] => {
  if (!data) return []
  if (Array.isArray(data)) return data
  if (data && '$values' in data) return data.$values
  return []
}

// Helper function to format currency
const formatCurrency = (value: number) => {
  return new Intl.NumberFormat('en-IE', {
    style: 'currency',
    currency: 'EUR',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0,
  }).format(value)
}

// Helper function to get the image URL
const getImageUrl = (vehicle: Vehicle) => {
  const images = extractArray(vehicle.images)
  if (images.length === 0) return 'https://via.placeholder.com/200x150'

  const primaryImage = images.find((img) => img.isPrimary)
  return (
    primaryImage?.imageUrl ||
    images[0].imageUrl ||
    'https://via.placeholder.com/200x150'
  )
}

// Helper function to convert enum value to string
const getFuelTypeString = (fuelType: number): string => {
  const fuelTypes = [
    'Petrol',
    'Diesel',
    'Electric',
    'Hybrid',
    'Plugin',
    'Hydrogen',
  ]
  return fuelTypes[fuelType] || 'Unknown'
}

const getVehicleTypeString = (vehicleType: number): string => {
  const vehicleTypes = [
    'Hatchback',
    'Sedan',
    'SUV',
    'Coupe',
    'Convertible',
    'Wagon',
    'Pickup',
    'Minivan',
  ]
  return vehicleTypes[vehicleType] || 'Unknown'
}

const ChatInterface = ({ onRecommendationsUpdated }: ChatInterfaceProps) => {
  const [messages, setMessages] = useState<Message[]>([])
  const [input, setInput] = useState<string>('')
  const [isLoading, setIsLoading] = useState<boolean>(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const { token } = useContext(AuthContext)

  // Load chat history on component mount
  useEffect(() => {
    const loadChatHistory = async () => {
      try {
        const response = await axios.get('/api/chat/history', {
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json',
          },
        })

        if (response.data) {
          const historyData = Array.isArray(response.data)
            ? response.data
            : response.data.$values || []

          const formattedHistory = historyData
            .map((msg: ChatHistoryItem) => ({
              id: msg.id,
              content: msg.userMessage,
              sender: 'user' as const,
              timestamp: new Date(msg.timestamp),
            }))
            .concat(
              historyData.map((msg: ChatHistoryItem) => ({
                id: `ai-${msg.id}`,
                content: msg.aiResponse,
                sender: 'ai' as const,
                timestamp: new Date(msg.timestamp),
              }))
            )
            .sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime())

          setMessages(formattedHistory)
        }
      } catch (error) {
        console.error('Failed to load chat history:', error)
      }
    }

    if (token) {
      loadChatHistory()
    }
  }, [token])

  // Scroll to bottom of messages when messages update
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }, [messages])

  const handleSendMessage = async (e: React.FormEvent) => {
    e.preventDefault()

    if (!input.trim()) return

    const userMessage: Message = {
      id: Date.now(),
      content: input,
      sender: 'user',
      timestamp: new Date(),
    }

    setMessages((prev) => [...prev, userMessage])
    setInput('')
    setIsLoading(true)

    try {
      const response = await axios.post(
        '/api/chat/message',
        { content: input },
        {
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json',
          },
        }
      )

      if (response.data) {
        const aiMessage: Message = {
          id: `ai-${Date.now()}`,
          content: response.data.message,
          sender: 'ai',
          timestamp: new Date(),
          vehicles: response.data.recommendedVehicles,
          parameters: response.data.parameters,
        }

        setMessages((prev) => [...prev, aiMessage])

        // Update recommendations in parent component
        if (onRecommendationsUpdated && response.data.recommendedVehicles) {
          onRecommendationsUpdated(
            response.data.recommendedVehicles,
            response.data.parameters
          )
        }
      }
    } catch (error) {
      console.error('Failed to send message:', error)

      const errorMessage: Message = {
        id: `error-${Date.now()}`,
        content:
          'Sorry, I encountered an error processing your request. Please try again.',
        sender: 'ai',
        timestamp: new Date(),
      }

      setMessages((prev) => [...prev, errorMessage])
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div className="flex flex-col h-full bg-white rounded-lg shadow-lg">
      <div className="p-4 bg-blue-600 text-white rounded-t-lg">
        <h2 className="text-xl font-semibold">Smart Auto Assistant</h2>
        <p className="text-sm text-blue-100">
          Ask me about cars and I'll help you find the perfect match!
        </p>
      </div>

      <div className="flex-1 overflow-y-auto p-4 space-y-4">
        {messages.length === 0 && (
          <div className="flex items-center justify-center h-full">
            <div className="text-center text-gray-500">
              <p className="font-medium">Welcome to Smart Auto Assistant!</p>
              <p className="text-sm mt-2">Ask me questions like:</p>
              <ul className="text-sm mt-1 space-y-1">
                <li>"I'm looking for an SUV under €30,000"</li>
                <li>"Show me electric cars with good range"</li>
                <li>"What family cars would you recommend?"</li>
              </ul>
            </div>
          </div>
        )}

        {messages.map((message) => (
          <div
            key={message.id}
            className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}
          >
            <div
              className={`max-w-3/4 rounded-lg p-3 ${
                message.sender === 'user'
                  ? 'bg-blue-100 text-blue-900'
                  : 'bg-gray-100 text-gray-900'
              }`}
            >
              <p className="whitespace-pre-wrap">{message.content}</p>

              {message.vehicles && message.vehicles.length > 0 && (
                <div className="mt-3 space-y-2">
                  <p className="font-medium text-sm text-blue-700">
                    Here are some recommendations:
                  </p>
                  <div className="grid grid-cols-1 gap-2">
                    {message.vehicles.slice(0, 2).map((vehicle) => (
                      <div
                        key={vehicle.id}
                        className="flex items-center p-2 bg-white rounded-md shadow-sm"
                      >
                        <img
                          src={getImageUrl(vehicle)}
                          alt={`${vehicle.year} ${vehicle.make} ${vehicle.model}`}
                          className="w-12 h-12 object-cover rounded-md"
                        />
                        <div className="ml-2 flex-1">
                          <p className="font-medium text-sm">
                            {vehicle.year} {vehicle.make} {vehicle.model}
                          </p>
                          <p className="text-xs text-gray-600">
                            {formatCurrency(vehicle.price)} ·{' '}
                            {getFuelTypeString(vehicle.fuelType)} ·{' '}
                            {getVehicleTypeString(vehicle.vehicleType)}
                          </p>
                        </div>
                      </div>
                    ))}
                    {message.vehicles.length > 2 && (
                      <p className="text-xs text-blue-600 text-center">
                        + {message.vehicles.length - 2} more recommendations
                      </p>
                    )}
                  </div>
                </div>
              )}

              <p className="text-xs text-gray-500 mt-1">
                {message.timestamp.toLocaleTimeString([], {
                  hour: '2-digit',
                  minute: '2-digit',
                })}
              </p>
            </div>
          </div>
        ))}

        {isLoading && (
          <div className="flex justify-start">
            <div className="bg-gray-100 rounded-lg p-4">
              <div className="animate-pulse flex space-x-2 justify-center">
                <div className="rounded-full bg-blue-400 h-2 w-2"></div>
                <div className="rounded-full bg-blue-400 h-2 w-2"></div>
                <div className="rounded-full bg-blue-400 h-2 w-2"></div>
              </div>
              <p className="text-xs text-gray-500 mt-1">Thinking...</p>
            </div>
          </div>
        )}

        <div ref={messagesEndRef} />
      </div>

      <form onSubmit={handleSendMessage} className="p-4 border-t">
        <div className="flex">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            placeholder="Ask about cars, features, or preferences..."
            className="flex-1 p-2 border rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            disabled={isLoading}
          />
          <button
            type="submit"
            className="bg-blue-600 text-white px-4 py-2 rounded-r-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50"
            disabled={isLoading || !input.trim()}
          >
            Send
          </button>
        </div>
      </form>
    </div>
  )
}

export default ChatInterface

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/components/layout/Footer.tsx`:

```tsx
import { Box, Container, Grid, Typography, Link } from '@mui/material'
import {
  Facebook as FacebookIcon,
  Twitter as TwitterIcon,
  Instagram as InstagramIcon,
  Email as EmailIcon,
  Phone as PhoneIcon,
  LocationOn as LocationIcon,
} from '@mui/icons-material'
import { Link as RouterLink } from 'react-router-dom'

const Footer = () => {
  const currentYear = new Date().getFullYear()

  return (
    <Box
      component="footer"
      sx={{ bgcolor: 'primary.dark', color: 'white', py: 6, mt: 'auto' }}
    >
      <Container>
        <Grid container spacing={4}>
          <Grid item xs={12} md={3}>
            <Typography variant="h6" gutterBottom>
              Smart Auto Trader
            </Typography>
            <Typography
              variant="body2"
              color="text.secondary"
              sx={{ color: 'rgba(255, 255, 255, 0.7)' }}
            >
              Find your perfect vehicle with our AI-powered recommendation
              system.
            </Typography>
          </Grid>

          <Grid item xs={12} md={3}>
            <Typography variant="h6" gutterBottom>
              Quick Links
            </Typography>
            <Box component="ul" sx={{ listStyle: 'none', p: 0, m: 0 }}>
              <Box component="li" sx={{ mb: 1 }}>
                <Link
                  component={RouterLink}
                  to="/"
                  color="inherit"
                  underline="hover"
                >
                  Home
                </Link>
              </Box>
              <Box component="li" sx={{ mb: 1 }}>
                <Link
                  component={RouterLink}
                  to="/vehicles"
                  color="inherit"
                  underline="hover"
                >
                  Vehicles
                </Link>
              </Box>
              <Box component="li" sx={{ mb: 1 }}>
                <Link
                  component={RouterLink}
                  to="/login"
                  color="inherit"
                  underline="hover"
                >
                  Login
                </Link>
              </Box>
              <Box component="li" sx={{ mb: 1 }}>
                <Link
                  component={RouterLink}
                  to="/register"
                  color="inherit"
                  underline="hover"
                >
                  Register
                </Link>
              </Box>
            </Box>
          </Grid>

          <Grid item xs={12} md={3}>
            <Typography variant="h6" gutterBottom>
              Contact Us
            </Typography>
            <Box component="ul" sx={{ listStyle: 'none', p: 0, m: 0 }}>
              <Box
                component="li"
                sx={{ mb: 1, display: 'flex', alignItems: 'center' }}
              >
                <EmailIcon fontSize="small" sx={{ mr: 1 }} />
                info@smartautotrader.com
              </Box>
              <Box
                component="li"
                sx={{ mb: 1, display: 'flex', alignItems: 'center' }}
              >
                <PhoneIcon fontSize="small" sx={{ mr: 1 }} />
                (555) 123-4567
              </Box>
              <Box
                component="li"
                sx={{ mb: 1, display: 'flex', alignItems: 'center' }}
              >
                <LocationIcon fontSize="small" sx={{ mr: 1 }} />
                123 Auto Lane, Vehicle City
              </Box>
            </Box>
          </Grid>

          <Grid item xs={12} md={3}>
            <Typography variant="h6" gutterBottom>
              Follow Us
            </Typography>
            <Box sx={{ display: 'flex', gap: 2 }}>
              <Link href="#" color="inherit">
                <FacebookIcon />
              </Link>
              <Link href="#" color="inherit">
                <TwitterIcon />
              </Link>
              <Link href="#" color="inherit">
                <InstagramIcon />
              </Link>
            </Box>
          </Grid>
        </Grid>

        <Box
          sx={{
            borderTop: 1,
            borderColor: 'rgba(255, 255, 255, 0.2)',
            mt: 4,
            pt: 2,
            textAlign: 'center',
          }}
        >
          <Typography
            variant="body2"
            color="text.secondary"
            sx={{ color: 'rgba(255, 255, 255, 0.7)' }}
          >
            &copy; {currentYear} Smart Auto Trader. All rights reserved.
          </Typography>
        </Box>
      </Container>
    </Box>
  )
}

export default Footer

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/components/layout/Header.tsx`:

```tsx
import { useContext } from 'react'
import { Link as RouterLink, useNavigate } from 'react-router-dom'
import {
  AppBar,
  Toolbar,
  Typography,
  Button,
  Box,
  Container,
} from '@mui/material'
import {
  DirectionsCar as CarIcon,
  Person as PersonIcon,
  ExitToApp as LogoutIcon,
} from '@mui/icons-material'
import { AuthContext } from '../../contexts/AuthContext'

const Header = () => {
  const { isAuthenticated, logout } = useContext(AuthContext)
  const navigate = useNavigate()

  const handleLogout = () => {
    logout()
    navigate('/')
  }

  return (
    <AppBar position="static">
      <Container>
        <Toolbar>
          {/* Logo */}
          <Typography
            variant="h6"
            component={RouterLink}
            to="/"
            sx={{
              display: 'flex',
              alignItems: 'center',
              textDecoration: 'none',
              color: 'inherit',
              flexGrow: 1,
            }}
          >
            <CarIcon sx={{ mr: 1 }} />
            Smart Auto Trader
          </Typography>

          {/* Navigation Links */}
          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>
            <Button color="inherit" component={RouterLink} to="/">
              Home
            </Button>
            <Button color="inherit" component={RouterLink} to="/vehicles">
              Vehicles
            </Button>
          </Box>

          {/* Auth Actions */}
          <Box>
            {isAuthenticated ? (
              <>
                <Button
                  color="inherit"
                  component={RouterLink}
                  to="/profile"
                  startIcon={<PersonIcon />}
                >
                  My Profile
                </Button>
                <Button
                  color="inherit"
                  onClick={handleLogout}
                  startIcon={<LogoutIcon />}
                >
                  Log Out
                </Button>
              </>
            ) : (
              <>
                <Button color="inherit" component={RouterLink} to="/login">
                  Log In
                </Button>
                <Button
                  variant="contained"
                  color="secondary"
                  component={RouterLink}
                  to="/register"
                  sx={{ ml: 1 }}
                >
                  Register
                </Button>
              </>
            )}
          </Box>
        </Toolbar>
      </Container>
    </AppBar>
  )
}

export default Header

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/components/vehicles/VehicleCard.tsx`:

```tsx
// src/components/vehicles/VehicleCard.tsx
import { Link } from 'react-router-dom'

interface VehicleImage {
  id: number
  imageUrl: string
  isPrimary: boolean
}

interface VehicleProps {
  vehicle: {
    id: number
    make: string
    model: string
    year: number
    price: number
    mileage: number
    images: VehicleImage[] | any // added 'any' to handle potential non-array format
  }
}

const VehicleCard: React.FC<VehicleProps> = ({ vehicle }) => {
  // Debug logging
  console.log('Vehicle ID:', vehicle.id)
  console.log('Images property:', vehicle.images)
  console.log('Images type:', typeof vehicle.images)
  console.log('Is images an array?', Array.isArray(vehicle.images))

  // Handle different possible formats of the images property
  let primaryImage = 'https://via.placeholder.com/300x200?text=No+Image'

  if (vehicle.images) {
    // If images is already an array
    if (Array.isArray(vehicle.images)) {
      console.log('Images array content:', vehicle.images)
      // Use a more defensive approach
      try {
        const primaryImg = vehicle.images.find(
          (img) => img && img.isPrimary === true
        )
        primaryImage =
          primaryImg?.imageUrl ||
          (vehicle.images[0] && vehicle.images[0].imageUrl) ||
          primaryImage
      } catch (error) {
        console.error('Error processing images array:', error)
      }
    }
    // If images has $values property (ASP.NET reference handling format)
    else if (vehicle.images.$values && Array.isArray(vehicle.images.$values)) {
      console.log('Images $values content:', vehicle.images.$values)
      // Use a more defensive approach
      try {
        // Log first item to see its structure
        if (vehicle.images.$values.length > 0) {
          console.log('First image item:', vehicle.images.$values[0])
        }

        // Check each item before using find
        let primaryImg = null
        for (const img of vehicle.images.$values) {
          if (
            img &&
            typeof img === 'object' &&
            'isPrimary' in img &&
            img.isPrimary === true
          ) {
            primaryImg = img
            break
          }
        }

        primaryImage =
          primaryImg?.imageUrl ||
          (vehicle.images.$values[0] && vehicle.images.$values[0].imageUrl) ||
          primaryImage
      } catch (error) {
        console.error('Error processing images.$values array:', error)
      }
    }
    // Log unexpected format for debugging
    else {
      console.error('Unexpected images format:', vehicle.images)
    }
  }
  return (
    <Link to={`/vehicles/${vehicle.id}`} className="block">
      <div className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
        <div className="aspect-w-16 aspect-h-9">
          <img
            src={primaryImage}
            alt={`${vehicle.make} ${vehicle.model}`}
            className="object-cover w-full h-full"
          />
        </div>
        <div className="p-4">
          <h3 className="text-lg font-semibold">
            {vehicle.year} {vehicle.make} {vehicle.model}
          </h3>
          <div className="mt-2 flex justify-between">
            <span className="text-blue-600 font-bold">
              ${vehicle.price.toLocaleString()}
            </span>
            <span className="text-gray-600">
              {vehicle.mileage.toLocaleString()} miles
            </span>
          </div>
        </div>
      </div>
    </Link>
  )
}

export default VehicleCard

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/components/vehicles/VehicleRecommendations.tsx`:

```tsx
import { useState, useEffect, useContext } from 'react'
import axios from 'axios'
import { AuthContext } from '../../contexts/AuthContext'

// Simple interfaces for the component
interface VehicleImage {
  id: number
  imageUrl: string
  isPrimary: boolean
}

interface Vehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  fuelType: number
  vehicleType: number
  images?: VehicleImage[] | { $values: VehicleImage[] }
}

// Helper function to extract arrays from ASP.NET response format
const extractArray = <T,>(data: T[] | { $values: T[] } | undefined): T[] => {
  if (!data) return []
  if (Array.isArray(data)) return data
  if (data && '$values' in data) return data.$values
  return []
}

const VehicleRecommendations = () => {
  const [vehicles, setVehicles] = useState<Vehicle[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const { user, token } = useContext(AuthContext)

  useEffect(() => {
    const fetchRecommendations = async () => {
      if (!user || !token) {
        setLoading(false)
        return
      }

      try {
        setLoading(true)
        console.log(`Fetching recommendations for user ID: ${user.id}`)

        const response = await axios.get('/api/recommendations', {
          params: { userId: user.id },
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json',
          },
        })

        console.log('API Response:', response.data)

        const vehiclesData: Vehicle[] = extractArray(response.data)
        setVehicles(vehiclesData)
        setError(null)
      } catch (err: any) {
        console.error('Error fetching recommendations:', err)
        setError('Failed to load recommendations')
      } finally {
        setLoading(false)
      }
    }

    fetchRecommendations()
  }, [user]) // Re-fetch when user changes

  // Helper function to get image URL
  const getImageUrl = (vehicle: Vehicle) => {
    const images = extractArray(vehicle.images)
    if (images.length === 0) return 'https://via.placeholder.com/200x150'

    const primaryImage = images.find((img) => img.isPrimary)
    return (
      primaryImage?.imageUrl ||
      images[0].imageUrl ||
      'https://via.placeholder.com/200x150'
    )
  }

  // Alternative content when user is not authenticated
  if (!user) {
    return (
      <div style={{ padding: '20px' }}>
        <h2>AI-Powered Recommendations</h2>
        <p>Please sign in to view personalized recommendations.</p>
      </div>
    )
  }

  return (
    <div style={{ padding: '20px' }}>
      <h2>AI-Powered Recommendations</h2>

      {loading ? (
        <p>Loading recommendations...</p>
      ) : error ? (
        <p style={{ color: 'red' }}>{error}</p>
      ) : vehicles.length === 0 ? (
        <p>
          No recommendations found. Browse more vehicles to get personalized
          suggestions.
        </p>
      ) : (
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',
            gap: '20px',
          }}
        >
          {vehicles.map((vehicle) => (
            <div
              key={vehicle.id}
              style={{
                border: '1px solid #eee',
                borderRadius: '8px',
                overflow: 'hidden',
                boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
              }}
            >
              <img
                src={getImageUrl(vehicle)}
                alt={`${vehicle.make} ${vehicle.model}`}
                style={{ width: '100%', height: '150px', objectFit: 'cover' }}
              />
              <div style={{ padding: '12px' }}>
                <h3 style={{ margin: '0 0 8px' }}>
                  {vehicle.year} {vehicle.make} {vehicle.model}
                </h3>
                <p
                  style={{
                    margin: '0 0 8px',
                    fontWeight: 'bold',
                    color: '#1976d2',
                  }}
                >
                  ${vehicle.price.toLocaleString()}
                </p>
                <a
                  href={`/vehicles/${vehicle.id}`}
                  style={{
                    display: 'inline-block',
                    backgroundColor: '#1976d2',
                    color: 'white',
                    padding: '6px 12px',
                    borderRadius: '4px',
                    textDecoration: 'none',
                  }}
                >
                  View Details
                </a>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  )
}

export default VehicleRecommendations

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/components/vehicles/VehicleFilters.tsx`:

```tsx
// src/components/vehicles/VehicleFilters.tsx
import { useState, useEffect } from 'react'

interface FilterProps {
  filters: {
    make?: string
    model?: string
    minYear?: number
    maxYear?: number
    minPrice?: number
    maxPrice?: number
    fuelType?: string
    transmission?: string
    vehicleType?: string
    sortBy: string
    ascending: boolean
  }
  onFilterChange: (filters: Partial<FilterProps['filters']>) => void
}

const VehicleFilters = ({ filters, onFilterChange }: FilterProps) => {
  const [localFilters, setLocalFilters] = useState(filters)

  // Update local state when props change
  useEffect(() => {
    setLocalFilters(filters)
  }, [filters])

  const handleInputChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>
  ) => {
    const { name, value, type } = e.target as HTMLInputElement

    let parsedValue: string | number | boolean | undefined = value

    // Convert numeric values
    if (type === 'number' && value) {
      parsedValue = Number(value)
    }

    // Handle empty values
    if (value === '') {
      parsedValue = undefined
    }

    setLocalFilters((prev) => ({
      ...prev,
      [name]: parsedValue,
    }))
  }

  const handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const { value } = e.target
    setLocalFilters((prev) => ({
      ...prev,
      sortBy: value,
    }))
  }

  const handleSortDirectionChange = (
    e: React.ChangeEvent<HTMLInputElement>
  ) => {
    setLocalFilters((prev) => ({
      ...prev,
      ascending: e.target.checked,
    }))
  }

  const applyFilters = () => {
    onFilterChange(localFilters)
  }

  const resetFilters = () => {
    const resetValues = {
      make: undefined,
      model: undefined,
      minYear: undefined,
      maxYear: undefined,
      minPrice: undefined,
      maxPrice: undefined,
      fuelType: undefined,
      transmission: undefined,
      vehicleType: undefined,
      sortBy: 'DateListed',
      ascending: false,
    }
    setLocalFilters(resetValues)
    onFilterChange(resetValues)
  }

  return (
    <div className="bg-white rounded-lg shadow-md p-4">
      <h2 className="text-xl font-semibold mb-4">Filters</h2>

      <div className="space-y-4">
        {/* Make */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">
            Make
          </label>
          <input
            type="text"
            name="make"
            value={localFilters.make || ''}
            onChange={handleInputChange}
            className="w-full p-2 border border-gray-300 rounded"
            placeholder="Any make"
          />
        </div>

        {/* Model */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">
            Model
          </label>
          <input
            type="text"
            name="model"
            value={localFilters.model || ''}
            onChange={handleInputChange}
            className="w-full p-2 border border-gray-300 rounded"
            placeholder="Any model"
          />
        </div>

        {/* Year Range */}
        <div className="grid grid-cols-2 gap-2">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Min Year
            </label>
            <input
              type="number"
              name="minYear"
              value={localFilters.minYear || ''}
              onChange={handleInputChange}
              className="w-full p-2 border border-gray-300 rounded"
              placeholder="From"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Max Year
            </label>
            <input
              type="number"
              name="maxYear"
              value={localFilters.maxYear || ''}
              onChange={handleInputChange}
              className="w-full p-2 border border-gray-300 rounded"
              placeholder="To"
            />
          </div>
        </div>

        {/* Price Range */}
        <div className="grid grid-cols-2 gap-2">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Min Price
            </label>
            <input
              type="number"
              name="minPrice"
              value={localFilters.minPrice || ''}
              onChange={handleInputChange}
              className="w-full p-2 border border-gray-300 rounded"
              placeholder="From"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Max Price
            </label>
            <input
              type="number"
              name="maxPrice"
              value={localFilters.maxPrice || ''}
              onChange={handleInputChange}
              className="w-full p-2 border border-gray-300 rounded"
              placeholder="To"
            />
          </div>
        </div>

        {/* Fuel Type */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">
            Fuel Type
          </label>
          <select
            name="fuelType"
            value={localFilters.fuelType || ''}
            onChange={handleInputChange}
            className="w-full p-2 border border-gray-300 rounded"
          >
            <option value="">Any fuel type</option>
            <option value="0">Petrol</option>
            <option value="1">Diesel</option>
            <option value="2">Electric</option>
            <option value="3">Hybrid</option>
            <option value="4">Plugin</option>
          </select>
        </div>

        {/* Transmission */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">
            Transmission
          </label>
          <select
            name="transmission"
            value={localFilters.transmission || ''}
            onChange={handleInputChange}
            className="w-full p-2 border border-gray-300 rounded"
          >
            <option value="">Any transmission</option>
            <option value="0">Manual</option>
            <option value="1">Automatic</option>
            <option value="2">Semi-Automatic</option>
          </select>
        </div>

        {/* Vehicle Type */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">
            Vehicle Type
          </label>
          <select
            name="vehicleType"
            value={localFilters.vehicleType || ''}
            onChange={handleInputChange}
            className="w-full p-2 border border-gray-300 rounded"
          >
            <option value="">Any type</option>
            <option value="0">Sedan</option>
            <option value="1">SUV</option>
            <option value="2">Hatchback</option>
            <option value="3">Estate</option>
            <option value="4">Coupe</option>
            <option value="5">Convertible</option>
            <option value="6">Pickup</option>
            <option value="7">Van</option>
          </select>
        </div>

        {/* Sort By */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">
            Sort By
          </label>
          <select
            name="sortBy"
            value={localFilters.sortBy}
            onChange={handleSortChange}
            className="w-full p-2 border border-gray-300 rounded"
          >
            <option value="DateListed">Date Listed</option>
            <option value="Price">Price</option>
            <option value="Year">Year</option>
            <option value="Mileage">Mileage</option>
            <option value="Make">Make</option>
          </select>
        </div>

        {/* Sort Direction */}
        <div className="flex items-center">
          <input
            type="checkbox"
            id="ascending"
            checked={localFilters.ascending}
            onChange={handleSortDirectionChange}
            className="h-4 w-4 text-blue-600 rounded"
          />
          <label htmlFor="ascending" className="ml-2 text-sm text-gray-700">
            Ascending order
          </label>
        </div>

        {/* Action Buttons */}
        <div className="flex space-x-2 pt-2">
          <button
            onClick={applyFilters}
            className="flex-1 bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700"
          >
            Apply
          </button>
          <button
            onClick={resetFilters}
            className="flex-1 bg-gray-200 text-gray-800 py-2 px-4 rounded hover:bg-gray-300"
          >
            Reset
          </button>
        </div>
      </div>
    </div>
  )
}

export default VehicleFilters

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/vite-env.d.ts`:

```ts
/// <reference types="vite/client" />

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/assets/react.svg`:

```svg
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/pages/RegisterPage.tsx`:

```tsx
// src/pages/RegisterPage.tsx
import { useState, useContext } from 'react'
import { Link, useNavigate } from 'react-router-dom'
import { AuthContext } from '../contexts/AuthContext'
import { UserRegistration } from '../contexts/AuthContext'

const RegisterPage = () => {
  const [formData, setFormData] = useState<UserRegistration>({
    username: '',
    email: '',
    password: '',
    firstName: '',
    lastName: '',
    phoneNumber: '',
  })
  const [confirmPassword, setConfirmPassword] = useState('')
  const [error, setError] = useState<string | null>(null)
  const [loading, setLoading] = useState(false)

  const { register } = useContext(AuthContext)
  const navigate = useNavigate()

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()

    // Basic validation
    if (!formData.username || !formData.email || !formData.password) {
      setError('Username, email and password are required')
      return
    }

    if (formData.password !== confirmPassword) {
      setError('Passwords do not match')
      return
    }

    setLoading(true)
    setError(null)

    try {
      await register(formData)
      navigate('/') // Redirect to home after successful registration
    } catch (err: unknown) {
      const errorMessage =
        err instanceof Error
          ? err.message
          : 'Registration failed. Please try again.'
      setError(errorMessage)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="max-w-md mx-auto bg-white rounded-lg shadow-md overflow-hidden">
      <div className="px-6 py-8">
        <h2 className="text-2xl font-bold text-center mb-6">
          Create an Account
        </h2>

        {error && (
          <div className="bg-red-50 border border-red-200 text-red-800 rounded-md p-3 mb-4">
            {error}
          </div>
        )}

        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label
              htmlFor="username"
              className="block text-gray-700 font-medium mb-2"
            >
              Username*
            </label>
            <input
              type="text"
              id="username"
              name="username"
              value={formData.username}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Choose a username"
              required
            />
          </div>

          <div className="mb-4">
            <label
              htmlFor="email"
              className="block text-gray-700 font-medium mb-2"
            >
              Email*
            </label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="your@email.com"
              required
            />
          </div>

          <div className="grid grid-cols-2 gap-4 mb-4">
            <div>
              <label
                htmlFor="firstName"
                className="block text-gray-700 font-medium mb-2"
              >
                First Name
              </label>
              <input
                type="text"
                id="firstName"
                name="firstName"
                value={formData.firstName}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="First name"
              />
            </div>
            <div>
              <label
                htmlFor="lastName"
                className="block text-gray-700 font-medium mb-2"
              >
                Last Name
              </label>
              <input
                type="text"
                id="lastName"
                name="lastName"
                value={formData.lastName}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Last name"
              />
            </div>
          </div>

          <div className="mb-4">
            <label
              htmlFor="phoneNumber"
              className="block text-gray-700 font-medium mb-2"
            >
              Phone Number
            </label>
            <input
              type="tel"
              id="phoneNumber"
              name="phoneNumber"
              value={formData.phoneNumber}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Phone number"
            />
          </div>

          <div className="mb-4">
            <label
              htmlFor="password"
              className="block text-gray-700 font-medium mb-2"
            >
              Password*
            </label>
            <input
              type="password"
              id="password"
              name="password"
              value={formData.password}
              onChange={handleChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Create a password"
              required
            />
          </div>

          <div className="mb-6">
            <label
              htmlFor="confirmPassword"
              className="block text-gray-700 font-medium mb-2"
            >
              Confirm Password*
            </label>
            <input
              type="password"
              id="confirmPassword"
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Confirm your password"
              required
            />
          </div>

          <button
            type="submit"
            disabled={loading}
            className="w-full bg-blue-600 text-white py-2 px-4 rounded-md font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50"
          >
            {loading ? 'Creating Account...' : 'Register'}
          </button>
        </form>

        <div className="mt-6 text-center">
          <p className="text-gray-600">
            Already have an account?{' '}
            <Link
              to="/login"
              className="text-blue-600 hover:underline font-medium"
            >
              Log In
            </Link>
          </p>
        </div>
      </div>
    </div>
  )
}

export default RegisterPage

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/pages/LoginPage.tsx`:

```tsx
// src/pages/LoginPage.tsx (completing the component)
import { useState, useContext } from 'react'
import { Link, useNavigate, useLocation } from 'react-router-dom'
import { AuthContext } from '../contexts/AuthContext'

const LoginPage = () => {
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [error, setError] = useState<string | null>(null)
  const [loading, setLoading] = useState(false)

  const { login } = useContext(AuthContext)
  const navigate = useNavigate()
  const location = useLocation()

  // Get redirect path from location state or default to home
  const from = (location.state as { from?: string })?.from || '/'

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()

    if (!email || !password) {
      setError('Please enter your email and password')
      return
    }

    setLoading(true)
    setError(null)

    try {
      await login(email, password)
      navigate(from, { replace: true })
    } catch (err: unknown) {
      const errorMessage =
        err instanceof Error
          ? err.message
          : 'Failed to login. Please check your credentials.'
      setError(errorMessage)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="max-w-md mx-auto bg-white rounded-lg shadow-md overflow-hidden">
      <div className="px-6 py-8">
        <h2 className="text-2xl font-bold text-center mb-6">Log In</h2>

        {error && (
          <div className="bg-red-50 border border-red-200 text-red-800 rounded-md p-3 mb-4">
            {error}
          </div>
        )}

        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label
              htmlFor="email"
              className="block text-gray-700 font-medium mb-2"
            >
              Email
            </label>
            <input
              type="email"
              id="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="your@email.com"
              required
            />
          </div>

          <div className="mb-6">
            <div className="flex justify-between items-center mb-2">
              <label
                htmlFor="password"
                className="block text-gray-700 font-medium"
              >
                Password
              </label>
              <Link
                to="/forgot-password"
                className="text-sm text-blue-600 hover:underline"
              >
                Forgot Password?
              </Link>
            </div>
            <input
              type="password"
              id="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="••••••••"
              required
            />
          </div>

          <button
            type="submit"
            disabled={loading}
            className="w-full bg-blue-600 text-white py-2 px-4 rounded-md font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50"
          >
            {loading ? 'Logging in...' : 'Log In'}
          </button>
        </form>

        <div className="mt-6 text-center">
          <p className="text-gray-600">
            Don't have an account?{' '}
            <Link
              to="/register"
              className="text-blue-600 hover:underline font-medium"
            >
              Register
            </Link>
          </p>
        </div>
      </div>
    </div>
  )
}

export default LoginPage

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/pages/ProfilePage.tsx`:

```tsx
// src/pages/ProfilePage.tsx
import { useState, useEffect, useContext } from 'react'
import { Link, Navigate } from 'react-router-dom'
import { AuthContext } from '../contexts/AuthContext'
import { favoriteService, inquiryService } from '../services/api'
import VehicleCard from '../components/vehicles/VehicleCard'

// Define VehicleImage interface
interface VehicleImage {
  id: number
  imageUrl: string
  isPrimary: boolean
}

// Define ReferenceWrapper for ASP.NET serialization
interface ReferenceWrapper<T> {
  $id?: string
  $values: T[]
}

// Define Vehicle interface
interface Vehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  images: VehicleImage[] | ReferenceWrapper<VehicleImage> | any
}

// Define Inquiry interface
interface Inquiry {
  id: number
  vehicleId: number
  subject: string
  message: string
  response?: string
  dateSent: string
  dateReplied?: string
  status: string
  vehicle?: Vehicle
}

// Define what the arrays might look like with ASP.NET serialization
type SerializedData<T> = T[] | ReferenceWrapper<T> | any

// Helper function to extract arrays from ASP.NET reference format
const extractArray = <T,>(data: SerializedData<T>): T[] => {
  if (!data) return []

  if (Array.isArray(data)) {
    return data
  } else if (typeof data === 'object' && data !== null && '$values' in data) {
    return (data as ReferenceWrapper<T>).$values
  }

  return []
}

const ProfilePage = () => {
  const {
    user,
    isAuthenticated,
    loading: authLoading,
  } = useContext(AuthContext)
  const [favoriteVehicles, setFavoriteVehicles] = useState<
    SerializedData<Vehicle>
  >([])
  const [inquiries, setInquiries] = useState<SerializedData<Inquiry>>([])
  const [activeTab, setActiveTab] = useState('favorites')
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const fetchUserData = async () => {
      if (!isAuthenticated) return

      setLoading(true)

      try {
        if (activeTab === 'favorites') {
          const favorites = await favoriteService.getFavorites()
          setFavoriteVehicles(favorites)
        } else if (activeTab === 'inquiries') {
          const userInquiries = await inquiryService.getInquiries()
          setInquiries(userInquiries)
        }
      } catch (error) {
        console.error(`Error fetching ${activeTab}:`, error)
      } finally {
        setLoading(false)
      }
    }

    fetchUserData()
  }, [isAuthenticated, activeTab])

  // Redirect if not authenticated
  if (!authLoading && !isAuthenticated) {
    return <Navigate to="/login" state={{ from: '/profile' }} />
  }

  if (authLoading) {
    return <div className="text-center py-12">Loading profile...</div>
  }

  // Extract arrays from potentially reference-wrapped data
  const favoritesArray = extractArray<Vehicle>(favoriteVehicles)
  const inquiriesArray = extractArray<Inquiry>(inquiries)

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="bg-white rounded-lg shadow-md overflow-hidden">
        {/* Profile header */}
        <div className="bg-blue-600 px-6 py-8 text-white">
          <h1 className="text-2xl font-bold mb-2">My Profile</h1>
          <p>
            {user?.firstName} {user?.lastName} ({user?.username})
          </p>
          <p className="text-blue-100">{user?.email}</p>
        </div>

        {/* Tabs */}
        <div className="border-b">
          <nav className="flex">
            <button
              onClick={() => setActiveTab('favorites')}
              className={`px-6 py-4 font-medium ${
                activeTab === 'favorites'
                  ? 'border-b-2 border-blue-600 text-blue-600'
                  : 'text-gray-500 hover:text-gray-700'
              }`}
            >
              My Favorites
            </button>
            <button
              onClick={() => setActiveTab('inquiries')}
              className={`px-6 py-4 font-medium ${
                activeTab === 'inquiries'
                  ? 'border-b-2 border-blue-600 text-blue-600'
                  : 'text-gray-500 hover:text-gray-700'
              }`}
            >
              My Inquiries
            </button>
          </nav>
        </div>

        {/* Tab content */}
        <div className="p-6">
          {/* Favorites tab */}
          {activeTab === 'favorites' && (
            <>
              {loading ? (
                <div className="text-center py-8">
                  Loading your favorites...
                </div>
              ) : favoritesArray.length === 0 ? (
                <div className="text-center py-8">
                  <p className="text-gray-600 mb-4">
                    You haven't added any vehicles to your favorites yet.
                  </p>
                  <Link
                    to="/vehicles"
                    className="inline-block bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700"
                  >
                    Browse Vehicles
                  </Link>
                </div>
              ) : (
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {favoritesArray.map((vehicle: Vehicle) => (
                    <VehicleCard key={vehicle.id} vehicle={vehicle} />
                  ))}
                </div>
              )}
            </>
          )}

          {/* Inquiries tab */}
          {activeTab === 'inquiries' && (
            <>
              {loading ? (
                <div className="text-center py-8">
                  Loading your inquiries...
                </div>
              ) : inquiriesArray.length === 0 ? (
                <div className="text-center py-8">
                  <p className="text-gray-600 mb-4">
                    You haven't sent any inquiries yet.
                  </p>
                  <Link
                    to="/vehicles"
                    className="inline-block bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700"
                  >
                    Browse Vehicles
                  </Link>
                </div>
              ) : (
                <div className="space-y-4">
                  {inquiriesArray.map((inquiry: Inquiry) => (
                    <div
                      key={inquiry.id}
                      className="border rounded-lg overflow-hidden"
                    >
                      <div className="bg-gray-50 px-4 py-3 border-b">
                        <div className="flex justify-between items-center">
                          <h3 className="font-semibold">{inquiry.subject}</h3>
                          <span
                            className={`px-2 py-1 rounded-full text-xs font-medium ${
                              inquiry.status === 'New'
                                ? 'bg-blue-100 text-blue-800'
                                : inquiry.status === 'Read'
                                  ? 'bg-yellow-100 text-yellow-800'
                                  : inquiry.status === 'Replied'
                                    ? 'bg-green-100 text-green-800'
                                    : 'bg-gray-100 text-gray-800'
                            }`}
                          >
                            {inquiry.status}
                          </span>
                        </div>
                        <p className="text-sm text-gray-500">
                          {new Date(inquiry.dateSent).toLocaleDateString()} •
                          {inquiry.vehicle &&
                            ` regarding ${inquiry.vehicle.year} ${inquiry.vehicle.make} ${inquiry.vehicle.model}`}
                        </p>
                      </div>
                      <div className="p-4">
                        <div className="mb-4">
                          <h4 className="text-sm font-medium text-gray-500 mb-1">
                            Your message:
                          </h4>
                          <p className="text-gray-700">{inquiry.message}</p>
                        </div>

                        {inquiry.response && (
                          <div className="bg-blue-50 p-4 rounded-md">
                            <h4 className="text-sm font-medium text-blue-700 mb-1">
                              Response:
                            </h4>
                            <p className="text-gray-700">{inquiry.response}</p>
                            <p className="text-xs text-gray-500 mt-2">
                              Replied on{' '}
                              {inquiry.dateReplied &&
                                new Date(
                                  inquiry.dateReplied
                                ).toLocaleDateString()}
                            </p>
                          </div>
                        )}

                        {inquiry.status !== 'Closed' && (
                          <div className="mt-4 text-right">
                            <button
                              onClick={async () => {
                                try {
                                  await inquiryService.closeInquiry(inquiry.id)
                                  setInquiries((prev: any) => {
                                    const prevArray =
                                      extractArray<Inquiry>(prev)
                                    return prevArray.map((i) =>
                                      i.id === inquiry.id
                                        ? { ...i, status: 'Closed' }
                                        : i
                                    )
                                  })
                                } catch (error) {
                                  console.error('Error closing inquiry:', error)
                                }
                              }}
                              className="text-sm text-gray-600 hover:text-gray-800"
                            >
                              Mark as Closed
                            </button>
                          </div>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </>
          )}
        </div>
      </div>
    </div>
  )
}

export default ProfilePage

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/pages/RecommendationsPage.tsx`:

```tsx
import { useContext, useState } from 'react'
import { Navigate } from 'react-router-dom'
import { AuthContext } from '../contexts/AuthContext'
import VehicleRecommendations from '../components/vehicles/VehicleRecommendations'
import ChatInterface from '../components/chat/ChatInterface'

// Types for the chat component integration
interface Vehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  fuelType: number
  vehicleType: number
  images?: any
}

interface RecommendationParameters {
  minPrice?: number
  maxPrice?: number
  minYear?: number
  maxYear?: number
  preferredMakes?: string[]
  preferredVehicleTypes?: number[]
  preferredFuelTypes?: number[]
  desiredFeatures?: string[]
}

const RecommendationsPage = () => {
  const { isAuthenticated, loading } = useContext(AuthContext)
  const [activeTab, setActiveTab] = useState<'recommendations' | 'assistant'>(
    'recommendations'
  )
  const [recommendedVehicles, setRecommendedVehicles] = useState<Vehicle[]>([])
  const [parameters, setParameters] = useState<RecommendationParameters>({})

  // Show loading state while checking authentication
  if (loading) {
    return <div className="text-center py-8">Loading...</div>
  }

  // Redirect to login if not authenticated
  if (!isAuthenticated) {
    return <Navigate to="/login" state={{ from: '/recommendations' }} />
  }

  // Handle recommendations update from chat
  const handleRecommendationsUpdate = (
    vehicles: Vehicle[],
    newParams: RecommendationParameters
  ) => {
    setRecommendedVehicles(vehicles)
    setParameters(newParams)
    setActiveTab('recommendations')
  }

  return (
    <div className="container mx-auto px-4">
      <div className="mb-6">
        <h1 className="text-3xl font-bold">Personalized Recommendations</h1>
        <p className="text-gray-600 mt-2">
          Our AI analyzes your browsing history and preferences to recommend
          vehicles you might like.
        </p>
      </div>

      {/* Tabs Navigation */}
      <div className="mb-6 border-b border-gray-200">
        <ul className="flex flex-wrap -mb-px">
          <li className="mr-2">
            <button
              className={`inline-block py-4 px-4 text-sm font-medium ${
                activeTab === 'recommendations'
                  ? 'text-blue-600 border-b-2 border-blue-600'
                  : 'text-gray-500 hover:text-gray-700'
              }`}
              onClick={() => setActiveTab('recommendations')}
            >
              Recommendations
            </button>
          </li>
          <li className="mr-2">
            <button
              className={`inline-block py-4 px-4 text-sm font-medium ${
                activeTab === 'assistant'
                  ? 'text-blue-600 border-b-2 border-blue-600'
                  : 'text-gray-500 hover:text-gray-700'
              }`}
              onClick={() => setActiveTab('assistant')}
            >
              AI Assistant
            </button>
          </li>
        </ul>
      </div>

      {/* Tab Content */}
      <div className="mb-8">
        {activeTab === 'recommendations' ? (
          recommendedVehicles.length > 0 ? (
            // If we have chat-recommended vehicles, show those
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {recommendedVehicles.map((vehicle) => (
                <div
                  key={vehicle.id}
                  className="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow"
                >
                  {/* Add your vehicle card content here */}
                  <div className="p-4">
                    <h3 className="font-semibold text-lg">
                      {vehicle.year} {vehicle.make} {vehicle.model}
                    </h3>
                    <p className="font-bold text-blue-600 mt-1">
                      €{vehicle.price.toLocaleString()}
                    </p>
                    <a
                      href={`/vehicles/${vehicle.id}`}
                      className="mt-3 inline-block bg-blue-600 text-white px-4 py-2 rounded-md text-sm hover:bg-blue-700"
                    >
                      View Details
                    </a>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            // Otherwise show the standard recommendations component
            <VehicleRecommendations />
          )
        ) : (
          // Show chat interface when on assistant tab
          <div
            className="bg-gray-50 p-4 rounded-lg shadow-sm"
            style={{ height: '600px' }}
          >
            <ChatInterface
              onRecommendationsUpdated={handleRecommendationsUpdate}
            />
          </div>
        )}
      </div>

      {/* If on recommendations tab, show assistant promo */}
      {activeTab === 'recommendations' && (
        <div className="bg-blue-50 p-5 rounded-lg shadow-sm">
          <h2 className="text-xl font-semibold text-blue-800">
            Need help finding your perfect car?
          </h2>
          <p className="mt-2 text-blue-700">
            Our AI assistant can help you discover vehicles based on your
            specific requirements and preferences.
          </p>
          <button
            onClick={() => setActiveTab('assistant')}
            className="mt-4 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors"
          >
            Chat with AI Assistant
          </button>
        </div>
      )}
    </div>
  )
}

export default RecommendationsPage

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/pages/VehicleDetailPage.tsx`:

```tsx
// src/pages/VehicleDetailPage.tsx
import { useState, useEffect, useContext } from 'react'
import { useParams, Link } from 'react-router-dom'
import { vehicleService, favoriteService } from '../services/api'
import { AuthContext } from '../contexts/AuthContext'

// Define what your API actually returns
interface VehicleImage {
  id: number
  imageUrl: string
  isPrimary: boolean
}

// Define a type for the ASP.NET Core reference format
interface ReferenceWrapper {
  $id?: string
  $values: VehicleImage[]
}

interface ApiVehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  fuelType: string
  transmission: string
  vehicleType: string
  description: string
  // Define more precisely to help TypeScript
  images: VehicleImage[] | ReferenceWrapper | any
}

const VehicleDetailPage = () => {
  const { id } = useParams<{ id: string }>()
  const [vehicle, setVehicle] = useState<ApiVehicle | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [activeImageIndex, setActiveImageIndex] = useState(0)
  const [isFavorite, setIsFavorite] = useState(false)
  const [checkingFavorite, setCheckingFavorite] = useState(false)
  const { isAuthenticated } = useContext(AuthContext)

  useEffect(() => {
    const fetchVehicle = async () => {
      if (!id) return

      setLoading(true)
      setError(null)

      try {
        const data = await vehicleService.getVehicle(parseInt(id))
        setVehicle(data)

        // Handle both array formats for images
        let imageArray: VehicleImage[] = []

        // Check if images exists
        if (data.images) {
          // Check if images is an array
          if (Array.isArray(data.images)) {
            imageArray = data.images
          }
          // Check if images has $values property using a type guard
          else if (
            typeof data.images === 'object' &&
            data.images !== null &&
            '$values' in data.images
          ) {
            // Use a safe type assertion
            const imagesWithValues = data.images as { $values: VehicleImage[] }
            imageArray = imagesWithValues.$values
          }
        }

        // Set primary image as active
        if (imageArray.length > 0) {
          const primaryIndex = imageArray.findIndex((img) => img.isPrimary)
          setActiveImageIndex(primaryIndex >= 0 ? primaryIndex : 0)
        }
      } catch (err) {
        console.error('Error fetching vehicle:', err)
        setError('Failed to load vehicle details')
      } finally {
        setLoading(false)
      }
    }

    fetchVehicle()
  }, [id])

  useEffect(() => {
    // Check if vehicle is in favorites
    const checkFavorite = async () => {
      if (!isAuthenticated || !id) return

      setCheckingFavorite(true)
      try {
        const favoriteStatus = await favoriteService.checkFavorite(parseInt(id))
        setIsFavorite(favoriteStatus)
      } catch (err) {
        console.error('Error checking favorite status:', err)
      } finally {
        setCheckingFavorite(false)
      }
    }

    checkFavorite()
  }, [id, isAuthenticated])

  const handleToggleFavorite = async () => {
    if (!isAuthenticated || !id) return

    try {
      if (isFavorite) {
        await favoriteService.removeFavorite(parseInt(id))
      } else {
        await favoriteService.addFavorite(parseInt(id))
      }
      setIsFavorite(!isFavorite)
    } catch (err) {
      console.error('Error toggling favorite:', err)
    }
  }

  // Helper function to get image array regardless of format
  const getImageArray = (): VehicleImage[] => {
    if (!vehicle) return []

    if (Array.isArray(vehicle.images)) {
      return vehicle.images
    } else if (
      typeof vehicle.images === 'object' &&
      vehicle.images !== null &&
      '$values' in vehicle.images
    ) {
      // Use a safe type assertion
      const imagesWithValues = vehicle.images as { $values: VehicleImage[] }
      return imagesWithValues.$values
    }
    return []
  }

  // Helper function to get image URL with fallback
  const getImageUrl = (image: VehicleImage | undefined) => {
    if (!image || !image.imageUrl) {
      return `https://via.placeholder.com/800x450/3498db/ffffff?text=No+Image`
    }

    const isPlaceholderUrl = image.imageUrl.includes('placeholder.com/vehicles')
    if (isPlaceholderUrl && vehicle) {
      return `https://via.placeholder.com/800x450/3498db/ffffff?text=${vehicle.make}+${vehicle.model}`
    }

    return image.imageUrl
  }

  if (loading) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="text-center py-12">Loading vehicle details...</div>
      </div>
    )
  }

  if (error || !vehicle) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="bg-red-50 border border-red-200 text-red-800 rounded-lg p-4 text-center">
          {error || 'Vehicle not found'}
          <div className="mt-4">
            <Link
              to="/vehicles"
              className="inline-block bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
            >
              Back to Vehicles
            </Link>
          </div>
        </div>
      </div>
    )
  }

  const imageArray = getImageArray()

  return (
    <div className="container mx-auto px-4 py-8">
      {/* Breadcrumb */}
      <div className="text-sm text-gray-500 mb-6">
        <Link to="/" className="hover:text-blue-600">
          Home
        </Link>{' '}
        &gt;
        <Link to="/vehicles" className="hover:text-blue-600 mx-1">
          Vehicles
        </Link>{' '}
        &gt;
        <span className="text-gray-700">
          {vehicle.year} {vehicle.make} {vehicle.model}
        </span>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-5 gap-8">
        {/* Images and details */}
        <div className="lg:col-span-3">
          {/* Main image */}
          <div className="relative mb-4 bg-gray-100 rounded-lg overflow-hidden aspect-w-16 aspect-h-9">
            {imageArray.length > 0 ? (
              <img
                src={getImageUrl(imageArray[activeImageIndex])}
                alt={`${vehicle.make} ${vehicle.model}`}
                className="object-cover w-full h-full"
              />
            ) : (
              <div className="flex items-center justify-center h-full">
                <span className="text-gray-400">No image available</span>
              </div>
            )}
          </div>

          {/* Thumbnail images */}
          {imageArray.length > 1 && (
            <div className="grid grid-cols-5 gap-2">
              {imageArray.map((image, index) => (
                <button
                  key={image.id}
                  onClick={() => setActiveImageIndex(index)}
                  className={`border-2 rounded overflow-hidden aspect-w-1 aspect-h-1 ${
                    index === activeImageIndex
                      ? 'border-blue-500'
                      : 'border-transparent hover:border-gray-300'
                  }`}
                >
                  <img
                    src={getImageUrl(image)}
                    alt={`${vehicle.make} ${vehicle.model} thumbnail ${index + 1}`}
                    className="object-cover w-full h-full"
                  />
                </button>
              ))}
            </div>
          )}

          {/* Description */}
          <div className="mt-8">
            <h2 className="text-xl font-semibold mb-4">Description</h2>
            <div className="bg-white rounded-lg shadow p-4">
              <p className="text-gray-700 whitespace-pre-line">
                {vehicle.description}
              </p>
            </div>
          </div>
        </div>

        {/* Sidebar with summary and actions */}
        <div className="lg:col-span-2">
          <div className="bg-white rounded-lg shadow p-6 sticky top-4">
            <h1 className="text-2xl font-bold mb-2">
              {vehicle.year} {vehicle.make} {vehicle.model}
            </h1>

            <div className="text-3xl font-bold text-blue-600 mb-4">
              ${vehicle.price.toLocaleString()}
            </div>

            <div className="mb-6 space-y-2">
              <div className="flex justify-between text-gray-700">
                <span>Mileage:</span>
                <span className="font-semibold">
                  {vehicle.mileage.toLocaleString()} miles
                </span>
              </div>
              <div className="flex justify-between text-gray-700">
                <span>Fuel Type:</span>
                <span className="font-semibold">{vehicle.fuelType}</span>
              </div>
              <div className="flex justify-between text-gray-700">
                <span>Transmission:</span>
                <span className="font-semibold">{vehicle.transmission}</span>
              </div>
              <div className="flex justify-between text-gray-700">
                <span>Body Type:</span>
                <span className="font-semibold">{vehicle.vehicleType}</span>
              </div>
            </div>

            {/* Actions */}
            <div className="space-y-3">
              <Link
                to={`/inquiries/new?vehicleId=${vehicle.id}`}
                className="block w-full bg-blue-600 text-white text-center py-3 px-4 rounded-lg font-semibold hover:bg-blue-700"
              >
                Send Inquiry
              </Link>

              {isAuthenticated ? (
                <button
                  onClick={handleToggleFavorite}
                  disabled={checkingFavorite}
                  className={`block w-full py-3 px-4 rounded-lg font-semibold border ${
                    isFavorite
                      ? 'bg-red-50 text-red-600 border-red-200 hover:bg-red-100'
                      : 'bg-gray-50 text-gray-700 border-gray-200 hover:bg-gray-100'
                  }`}
                >
                  {checkingFavorite
                    ? 'Loading...'
                    : isFavorite
                      ? 'Remove from Favorites'
                      : 'Add to Favorites'}
                </button>
              ) : (
                <Link
                  to="/login"
                  className="block w-full bg-gray-50 text-gray-700 text-center py-3 px-4 rounded-lg font-semibold border border-gray-200 hover:bg-gray-100"
                >
                  Login to Save to Favorites
                </Link>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default VehicleDetailPage

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/pages/VehicleListingPage.tsx`:

```tsx
// src/pages/VehicleListingPage.tsx
import { useState, useEffect } from 'react'
import { vehicleService } from '../services/api'
import VehicleCard from '../components/vehicles/VehicleCard'
import VehicleFilters from '../components/vehicles/VehicleFilters'

interface Vehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  fuelType: string
  transmission: string
  vehicleType: string
  images: Array<{ id: number; imageUrl: string; isPrimary: boolean }>
}

interface FilterState {
  make?: string
  model?: string
  minYear?: number
  maxYear?: number
  minPrice?: number
  maxPrice?: number
  fuelType?: string
  transmission?: string
  vehicleType?: string
  sortBy: string
  ascending: boolean
}

const VehicleListingPage = () => {
  const [vehicles, setVehicles] = useState<Vehicle[]>([])
  const [loading, setLoading] = useState(true)
  const [page, setPage] = useState(1)
  const [totalPages, setTotalPages] = useState(1)
  const [filters, setFilters] = useState<FilterState>({
    sortBy: 'DateListed',
    ascending: false,
  })

  useEffect(() => {
    const loadVehicles = async () => {
      setLoading(true)
      try {
        const response = await vehicleService.getVehicles({
          ...filters,
          pageNumber: page,
          pageSize: 8,
        })

        setVehicles(response)

        // Axios response headers need to be accessed differently
        // If your API isn't returning headers correctly, you can adjust this:
        const totalCount = 20 // Default value or calculate from total vehicles
        const calculatedTotalPages = Math.ceil(totalCount / 8)
        setTotalPages(calculatedTotalPages || 1)
      } catch (error) {
        console.error('Error loading vehicles:', error)
      } finally {
        setLoading(false)
      }
    }

    loadVehicles()
  }, [filters, page])

  const handleFilterChange = (newFilters: Partial<FilterState>) => {
    setFilters((prev) => ({ ...prev, ...newFilters }))
    setPage(1) // Reset to first page when filters change
  }

  const handlePageChange = (newPage: number) => {
    setPage(newPage)
    window.scrollTo({ top: 0, behavior: 'smooth' })
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-8">Available Vehicles</h1>

      <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
        {/* Filters sidebar */}
        <div className="lg:col-span-1">
          <VehicleFilters
            filters={filters}
            onFilterChange={handleFilterChange}
          />
        </div>

        {/* Vehicle grid */}
        <div className="lg:col-span-3">
          {loading ? (
            <div className="flex justify-center items-center h-64">
              <p>Loading vehicles...</p>
            </div>
          ) : vehicles.length === 0 ? (
            <div className="bg-gray-50 rounded-lg p-8 text-center">
              <h3 className="text-xl font-semibold mb-2">No vehicles found</h3>
              <p className="text-gray-600">
                Try adjusting your filters to see more results.
              </p>
            </div>
          ) : (
            <>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {vehicles.map((vehicle) => (
                  <VehicleCard key={vehicle.id} vehicle={vehicle} />
                ))}
              </div>

              {/* Pagination */}
              <div className="flex justify-center mt-8">
                {Array.from({ length: totalPages }, (_, i) => i + 1).map(
                  (pageNum) => (
                    <button
                      key={pageNum}
                      onClick={() => handlePageChange(pageNum)}
                      className={`mx-1 px-4 py-2 rounded ${
                        pageNum === page
                          ? 'bg-blue-600 text-white'
                          : 'bg-gray-200 hover:bg-gray-300'
                      }`}
                    >
                      {pageNum}
                    </button>
                  )
                )}
              </div>
            </>
          )}
        </div>
      </div>
    </div>
  )
}

export default VehicleListingPage

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/pages/HomePage.tsx`:

```tsx
import { useEffect, useState } from 'react'
import { Link } from 'react-router-dom'
import { vehicleService } from '../services/api'
import VehicleCard from '../components/vehicles/VehicleCard'

interface Vehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  images: Array<{ id: number; imageUrl: string; isPrimary: boolean }>
}

const HomePage = () => {
  const [featuredVehicles, setFeaturedVehicles] = useState<Vehicle[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const loadFeaturedVehicles = async () => {
      try {
        // Get the latest 4 vehicles
        console.log('Fetching vehicles...');
        const response = await vehicleService.getVehicles({
          pageSize: 4,
          sortBy: 'DateListed',
          ascending: false,
        });
        
        console.log('API response type:', typeof response);
        console.log('Is array?', Array.isArray(response));
        console.log('Raw response:', response);
        
        // Safe check before setting state
        if (Array.isArray(response)) {
          setFeaturedVehicles(response);
        } else {
          console.error('Response is not an array:', response);
          setFeaturedVehicles([]); // Use empty array as fallback
        }
      } catch (error) {
        console.error('Error loading featured vehicles:', error);
        setFeaturedVehicles([]);
      } finally {
        setLoading(false);
      }
    };
  
    loadFeaturedVehicles();
  }, []);

  return (
    <div>
      <section className="hero bg-blue-600 text-white py-16">
        <div className="container mx-auto px-4">
          <h1 className="text-4xl font-bold mb-4">
            Welcome to Smart Auto Trader
          </h1>
          <p className="text-xl mb-8">
            Find your perfect vehicle with our AI-powered recommendations
          </p>
          <Link
            to="/vehicles"
            className="bg-white text-blue-600 px-6 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-colors"
          >
            Browse Vehicles
          </Link>
        </div>
      </section>

      <section className="py-12">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold mb-8 text-center">
            Featured Vehicles
          </h2>

          {loading ? (
            <p className="text-center">Loading featured vehicles...</p>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {featuredVehicles.map((vehicle) => (
                <VehicleCard key={vehicle.id} vehicle={vehicle} />
              ))}
            </div>
          )}

          <div className="text-center mt-8">
            <Link
              to="/vehicles"
              className="inline-block border border-blue-600 text-blue-600 px-6 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-colors"
            >
              View All Vehicles
            </Link>
          </div>
        </div>
      </section>
    </div>
  )
}

export default HomePage

```

`/Users/conorgillespie/Projects/SmartAutoTrader/frontend/src/services/api.ts`:

```ts
import axios from 'axios'

// Basic types that match backend models
export interface Vehicle {
  id: number
  make: string
  model: string
  year: number
  price: number
  mileage: number
  fuelType: string // This is a string, not a number
  transmission: string // This is a string, not a number
  vehicleType: string // This is a string, not a number
  description: string
  images: Array<{ id: number; imageUrl: string; isPrimary: boolean }>
}

// Simple params type for filtering
type VehicleParams = Record<string, string | number | boolean | undefined>

const API_URL = import.meta.env.VITE_API_URL || '/api'

// Create axios instance
const api = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json',
  },
})

// Add a request interceptor to attach the JWT token
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('token')
    if (token) {
      config.headers.Authorization = `Bearer ${token}`
    }
    return config
  },
  (error) => Promise.reject(error)
)

// Authentication service
export const authService = {
  login: async (email: string, password: string) => {
    const response = await api.post('/auth/login', { email, password })
    return response.data
  },
  register: async (userData: {
    username: string
    email: string
    password: string
    firstName?: string
    lastName?: string
    phoneNumber?: string
  }) => {
    const response = await api.post('/auth/register', userData)
    return response.data
  },
}

// Vehicle service
export const vehicleService = {
  // In api.ts, update the getVehicles method:
  getVehicles: async (params?: VehicleParams): Promise<Vehicle[]> => {
    try {
      const response = await api.get('/vehicles', { params })

      // Check if response.data is the reference-preserved format
      if (
        response.data &&
        response.data.$values &&
        Array.isArray(response.data.$values)
      ) {
        return response.data.$values
      }
      // Check if it's already an array
      else if (Array.isArray(response.data)) {
        return response.data
      }
      // Fallback to empty array
      else {
        console.error('API did not return an array:', response.data)
        return []
      }
    } catch (error) {
      console.error('Error fetching vehicles:', error)
      return []
    }
  },
  getVehicle: async (id: number) => {
    const response = await api.get<Vehicle>(`/vehicles/${id}`)
    return response.data
  },
}

// Favorites service
export const favoriteService = {
  getFavorites: async () => {
    const response = await api.get<Vehicle[]>('/favorites')
    return response.data
  },
  addFavorite: async (vehicleId: number) => {
    const response = await api.post(`/favorites/${vehicleId}`)
    return response.data
  },
  removeFavorite: async (vehicleId: number) => {
    const response = await api.delete(`/favorites/${vehicleId}`)
    return response.data
  },
  checkFavorite: async (vehicleId: number) => {
    const response = await api.get<boolean>(`/favorites/check/${vehicleId}`)
    return response.data
  },
  getFavoritesCount: async () => {
    const response = await api.get<number>('/favorites/count')
    return response.data
  },
}

// Inquiry service
export const inquiryService = {
  getInquiries: async () => {
    const response = await api.get('/inquiries')
    return response.data
  },
  getInquiry: async (id: number) => {
    const response = await api.get(`/inquiries/${id}`)
    return response.data
  },
  createInquiry: async (inquiryData: {
    vehicleId: number
    subject: string
    message: string
  }) => {
    const response = await api.post('/inquiries', inquiryData)
    return response.data
  },
  closeInquiry: async (id: number) => {
    await api.put(`/inquiries/${id}/close`)
  },
}

export default api

```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/SmartAutoTrader.API.http`:

```http
@SmartAutoTrader.API_HostAddress = http://localhost:5171

GET {{SmartAutoTrader.API_HostAddress}}/weatherforecast/
Accept: application/json

###

```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/SmartAutoTrader.API.csproj`:

```csproj
<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.13" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="8.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.6.2" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.6.1" />
    <PackageReference Include="ZLogger" Version="2.5.10" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Logs\" />
  </ItemGroup>

</Project>

```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/appsettings.json`:

```json
{
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=smartautotrader.db"
  },
  "Jwt": {
    "Key": "YourSuperSecretKeyHereMakeItLongAndComplex",
    "Issuer": "SmartAutoTrader",
    "Audience": "SmartAutoTraderClients"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "System": "Warning"
    }
  },
  "AllowedHosts": "*",
  "CorsOrigins": [
    "http://localhost:5173"
  ],
  "AI": {
    "Provider": "huggingface",
    "FallbackOnError": true
  },
  "HuggingFace": {
    "ApiKey": "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",
    "EmbeddingModel": "sentence-transformers/all-MiniLM-L6-v2"
  }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Models/Inquiry.cs`:

```cs
using System;
using System.ComponentModel.DataAnnotations;

namespace SmartAutoTrader.API.Models
{
    public enum InquiryStatus
    {
        New,
        Read,
        Replied,
        Closed
    }

    public class Inquiry
    {
        [Key]
        public int Id { get; set; }
        
        public int UserId { get; set; }
        public User User { get; set; }
        
        public int VehicleId { get; set; }
        public Vehicle Vehicle { get; set; }
        
        [Required]
        public string Subject { get; set; }
        
        [Required]
        public string Message { get; set; }
        
        public string Response { get; set; }
        
        public DateTime DateSent { get; set; } = DateTime.Now;
        
        public DateTime? DateReplied { get; set; }
        
        public InquiryStatus Status { get; set; } = InquiryStatus.New;
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Models/Vehicle.cs`:

```cs
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;

namespace SmartAutoTrader.API.Models
{
    public enum FuelType
    {
        Petrol,
        Diesel,
        Electric,
        Hybrid,
        Plugin
    }

    public enum TransmissionType
    {
        Manual,
        Automatic,
        SemiAutomatic
    }

    public enum VehicleType
    {
        Sedan,
        SUV,
        Hatchback,
        Estate,
        Coupe,
        Convertible,
        Pickup,
        Van
    }

    public enum VehicleStatus
    {
        Available,
        Reserved,
        Sold
    }

    public class Vehicle
    {
        [Key]
        public int Id { get; set; }
        
        [Required]
        public string Make { get; set; }
        
        [Required]
        public string Model { get; set; }
        
        [Required]
        public int Year { get; set; }
        
        [Required]
        public decimal Price { get; set; }
        
        public int Mileage { get; set; }
        
        public FuelType FuelType { get; set; }
        
        public TransmissionType Transmission { get; set; }
        
        public VehicleType VehicleType { get; set; }
        
        public double EngineSize { get; set; }
        
        public int HorsePower { get; set; }
        
        public string Country { get; set; }
        
        [Required]
        public string Description { get; set; }
        
        public DateTime DateListed { get; set; } = DateTime.Now;
        
        public VehicleStatus Status { get; set; } = VehicleStatus.Available;
        
        // Navigation properties
        public ICollection<VehicleImage> Images { get; set; }
        public ICollection<VehicleFeature> Features { get; set; }
        [JsonIgnore]
        public IEnumerable<UserFavorite>? FavoritedBy { get; set; }
    }

    public class VehicleImage
    {
        [Key]
        public int Id { get; set; }
        
        [Required]
        public string ImageUrl { get; set; }
        
        public bool IsPrimary { get; set; }
        
        public int VehicleId { get; set; }
        [JsonIgnore]
        public Vehicle Vehicle { get; set; }
    }

    public class VehicleFeature
    {
        [Key]
        public int Id { get; set; }
        
        [Required]
        public string Name { get; set; }
        
        public int VehicleId { get; set; }
        [JsonIgnore]
        public Vehicle Vehicle { get; set; }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Models/User.cs`:

```cs
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace SmartAutoTrader.API.Models
{
    public class User
    {
        [Key]
        public int Id { get; set; }
        
        [Required]
        public string Username { get; set; }
        
        [Required]
        [EmailAddress]
        public string Email { get; set; }
        
        [Required]
        public string PasswordHash { get; set; }
        
        public string FirstName { get; set; }
        
        public string LastName { get; set; }
        
        public string PhoneNumber { get; set; }
        
        public DateTime DateRegistered { get; set; } = DateTime.Now;
        
        // Navigation properties
        public ICollection<UserFavorite> Favorites { get; set; }
        public ICollection<UserPreference> Preferences { get; set; }
        public ICollection<BrowsingHistory> BrowsingHistory { get; set; }
        public ICollection<Inquiry> SentInquiries { get; set; }
    }

    public class UserFavorite
    {
        [Key]
        public int Id { get; set; }
        
        public int UserId { get; set; }
        public User User { get; set; }
        
        public int VehicleId { get; set; }
        public Vehicle Vehicle { get; set; }
        
        public DateTime DateAdded { get; set; } = DateTime.Now;
    }

    public class UserPreference
    {
        [Key]
        public int Id { get; set; }
        
        public int UserId { get; set; }
        public User User { get; set; }
        
        [Required]
        public string PreferenceType { get; set; } // e.g., "PriceRange", "VehicleType", "FuelType"
        
        [Required]
        public string Value { get; set; } // Store as JSON if needed for complex values
        
        public float Weight { get; set; } = 1.0f; // Default weight = 1
    }

    public class BrowsingHistory
    {
        [Key]
        public int Id { get; set; }
        
        public int UserId { get; set; }
        public User User { get; set; }
        
        public int VehicleId { get; set; }
        public Vehicle Vehicle { get; set; }
        
        public DateTime ViewDate { get; set; } = DateTime.Now;
        
        public int ViewDurationSeconds { get; set; }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Models/ChatHistory.cs`:

```cs
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace SmartAutoTrader.API.Models
{
    public class ChatHistory
    {
        [Key]
        public int Id { get; set; }
        
        public int UserId { get; set; }
        
        [ForeignKey("UserId")]
        public User User { get; set; }
        
        [Required]
        public string UserMessage { get; set; }
        
        [Required]
        public string AIResponse { get; set; }
        
        public DateTime Timestamp { get; set; }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Logs/app_log.txt`:

```txt
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Vehicles" AS "v")
Now listening on: https://localhost:7001
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: /Users/conorgillespie/Projects/SmartAutoTrader/backend
Fetching recommendations for user ID: 1
Fetching recommendations for user ID: 1
Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Generating user embedding for user ID 1
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (0ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Final recommendation list contains 5 vehicles.
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Received response from local embedding service: OK
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (3ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Executed DbCommand (2ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Final recommendation list contains 5 vehicles.
Processing chat message from user ID: 1
Processing chat message for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
Error processing with AI
System.InvalidOperationException: An invalid request URI was provided. Either the request URI must be an absolute URI or BaseAddress must be set.
   at System.Net.Http.HttpClient.PrepareRequestMessage(HttpRequestMessage request)
   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.PostAsync(String requestUri, HttpContent content)
   at SmartAutoTrader.API.Services.ChatRecommendationService.ProcessWithAIAsync(String message, String userContext) in /Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/ChatRecommendationsService.cs:line 215
Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 92), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Size = 24)], CommandType='Text', CommandTimeout='30']
INSERT INTO "ChatHistory" ("AIResponse", "Timestamp", "UserId", "UserMessage")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Fetching recommendations for user ID: 1
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Received response from local embedding service: OK
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Executed DbCommand (0ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Final recommendation list contains 5 vehicles.
Processing chat message from user ID: 1
Processing chat message for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
Error processing with AI
System.InvalidOperationException: An invalid request URI was provided. Either the request URI must be an absolute URI or BaseAddress must be set.
   at System.Net.Http.HttpClient.PrepareRequestMessage(HttpRequestMessage request)
   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.PostAsync(String requestUri, HttpContent content)
   at SmartAutoTrader.API.Services.ChatRecommendationService.ProcessWithAIAsync(String message, String userContext) in /Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/ChatRecommendationsService.cs:line 215
Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 92), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Size = 28)], CommandType='Text', CommandTimeout='30']
INSERT INTO "ChatHistory" ("AIResponse", "Timestamp", "UserId", "UserMessage")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";
Fetching recommendations for user ID: 1
Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (0ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Fetching recommendations for user ID: 1
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Final recommendation list contains 5 vehicles.
Fetching recommendations for user ID: 1
Fetching recommendations for user ID: 1
Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Executed DbCommand (153ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Final recommendation list contains 5 vehicles.
Fetching recommendations for user ID: 1
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Generating user embedding for user ID 1
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Received response from local embedding service: OK
Calling local embedding service
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (3ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Executed DbCommand (3ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Final recommendation list contains 5 vehicles.
Processing chat message from user ID: 1
Processing chat message for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
Error processing with AI
System.InvalidOperationException: An invalid request URI was provided. Either the request URI must be an absolute URI or BaseAddress must be set.
   at System.Net.Http.HttpClient.PrepareRequestMessage(HttpRequestMessage request)
   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.PostAsync(String requestUri, HttpContent content)
   at SmartAutoTrader.API.Services.ChatRecommendationService.ProcessWithAIAsync(String message, String userContext) in /Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/ChatRecommendationsService.cs:line 215
Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 92), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Size = 24)], CommandType='Text', CommandTimeout='30']
INSERT INTO "ChatHistory" ("AIResponse", "Timestamp", "UserId", "UserMessage")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (1ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Fetching recommendations for user ID: 1
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."DateRegistered", "t"."Email", "t"."FirstName", "t"."LastName", "t"."PasswordHash", "t"."PhoneNumber", "t"."Username", "u0"."Id", "u0"."PreferenceType", "u0"."UserId", "u0"."Value", "u0"."Weight"
FROM (
    SELECT "u"."Id", "u"."DateRegistered", "u"."Email", "u"."FirstName", "u"."LastName", "u"."PasswordHash", "u"."PhoneNumber", "u"."Username"
    FROM "Users" AS "u"
    WHERE "u"."Id" = @__userId_0
    LIMIT 1
) AS "t"
LEFT JOIN "UserPreferences" AS "u0" ON "t"."Id" = "u0"."UserId"
ORDER BY "t"."Id"
Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "u"."Id", "u"."DateAdded", "u"."UserId", "u"."VehicleId", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM "UserFavorites" AS "u"
INNER JOIN "Vehicles" AS "v" ON "u"."VehicleId" = "v"."Id"
WHERE "u"."UserId" = @__userId_0
Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT "t"."Id", "t"."UserId", "t"."VehicleId", "t"."ViewDate", "t"."ViewDurationSeconds", "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year"
FROM (
    SELECT "b"."Id", "b"."UserId", "b"."VehicleId", "b"."ViewDate", "b"."ViewDurationSeconds"
    FROM "BrowsingHistory" AS "b"
    WHERE "b"."UserId" = @__userId_0
    ORDER BY "b"."ViewDate" DESC
    LIMIT @__p_1
) AS "t"
INNER JOIN "Vehicles" AS "v" ON "t"."VehicleId" = "v"."Id"
ORDER BY "t"."ViewDate" DESC
User data fetched, retrieving available vehicles.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."Name", "v0"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleFeatures" AS "v0" ON "v"."Id" = "v0"."VehicleId"
WHERE "v"."Status" = 0
ORDER BY "v"."Id"
Generating user embedding for user ID 1
Calling local embedding service
Received response from local embedding service: OK
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Generated user embedding: 0.012381615, 0.02424476, -0.0042998665, 0.017042615, -0.0020894902, 0.07200975, 0.032271013, 0.07182269, -0.029239664, -0.036759317, -0.0018864581, -0.030657442, 0.021270648, 0.015404886, -0.0073412834, 0.0011804478, 0.018512618, -0.064599335, -0.043422125, 0.025321726, -0.030731173, -0.029803235, 0.005581431, -0.04871974, 0.0052061602, 0.0117026465, 0.04940428, 0.060820233, -0.065682486, -0.02674824, -0.008715481, 0.07471297, 0.005191677, -0.0027422032, -0.052547254, -0.20102224, -0.11696577, -0.004887981, -0.037225667, -0.03110717, -0.08579266, -0.071486115, -0.034202587, -0.03203518, -0.005058898, 0.015113555, 0.0061738575, 0.014395009, 0.09538121, 0.012448954, -0.032376945, -0.007698532, -0.03929896, -0.047328684, -0.004116015, -0.033269636, -0.0902357, 0.026720284, 0.0058673667, -0.03249893, 0.005629566, -0.033243187, -0.013395157, -0.0066261142, -0.012742623, -0.028868973, -0.011604789, -0.024817469, -0.06090461, 0.081365764, 0.018251315, 0.065133944, 0.029672742, -0.029624237, 0.007373278, -0.02779398, 0.07881554, -0.09364444, 0.011788737, -0.03306978, -0.06757514, -0.0075481716, -0.12835668, 0.01794214, 0.035493094, -0.025118379, 0.00937359, -0.064839, -0.032598037, 0.024818135, -0.078998335, -0.017180938, 0.062151734, -0.046501715, -0.08927812, 0.04950667, 0.061504167, 0.027341727, -0.0018225816, 0.052160572, 0.047882814, 0.013943688, 0.0045999037, 0.027996795, -0.013813083, -0.0019935952, -0.0068425853, 0.11311111, -0.0026992832, -0.016493924, -0.04418112, -0.00057715696, -0.077827044, -0.07003309, -0.10355045, -0.015734615, 0.036167942, 0.014831337, 0.08723817, 0.06974933, -0.03320681, -0.052084994, 0.026793856, 0.03224416, -0.03083215, -0.02936121, 0.017970955, 1.0009931E-32, -0.07540586, -0.040953893, -0.014978802, -0.020712268, -0.037676707, 0.060899913, -0.059535433, 0.090935245, -0.104427844, -0.034186255, -0.0027364914, 0.07125329, -0.076445825, 0.068130285, 0.04618232, -0.024334012, -0.02033701, -0.017687911, -0.061998025, -0.100348726, -0.009334153, 0.00049969106, 0.041866463, -0.037538208, 0.018114509, -0.021495841, 0.046746958, 0.0058532367, 0.011296849, 0.028661648, 0.0049967812, 0.021293236, -0.028552104, -0.028456422, -0.0599026, 0.025005618, -0.06596054, 0.008754479, -0.025867775, -0.022687117, 0.036053643, 0.003876931, -0.09278034, -0.033026353, -0.06273457, 0.10174492, 0.051962607, 0.039191462, -0.06228432, 0.0075851, -0.07110691, 0.013700966, -0.07137765, 0.021950072, -0.060872383, -0.027393285, -0.01005079, 0.032320708, 0.020342885, -0.04308101, -0.064905725, 0.085513756, 0.091484904, -0.09578084, -0.06072169, 0.051307295, 0.030827517, -0.059725273, -0.022251507, 0.056907013, -0.0143353185, 0.01682231, 0.03942171, 0.009771786, 0.024684055, 0.013501147, 0.011102638, 0.023086295, 0.047416065, -0.043554965, -0.013466956, -0.03939756, 0.03550251, 0.043990944, 0.081443265, -0.03936887, -0.03056774, -0.07734723, 0.018705979, -0.018674122, -0.05213852, 0.016079416, 0.0013432957, -0.043803815, -0.001535883, -1.1827393E-32, -0.0137260575, -0.024646465, 0.04492569, 0.023909671, 0.05241802, 0.0069492725, -0.02206733, -0.018109014, 0.04849452, 0.05216465, 0.004725988, 0.00040248936, 0.03372113, -0.03148689, 0.04448314, -0.0025778133, 0.013968759, -0.098832354, -0.033945054, -0.020057872, -0.0649255, 0.086504065, -0.06488163, 0.07598035, -0.031229896, -0.0011856352, 0.010302832, 0.016780293, -0.009518523, -0.05610782, -0.017297525, -0.076310195, -0.057853706, -0.012664431, -0.002802563, -0.033769906, -0.035152115, 0.09827526, -0.06848872, 0.17126998, -0.04850045, -0.08119668, 0.017509278, 0.07308132, -0.021054242, -0.073929265, 0.013704115, -0.026047455, 0.08734383, 0.047516704, 0.093356006, 0.07207601, -0.010212885, 0.042521104, -0.060549162, -0.008627061, 0.07652894, 0.004086818, 0.092982866, 0.034664012, 0.047986235, -0.030372808, -0.0019277794, -0.0055725854, -0.00093854935, -0.13218142, -0.004799824, -0.04036068, -0.01332664, -0.07887271, 0.004424336, -0.080561385, 0.002183817, -0.09268895, 0.038077876, -0.04770838, 0.019462451, 0.028333906, 0.1291994, 0.014144356, 0.019803585, 0.038429186, 0.09299551, 0.02284771, 0.00656607, 0.011994076, -0.07548806, 0.09850148, 0.0449726, 0.033237677, 0.04517508, 0.047070067, -0.05084374, 0.021842953, -0.102643825, -5.824915E-08, -0.021839086, -0.053250376, 0.031349853, 0.163075, 0.04408829, -0.046234075, 0.0065528154, 0.069606155, -0.07149129, -0.0030314971, 0.07431382, 0.013792589, -0.078140244, -0.002127636, -0.024354203, -0.009051566, 0.0080710845, 0.080780946, -0.02299891, 0.035973135, 0.025038972, 0.024075845, -0.03360756, 0.061703, 0.03919475, 0.005631174, -0.033111427, -0.0045225536, 0.06183132, 0.042251095, -0.02836628, 0.044246025, 0.016215265, -0.038777515, -0.003405004, -0.017433418, -0.042164356, 0.044445906, -0.06036227, 0.008551477, 0.12789138, -0.09689581, -0.04573304, 0.026402708, -0.0010394843, 0.004396332, 0.034547906, -0.1115681, -0.007983516, -0.01462107, -0.033586442, -0.074389204, 0.01087478, 0.064027674, 0.018943515, -0.06397476, -0.023299744, 0.03590389, -0.0037537157, -0.019096684, 0.1375304, -0.010479749, -0.08855874, 0.09941913
Generating vehicle embeddings...
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Received response from local embedding service: OK
Executed DbCommand (0ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Calling local embedding service
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Received response from local embedding service: OK
Generated vehicle embeddings for 157 vehicles
Ranking vehicles by similarity score...
Top 5 recommended vehicle IDs: 9, 199, 64, 40, 124
Executed DbCommand (0ms) [Parameters=[@__recommendedVehicleIds_0='?' (Size = 17)], CommandType='Text', CommandTimeout='30']
SELECT "v"."Id", "v"."Country", "v"."DateListed", "v"."Description", "v"."EngineSize", "v"."FuelType", "v"."HorsePower", "v"."Make", "v"."Mileage", "v"."Model", "v"."Price", "v"."Status", "v"."Transmission", "v"."VehicleType", "v"."Year", "v0"."Id", "v0"."ImageUrl", "v0"."IsPrimary", "v0"."VehicleId", "v1"."Id", "v1"."Name", "v1"."VehicleId"
FROM "Vehicles" AS "v"
LEFT JOIN "VehicleImages" AS "v0" ON "v"."Id" = "v0"."VehicleId"
LEFT JOIN "VehicleFeatures" AS "v1" ON "v"."Id" = "v1"."VehicleId"
WHERE "v"."Id" IN (
    SELECT "r"."value"
    FROM json_each(@__recommendedVehicleIds_0) AS "r"
)
ORDER BY "v"."Id", "v0"."Id"
Final recommendation list contains 5 vehicles.

```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Properties/launchSettings.json`:

```json
﻿{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "iisSettings": {
    "windowsAuthentication": false,
    "anonymousAuthentication": true,
    "iisExpress": {
      "applicationUrl": "http://localhost:57823",
      "sslPort": 44350
    }
  },
  "profiles": {
    "http": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "swagger",
      "applicationUrl": "https://localhost:7001;",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "https": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "swagger",
      "applicationUrl": "https://localhost:7001;",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "IIS Express": {
      "commandName": "IISExpress",
      "launchBrowser": true,
      "launchUrl": "swagger",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/appsettings.Development.json`:

```json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  }
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/DataSeeding/VehicleSeederScript.cs`:

```cs
using SmartAutoTrader.API.Models; // Updated to match your namespace
using SmartAutoTrader.API.Data; // Assuming this is where your DbContext is

namespace SmartAutoTrader.API.DataSeeding
{
    public class VehicleSeeder
    {
        public void SeedVehicles(IServiceProvider serviceProvider, int count = 200)
        {
            using (var scope = serviceProvider.CreateScope())
            {
                var context = scope.ServiceProvider.GetRequiredService<ApplicationDbContext>(); // Replace with your actual DbContext name

                if (!context.Vehicles.Any())
                {
                    var vehicles = GenerateVehicles(count);
                    context.Vehicles.AddRange(vehicles);
                    context.SaveChanges();
                    Console.WriteLine($"Added {count} vehicles to the database.");
                }
                else
                {
                    Console.WriteLine("Database already contains vehicles. Skipping seed.");
                }
            }
        }

        private static List<Vehicle> GenerateVehicles(int count)
        {
            var random = new Random();
            var vehicles = new List<Vehicle>();

            // Lists for random data generation
            var makes = new[] { "Toyota", "Honda", "Ford", "Volkswagen", "BMW", "Mercedes-Benz", "Audi", "Nissan", "Hyundai", "Kia", "Tesla", "Mazda", "Subaru", "Chevrolet", "Lexus" };
            var colors = new[] { "Black", "White", "Silver", "Grey", "Blue", "Red", "Green", "Yellow", "Brown", "Orange" };
            var countries = new[] { "Japan", "Germany", "USA", "South Korea", "Italy", "France", "Sweden", "UK", "China" };

            // Model mappings
            var modelsByMake = new Dictionary<string, string[]>
            {
                { "Toyota", new[] { "Corolla", "Camry", "RAV4", "Prius", "Highlander", "Tacoma", "4Runner" } },
                { "Honda", new[] { "Civic", "Accord", "CR-V", "Pilot", "Fit", "HR-V", "Odyssey" } },
                { "Ford", new[] { "F-150", "Focus", "Escape", "Explorer", "Mustang", "Edge", "Ranger" } },
                { "Volkswagen", new[] { "Golf", "Passat", "Tiguan", "Atlas", "Jetta", "ID.4", "Arteon" } },
                { "BMW", new[] { "3 Series", "5 Series", "X3", "X5", "7 Series", "i4", "iX" } },
                { "Mercedes-Benz", new[] { "C-Class", "E-Class", "GLC", "GLE", "S-Class", "A-Class", "EQC" } },
                { "Audi", new[] { "A4", "A6", "Q5", "Q7", "e-tron", "A3", "Q3" } },
                { "Nissan", new[] { "Altima", "Rogue", "Sentra", "Pathfinder", "Murano", "Leaf", "Kicks" } },
                { "Hyundai", new[] { "Elantra", "Tucson", "Santa Fe", "Kona", "Sonata", "Palisade", "Ioniq" } },
                { "Kia", new[] { "Forte", "Sportage", "Sorento", "Telluride", "Soul", "Seltos", "EV6" } },
                { "Tesla", new[] { "Model 3", "Model Y", "Model S", "Model X", "Cybertruck" } },
                { "Mazda", new[] { "Mazda3", "CX-5", "CX-9", "MX-5", "CX-30", "Mazda6", "CX-50" } },
                { "Subaru", new[] { "Outback", "Forester", "Crosstrek", "Impreza", "Legacy", "Ascent", "WRX" } },
                { "Chevrolet", new[] { "Silverado", "Equinox", "Malibu", "Traverse", "Tahoe", "Bolt", "Camaro" } },
                { "Lexus", new[] { "RX", "ES", "NX", "IS", "GX", "UX", "LS" } }
            };

            // Common features
            var featuresList = new[]
            {
                "Leather Seats", "Sunroof", "Navigation System", "Bluetooth", "Backup Camera",
                "Heated Seats", "Cruise Control", "Parking Sensors", "Blind Spot Monitor",
                "Lane Departure Warning", "Keyless Entry", "Push Button Start", "Apple CarPlay",
                "Android Auto", "Premium Sound System", "Third Row Seating", "Tow Package",
                "Roof Rack", "Alloy Wheels", "Adaptive Cruise Control", "Remote Start",
                "Ventilated Seats", "Heads-up Display", "360 Camera", "Wireless Charging"
            };

            // Generate vehicles
            for (int i = 0; i < count; i++)
            {
                var make = makes[random.Next(makes.Length)];
                var models = modelsByMake[make];
                var model = models[random.Next(models.Length)];
                var year = random.Next(2010, 2026);
                var country = GetCountryForMake(make);

                // Create vehicle
                var vehicle = new Vehicle
                {
                    Make = make,
                    Model = model,
                    Year = year,
                    Price = random.Next(5000, 100001), // $5,000 to $100,000
                    Mileage = year == 2025 ? random.Next(0, 1000) : random.Next(1000, 150001), // Low mileage for new cars
                    FuelType = (FuelType)random.Next(Enum.GetValues(typeof(FuelType)).Length),
                    Transmission = (TransmissionType)random.Next(Enum.GetValues(typeof(TransmissionType)).Length),
                    VehicleType = (VehicleType)random.Next(Enum.GetValues(typeof(VehicleType)).Length),
                    EngineSize = Math.Round(random.NextDouble() * 4 + 1, 1), // 1.0L to 5.0L
                    HorsePower = random.Next(100, 601), // 100hp to 600hp
                    Country = country,
                    Description = GenerateDescription(make, model, year),
                    DateListed = DateTime.Now.AddDays(-random.Next(1, 60)), // Random listing date within last 60 days
                    Status = GetRandomStatusWithWeights(random),
                    // Initialize collections
                    Images = new List<VehicleImage>(),
                    Features = new List<VehicleFeature>(),
                    FavoritedBy = new List<Models.UserFavorite>()
                };

                // Add images
                int imageCount = random.Next(1, 6); // 1-5 images per vehicle
                for (int j = 0; j < imageCount; j++)
                {
                    int imageId = random.Next(1, 20); // Assuming you have 20 placeholder images
                    vehicle.Images.Add(new VehicleImage
                    {
                        ImageUrl = $"https://images.unsplash.com/photo-1533473359331-0135ef1b58bf?w=400&h=300&fit=crop",
                        IsPrimary = j == 0, // First image is primary
                        Vehicle = vehicle
                    });
                }

                // Add features (3-8 random features)
                var featureCount = random.Next(3, 9);
                var selectedFeatures = featuresList.OrderBy(x => random.Next()).Take(featureCount);
                foreach (var feature in selectedFeatures)
                {
                    vehicle.Features.Add(new VehicleFeature
                    {
                        Name = feature,
                        Vehicle = vehicle
                    });
                }

                vehicles.Add(vehicle);
            }

            return vehicles;
        }

        private static string GetCountryForMake(string make)
        {
            // Return appropriate country of origin for each make
            return make switch
            {
                "Toyota" or "Honda" or "Nissan" or "Mazda" or "Subaru" or "Lexus" => "Japan",
                "BMW" or "Mercedes-Benz" or "Audi" or "Volkswagen" => "Germany",
                "Ford" or "Chevrolet" or "Tesla" => "USA",
                "Hyundai" or "Kia" => "South Korea",
                _ => "Other"
            };
        }

        private static VehicleStatus GetRandomStatusWithWeights(Random random)
        {
            // Weight probabilities: 80% Available, 15% Reserved, 5% Sold
            int value = random.Next(1, 101);
            if (value <= 80)
                return VehicleStatus.Available;
            else if (value <= 95)
                return VehicleStatus.Reserved;
            else
                return VehicleStatus.Sold;
        }

        private static string GenerateDescription(string make, string model, int year)
        {
            var random = new Random();
            var descriptions = new[]
            {
                $"Excellent condition {year} {make} {model}. Well maintained with service history available. Must see to appreciate.",
                $"Beautiful {year} {make} {model} with low mileage. No accidents, clean title.",
                $"One owner {year} {make} {model}. Garage kept and regularly serviced at dealership.",
                $"Immaculate {year} {make} {model}. All highway miles, never been in an accident.",
                $"Like new {year} {make} {model}. Still under manufacturer warranty with all service up to date.",
                $"Pristine {year} {make} {model}. Adult owned and driven, smoke-free interior.",
                $"Well-maintained {year} {make} {model}. Recent service completed, ready for new owner.",
                $"Sporty {year} {make} {model} in great condition. Fun to drive with excellent fuel economy.",
                $"Luxury {year} {make} {model} loaded with features. Premium package included.",
                $"Family-friendly {year} {make} {model} with spacious interior and excellent safety ratings."
            };

            return descriptions[random.Next(descriptions.Length)];
        }
    }
    
}

```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Controllers/ChatController.cs`:

```cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Claims;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using SmartAutoTrader.API.Services;

namespace SmartAutoTrader.API.Controllers
{
    [Authorize]
    [ApiController]
    [Route("api/[controller]")]
    public class ChatController : ControllerBase
    {
        private readonly IChatRecommendationService _chatService;
        private readonly ILogger<ChatController> _logger;
        
        public ChatController(
            IChatRecommendationService chatService,
            ILogger<ChatController> logger)
        {
            _chatService = chatService;
            _logger = logger;
        }
        
        [HttpPost("message")]
public async Task<IActionResult> SendMessage([FromBody] ChatMessageDto message)
{
    try
    {
        if (string.IsNullOrWhiteSpace(message.Content))
        {
            return BadRequest("Message content cannot be empty");
        }
        
        // Get the user ID from the claims
        var userIdClaim = User.FindFirst(ClaimTypes.NameIdentifier);
        if (userIdClaim == null || !int.TryParse(userIdClaim.Value, out var userId))
        {
            _logger.LogWarning("Failed to extract user ID from claims");
            return Unauthorized();
        }
        
        _logger.LogInformation("Processing chat message from user ID: {UserId}", userId);
        
        // Process the message
        var chatMessage = new ChatMessage
        {
            Content = message.Content,
            Timestamp = DateTime.UtcNow
        };
        
        var response = await _chatService.ProcessMessageAsync(userId, chatMessage);
        
        // Check for null values to avoid NullReferenceException
        if (response == null)
        {
            return StatusCode(500, "Failed to process message");
        }

        // Map the response to a DTO with null checks
        var responseDto = new ChatResponseDto
        {
            Message = response.Message ?? "Sorry, I couldn't understand that.",
            RecommendedVehicles = response.RecommendedVehicles?.Select(v => new VehicleDto
            {
                Id = v.Id,
                Make = v.Make ?? string.Empty,
                Model = v.Model ?? string.Empty,
                Year = v.Year,
                Price = v.Price,
                Mileage = v.Mileage,
                VehicleType = v.VehicleType.ToString(),
                FuelType = v.FuelType.ToString(),
                ImageUrl = v.Images?.FirstOrDefault()?.ImageUrl ?? "/assets/default-car.jpg"
            })?.ToList() ?? new List<VehicleDto>(),
            Parameters = new RecommendationParametersDto
            {
                MinPrice = response.UpdatedParameters?.MinPrice,
                MaxPrice = response.UpdatedParameters?.MaxPrice,
                MinYear = response.UpdatedParameters?.MinYear,
                MaxYear = response.UpdatedParameters?.MaxYear,
                PreferredMakes = response.UpdatedParameters?.PreferredMakes,
                PreferredVehicleTypes = response.UpdatedParameters?.PreferredVehicleTypes?.Select(t => t.ToString())?.ToList(),
                PreferredFuelTypes = response.UpdatedParameters?.PreferredFuelTypes?.Select(f => f.ToString())?.ToList(),
                DesiredFeatures = response.UpdatedParameters?.DesiredFeatures
            }
        };
        
        return Ok(responseDto);
    }
    catch (Exception ex)
    {
        _logger.LogError(ex, "Error processing chat message");
        return StatusCode(500, "An error occurred while processing your message. Please try again later.");
    }
}
        
        [HttpGet("history")]
        public async Task<IActionResult> GetChatHistory([FromQuery] int limit = 10)
        {
            try
            {
                // Get the user ID from the claims
                var userIdClaim = User.FindFirst(ClaimTypes.NameIdentifier);
                if (userIdClaim == null || !int.TryParse(userIdClaim.Value, out var userId))
                {
                    _logger.LogWarning("Failed to extract user ID from claims");
                    return Unauthorized();
                }
                
                // Since we don't have the repository pattern implemented yet, we'll return a placeholder
                // This should be replaced with actual database query
                
                var chatHistory = new List<ChatHistoryDto>
                {
                    new ChatHistoryDto
                    {
                        Id = 1,
                        UserMessage = "I'm looking for an SUV with good fuel economy.",
                        AIResponse = "Based on your preferences, I'd recommend looking at hybrid SUVs like the Toyota RAV4 Hybrid or Honda CR-V Hybrid. These offer excellent fuel economy while providing the space and versatility of an SUV.",
                        Timestamp = DateTime.UtcNow.AddHours(-1)
                    },
                    new ChatHistoryDto
                    {
                        Id = 2,
                        UserMessage = "What about electric options?",
                        AIResponse = "For electric SUVs, you might want to consider the Tesla Model Y, Ford Mustang Mach-E, or Volkswagen ID.4. These offer zero emissions and lower operating costs, though they typically have a higher upfront price.",
                        Timestamp = DateTime.UtcNow.AddMinutes(-30)
                    }
                };
                
                return Ok(chatHistory.Take(limit));
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error retrieving chat history");
                return StatusCode(500, "An error occurred while retrieving your chat history. Please try again later.");
            }
        }
    }
    
    public class ChatMessageDto
    {
        public string Content { get; set; }
    }
    
    public class ChatResponseDto
    {
        public string Message { get; set; }
        public List<VehicleDto> RecommendedVehicles { get; set; } = new List<VehicleDto>();
        public RecommendationParametersDto Parameters { get; set; }
    }
    
    public class VehicleDto
    {
        public int Id { get; set; }
        public string Make { get; set; }
        public string Model { get; set; }
        public int Year { get; set; }
        public decimal Price { get; set; }
        public int Mileage { get; set; }
        public string VehicleType { get; set; }
        public string FuelType { get; set; }
        public string ImageUrl { get; set; }
    }
    
    public class RecommendationParametersDto
    {
        public decimal? MinPrice { get; set; }
        public decimal? MaxPrice { get; set; }
        public int? MinYear { get; set; }
        public int? MaxYear { get; set; }
        public List<string> PreferredMakes { get; set; }
        public List<string> PreferredVehicleTypes { get; set; }
        public List<string> PreferredFuelTypes { get; set; }
        public List<string> DesiredFeatures { get; set; }
    }
    
    public class ChatHistoryDto
    {
        public int Id { get; set; }
        public string UserMessage { get; set; }
        public string AIResponse { get; set; }
        public DateTime Timestamp { get; set; }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Controllers/FavoritesController.cs`:

```cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using SmartAutoTrader.API.Data;
using SmartAutoTrader.API.Models;

namespace SmartAutoTrader.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    [Authorize]
    public class FavoritesController : ControllerBase
    {
        private readonly ApplicationDbContext _context;

        public FavoritesController(ApplicationDbContext context)
        {
            _context = context;
        }

        // GET: api/Favorites
        [HttpGet]
        public async Task<ActionResult<IEnumerable<Vehicle>>> GetFavorites()
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            var favorites = await _context.UserFavorites
                .Where(uf => uf.UserId == userId)
                .Include(uf => uf.Vehicle)
                .ThenInclude(v => v.Images)
                .Select(uf => uf.Vehicle)
                .ToListAsync();

            return favorites;
        }

        // POST: api/Favorites
        [HttpPost("{vehicleId}")]
        public async Task<IActionResult> AddFavorite(int vehicleId)
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            // Check if vehicle exists
            var vehicle = await _context.Vehicles.FindAsync(vehicleId);
            if (vehicle == null)
            {
                return NotFound(new { Message = "Vehicle not found" });
            }

            // Check if already favorited
            var existingFavorite = await _context.UserFavorites
                .FirstOrDefaultAsync(uf => uf.UserId == userId && uf.VehicleId == vehicleId);

            if (existingFavorite != null)
            {
                return BadRequest(new { Message = "Vehicle already in favorites" });
            }

            // Add to favorites
            var favorite = new UserFavorite
            {
                UserId = userId,
                VehicleId = vehicleId,
                DateAdded = DateTime.Now
            };

            _context.UserFavorites.Add(favorite);
            await _context.SaveChangesAsync();

            return Ok(new { Message = "Vehicle added to favorites" });
        }

        // DELETE: api/Favorites/5
        [HttpDelete("{vehicleId}")]
        public async Task<IActionResult> RemoveFavorite(int vehicleId)
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            var favorite = await _context.UserFavorites
                .FirstOrDefaultAsync(uf => uf.UserId == userId && uf.VehicleId == vehicleId);

            if (favorite == null)
            {
                return NotFound(new { Message = "Vehicle not in favorites" });
            }

            _context.UserFavorites.Remove(favorite);
            await _context.SaveChangesAsync();

            return Ok(new { Message = "Vehicle removed from favorites" });
        }

        // GET: api/Favorites/Check/5
        [HttpGet("Check/{vehicleId}")]
        public async Task<ActionResult<bool>> CheckFavorite(int vehicleId)
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            var isFavorite = await _context.UserFavorites
                .AnyAsync(uf => uf.UserId == userId && uf.VehicleId == vehicleId);

            return isFavorite;
        }

        // GET: api/Favorites/Count
        [HttpGet("Count")]
        public async Task<ActionResult<int>> GetFavoritesCount()
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            var count = await _context.UserFavorites
                .CountAsync(uf => uf.UserId == userId);

            return count;
        }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Controllers/VehiclesController.cs`:

```cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using SmartAutoTrader.API.Data;
using SmartAutoTrader.API.Models;

namespace SmartAutoTrader.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class VehiclesController : ControllerBase
    {
        private readonly ApplicationDbContext _context;

        public VehiclesController(ApplicationDbContext context)
        {
            _context = context;
        }

        // GET: api/Vehicles
        [HttpGet]
        public async Task<ActionResult<IEnumerable<Vehicle>>> GetVehicles(
            [FromQuery] string make = null,
            [FromQuery] string model = null,
            [FromQuery] int? minYear = null,
            [FromQuery] int? maxYear = null,
            [FromQuery] decimal? minPrice = null,
            [FromQuery] decimal? maxPrice = null,
            [FromQuery] FuelType? fuelType = null,
            [FromQuery] TransmissionType? transmission = null,
            [FromQuery] VehicleType? vehicleType = null,
            [FromQuery] int? minMileage = null,
            [FromQuery] int? maxMileage = null,
            [FromQuery] string sortBy = "DateListed",
            [FromQuery] bool ascending = false,
            [FromQuery] int pageNumber = 1,
            [FromQuery] int pageSize = 10)
        {
            IQueryable<Vehicle> query = _context.Vehicles
                .Include(v => v.Images)
                .Include(v => v.Features)
                .Where(v => v.Status == VehicleStatus.Available);

            // Apply filters
            if (!string.IsNullOrEmpty(make))
                query = query.Where(v => v.Make.Contains(make));

            if (!string.IsNullOrEmpty(model))
                query = query.Where(v => v.Model.Contains(model));

            if (minYear.HasValue)
                query = query.Where(v => v.Year >= minYear.Value);

            if (maxYear.HasValue)
                query = query.Where(v => v.Year <= maxYear.Value);

            if (minPrice.HasValue)
                query = query.Where(v => v.Price >= minPrice.Value);

            if (maxPrice.HasValue)
                query = query.Where(v => v.Price <= maxPrice.Value);

            if (fuelType.HasValue)
                query = query.Where(v => v.FuelType == fuelType.Value);

            if (transmission.HasValue)
                query = query.Where(v => v.Transmission == transmission.Value);

            if (vehicleType.HasValue)
                query = query.Where(v => v.VehicleType == vehicleType.Value);

            if (minMileage.HasValue)
                query = query.Where(v => v.Mileage >= minMileage.Value);

            if (maxMileage.HasValue)
                query = query.Where(v => v.Mileage <= maxMileage.Value);

            // Apply sorting
            query = sortBy.ToLower() switch
            {
                "price" => ascending ? query.OrderBy(v => v.Price) : query.OrderByDescending(v => v.Price),
                "year" => ascending ? query.OrderBy(v => v.Year) : query.OrderByDescending(v => v.Year),
                "mileage" => ascending ? query.OrderBy(v => v.Mileage) : query.OrderByDescending(v => v.Mileage),
                "make" => ascending ? query.OrderBy(v => v.Make) : query.OrderByDescending(v => v.Make),
                "model" => ascending ? query.OrderBy(v => v.Model) : query.OrderByDescending(v => v.Model),
                _ => ascending ? query.OrderBy(v => v.DateListed) : query.OrderByDescending(v => v.DateListed),
            };

            // Apply pagination
            var totalItems = await query.CountAsync();
            var totalPages = (int)Math.Ceiling(totalItems / (double)pageSize);

            var vehicles = await query
                .Skip((pageNumber - 1) * pageSize)
                .Take(pageSize)
                .ToListAsync();

            // Add pagination headers
            Response.Headers.Add("X-Total-Count", totalItems.ToString());
            Response.Headers.Add("X-Total-Pages", totalPages.ToString());

            return vehicles;
        }

        // GET: api/Vehicles/5
        [HttpGet("{id}")]
        public async Task<ActionResult<Vehicle>> GetVehicle(int id)
        {
            var vehicle = await _context.Vehicles
                .Include(v => v.Images)
                .Include(v => v.Features)
                .FirstOrDefaultAsync(v => v.Id == id);

            if (vehicle == null)
            {
                return NotFound();
            }

            // Record viewing in browsing history if user is authenticated
            if (User.Identity.IsAuthenticated)
            {
                var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
                
                var history = new BrowsingHistory
                {
                    UserId = userId,
                    VehicleId = id,
                    ViewDate = DateTime.Now,
                    ViewDurationSeconds = 0 // Can be updated later
                };
                
                _context.BrowsingHistory.Add(history);
                await _context.SaveChangesAsync();
            }

            return vehicle;
        }

        // POST: api/Vehicles
        [HttpPost]
        [Authorize] // Only authenticated users can add vehicles (in your case, admins)
        public async Task<ActionResult<Vehicle>> PostVehicle(Vehicle vehicle)
        {
            _context.Vehicles.Add(vehicle);
            await _context.SaveChangesAsync();

            return CreatedAtAction(nameof(GetVehicle), new { id = vehicle.Id }, vehicle);
        }

        // PUT: api/Vehicles/5
        [HttpPut("{id}")]
        [Authorize]
        public async Task<IActionResult> PutVehicle(int id, Vehicle vehicle)
        {
            if (id != vehicle.Id)
            {
                return BadRequest();
            }

            _context.Entry(vehicle).State = EntityState.Modified;

            try
            {
                await _context.SaveChangesAsync();
            }
            catch (DbUpdateConcurrencyException)
            {
                if (!VehicleExists(id))
                {
                    return NotFound();
                }
                else
                {
                    throw;
                }
            }

            return NoContent();
        }

        // DELETE: api/Vehicles/5
        [HttpDelete("{id}")]
        [Authorize]
        public async Task<IActionResult> DeleteVehicle(int id)
        {
            var vehicle = await _context.Vehicles.FindAsync(id);
            if (vehicle == null)
            {
                return NotFound();
            }

            _context.Vehicles.Remove(vehicle);
            await _context.SaveChangesAsync();

            return NoContent();
        }

        private bool VehicleExists(int id)
        {
            return _context.Vehicles.Any(e => e.Id == id);
        }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Controllers/InquiriesController.cs`:

```cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using SmartAutoTrader.API.Data;
using SmartAutoTrader.API.Models;

namespace SmartAutoTrader.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    [Authorize]
    public class InquiriesController : ControllerBase
    {
        private readonly ApplicationDbContext _context;

        public InquiriesController(ApplicationDbContext context)
        {
            _context = context;
        }

        // GET: api/Inquiries
        [HttpGet]
        public async Task<ActionResult<IEnumerable<Inquiry>>> GetUserInquiries()
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            var inquiries = await _context.Inquiries
                .Where(i => i.UserId == userId)
                .Include(i => i.Vehicle)
                .OrderByDescending(i => i.DateSent)
                .ToListAsync();

            return inquiries;
        }

        // GET: api/Inquiries/5
        [HttpGet("{id}")]
        public async Task<ActionResult<Inquiry>> GetInquiry(int id)
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            var inquiry = await _context.Inquiries
                .Include(i => i.Vehicle)
                .FirstOrDefaultAsync(i => i.Id == id && i.UserId == userId);

            if (inquiry == null)
            {
                return NotFound();
            }

            return inquiry;
        }

        // POST: api/Inquiries
        [HttpPost]
        public async Task<ActionResult<Inquiry>> CreateInquiry(InquiryCreateDto inquiryDto)
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);

            // Check if vehicle exists
            var vehicle = await _context.Vehicles.FindAsync(inquiryDto.VehicleId);
            if (vehicle == null)
            {
                return NotFound(new { Message = "Vehicle not found" });
            }

            var inquiry = new Inquiry
            {
                UserId = userId,
                VehicleId = inquiryDto.VehicleId,
                Subject = inquiryDto.Subject,
                Message = inquiryDto.Message,
                DateSent = DateTime.Now,
                Status = InquiryStatus.New
            };

            _context.Inquiries.Add(inquiry);
            await _context.SaveChangesAsync();

            return CreatedAtAction(nameof(GetInquiry), new { id = inquiry.Id }, inquiry);
        }

        // PUT: api/Inquiries/5/MarkAsRead
        [HttpPut("{id}/MarkAsRead")]
        [Authorize(Roles = "Admin")] // For admin access only
        public async Task<IActionResult> MarkInquiryAsRead(int id)
        {
            var inquiry = await _context.Inquiries.FindAsync(id);

            if (inquiry == null)
            {
                return NotFound();
            }

            inquiry.Status = InquiryStatus.Read;
            _context.Entry(inquiry).State = EntityState.Modified;

            try
            {
                await _context.SaveChangesAsync();
            }
            catch (DbUpdateConcurrencyException)
            {
                if (!InquiryExists(id))
                {
                    return NotFound();
                }
                else
                {
                    throw;
                }
            }

            return NoContent();
        }

        // PUT: api/Inquiries/5/Reply
        [HttpPut("{id}/Reply")]
        [Authorize(Roles = "Admin")] // For admin access only
        public async Task<IActionResult> ReplyToInquiry(int id, InquiryReplyDto replyDto)
        {
            var inquiry = await _context.Inquiries.FindAsync(id);

            if (inquiry == null)
            {
                return NotFound();
            }

            inquiry.Response = replyDto.Response;
            inquiry.DateReplied = DateTime.Now;
            inquiry.Status = InquiryStatus.Replied;
            
            _context.Entry(inquiry).State = EntityState.Modified;

            try
            {
                await _context.SaveChangesAsync();
            }
            catch (DbUpdateConcurrencyException)
            {
                if (!InquiryExists(id))
                {
                    return NotFound();
                }
                else
                {
                    throw;
                }
            }

            return NoContent();
        }

        // PUT: api/Inquiries/5/Close
        [HttpPut("{id}/Close")]
        public async Task<IActionResult> CloseInquiry(int id)
        {
            var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
            
            var inquiry = await _context.Inquiries
                .FirstOrDefaultAsync(i => i.Id == id && i.UserId == userId);

            if (inquiry == null)
            {
                return NotFound();
            }

            inquiry.Status = InquiryStatus.Closed;
            _context.Entry(inquiry).State = EntityState.Modified;

            try
            {
                await _context.SaveChangesAsync();
            }
            catch (DbUpdateConcurrencyException)
            {
                if (!InquiryExists(id))
                {
                    return NotFound();
                }
                else
                {
                    throw;
                }
            }

            return NoContent();
        }

        private bool InquiryExists(int id)
        {
            return _context.Inquiries.Any(e => e.Id == id);
        }
    }

    public class InquiryCreateDto
    {
        public int VehicleId { get; set; }
        public string Subject { get; set; }
        public string Message { get; set; }
    }

    public class InquiryReplyDto
    {
        public string Response { get; set; }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Controllers/RecommendationsController.cs`:

```cs
using System;
using System.Collections.Generic;
using System.Security.Claims;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using SmartAutoTrader.API.Models;
using SmartAutoTrader.API.Services;

namespace SmartAutoTrader.API.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    [Authorize] // Requires authentication
    public class RecommendationsController : ControllerBase
    {
        private readonly IAIRecommendationService _recommendationService;
        private readonly ILogger<RecommendationsController> _logger;

        public RecommendationsController(
            IAIRecommendationService recommendationService,
            ILogger<RecommendationsController> logger)
        {
            _recommendationService = recommendationService;
            _logger = logger;
        }

        [HttpGet]
        public async Task<IActionResult> GetRecommendations([FromQuery] RecommendationRequestModel request)
        {
            try
            {
                // Get user ID from claims
                var userIdClaim = User.FindFirst(ClaimTypes.NameIdentifier);
                if (userIdClaim == null || !int.TryParse(userIdClaim.Value, out var userId))
                {
                    return Unauthorized("User not authenticated or invalid user ID");
                }

                // Convert request model to service parameters
                var parameters = new RecommendationParameters
                {
                    MinPrice = request.MinPrice,
                    MaxPrice = request.MaxPrice,
                    MinYear = request.MinYear,
                    MaxYear = request.MaxYear,
                    PreferredFuelTypes = request.FuelTypes,
                    PreferredVehicleTypes = request.VehicleTypes,
                    PreferredMakes = request.Makes,
                    DesiredFeatures = request.Features,
                    MaxResults = request.MaxResults ?? 5
                };

                // Get recommendations from service
                var recommendations = await _recommendationService.GetRecommendationsAsync(userId, parameters);

                // Return recommendations
                return Ok(recommendations);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error getting recommendations");
                return StatusCode(500, "An error occurred while getting recommendations");
            }
        }
        
        // Endpoint for testing without authentication
        [HttpGet("test/{userId}")]
        [AllowAnonymous]
        public async Task<IActionResult> TestRecommendations(int userId, [FromQuery] RecommendationRequestModel request)
        {
            try
            {
                // Convert request model to service parameters
                var parameters = new RecommendationParameters
                {
                    MinPrice = request.MinPrice,
                    MaxPrice = request.MaxPrice,
                    MinYear = request.MinYear,
                    MaxYear = request.MaxYear,
                    PreferredFuelTypes = request.FuelTypes,
                    PreferredVehicleTypes = request.VehicleTypes,
                    PreferredMakes = request.Makes,
                    DesiredFeatures = request.Features,
                    MaxResults = request.MaxResults ?? 5
                };

                // Get recommendations from service
                var recommendations = await _recommendationService.GetRecommendationsAsync(userId, parameters);

                // Return recommendations
                return Ok(recommendations);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error testing recommendations");
                return StatusCode(500, "An error occurred while testing recommendations");
            }
        }
    }

    public class RecommendationRequestModel
    {
        public decimal? MinPrice { get; set; }
        public decimal? MaxPrice { get; set; }
        public int? MinYear { get; set; }
        public int? MaxYear { get; set; }
        public List<FuelType>? FuelTypes { get; set; }
        public List<VehicleType>? VehicleTypes { get; set; }
        public List<string>? Makes { get; set; }
        public List<string>? Features { get; set; }
        public int? MaxResults { get; set; }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Controllers/AuthController.cs`:

```cs
using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using SmartAutoTrader.API.Services;

namespace SmartAutoTrader.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class AuthController : ControllerBase
    {
        private readonly IAuthService _authService;

        public AuthController(IAuthService authService)
        {
            _authService = authService;
        }

        [HttpPost("register")]
        public async Task<IActionResult> Register([FromBody] RegisterModel model)
        {
            try
            {
                var user = await _authService.RegisterAsync(
                    model.Username,
                    model.Email,
                    model.Password,
                    model.FirstName,
                    model.LastName,
                    model.PhoneNumber
                );

                return Ok(new
                {
                    user.Id,
                    user.Username,
                    user.Email,
                    user.FirstName,
                    user.LastName,
                    user.PhoneNumber,
                    Message = "Registration successful"
                });
            }
            catch (Exception ex)
            {
                return BadRequest(new { Message = ex.Message });
            }
        }

        [HttpPost("login")]
        public async Task<IActionResult> Login([FromBody] LoginModel model)
        {
            try
            {
                var (token, user) = await _authService.LoginAsync(model.Email, model.Password);

                return Ok(new
                {
                    Token = token,
                    User = new
                    {
                        user.Id,
                        user.Username,
                        user.Email,
                        user.FirstName,
                        user.LastName
                    },
                    Message = "Login successful"
                });
            }
            catch (Exception ex)
            {
                return BadRequest(new { Message = ex.Message });
            }
        }
    }

    public class RegisterModel
    {
        public string Username { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PhoneNumber { get; set; }
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Data/ApplicationDbContext.cs`:

```cs
using Microsoft.EntityFrameworkCore;
using SmartAutoTrader.API.Models;

namespace SmartAutoTrader.API.Data
{
    public class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
            : base(options)
        {
        }
        
        public DbSet<Vehicle> Vehicles { get; set; }
        public DbSet<VehicleImage> VehicleImages { get; set; }
        public DbSet<VehicleFeature> VehicleFeatures { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserFavorite> UserFavorites { get; set; }
        public DbSet<UserPreference> UserPreferences { get; set; }
        public DbSet<BrowsingHistory> BrowsingHistory { get; set; }
        public DbSet<Inquiry> Inquiries { get; set; }
        public DbSet<ChatHistory> ChatHistory { get; set; } // Added ChatHistory DbSet
        
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            
            // Configure relationships
            
            // Vehicle - VehicleImage (one-to-many)
            modelBuilder.Entity<VehicleImage>()
                .HasOne(vi => vi.Vehicle)
                .WithMany(v => v.Images)
                .HasForeignKey(vi => vi.VehicleId);
            
            // Vehicle - VehicleFeature (one-to-many)
            modelBuilder.Entity<VehicleFeature>()
                .HasOne(vf => vf.Vehicle)
                .WithMany(v => v.Features)
                .HasForeignKey(vf => vf.VehicleId);
            
            // User - UserFavorite (one-to-many)
            modelBuilder.Entity<UserFavorite>()
                .HasOne(uf => uf.User)
                .WithMany(u => u.Favorites)
                .HasForeignKey(uf => uf.UserId);
            
            // Vehicle - UserFavorite (one-to-many)
            modelBuilder.Entity<UserFavorite>()
                .HasOne(uf => uf.Vehicle)
                .WithMany(v => v.FavoritedBy)
                .HasForeignKey(uf => uf.VehicleId);
            
            // User - UserPreference (one-to-many)
            modelBuilder.Entity<UserPreference>()
                .HasOne(up => up.User)
                .WithMany(u => u.Preferences)
                .HasForeignKey(up => up.UserId);
            
            // User - BrowsingHistory (one-to-many)
            modelBuilder.Entity<BrowsingHistory>()
                .HasOne(bh => bh.User)
                .WithMany(u => u.BrowsingHistory)
                .HasForeignKey(bh => bh.UserId);
            
            // Vehicle - BrowsingHistory (one-to-many)
            modelBuilder.Entity<BrowsingHistory>()
                .HasOne(bh => bh.Vehicle)
                .WithMany()
                .HasForeignKey(bh => bh.VehicleId);
            
            // User - Inquiry (one-to-many)
            modelBuilder.Entity<Inquiry>()
                .HasOne(i => i.User)
                .WithMany(u => u.SentInquiries)
                .HasForeignKey(i => i.UserId);
            
            // Vehicle - Inquiry (one-to-many)
            modelBuilder.Entity<Inquiry>()
                .HasOne(i => i.Vehicle)
                .WithMany()
                .HasForeignKey(i => i.VehicleId);
            
            // User - ChatHistory (one-to-many)
            modelBuilder.Entity<ChatHistory>()
                .HasOne(ch => ch.User)
                .WithMany()
                .HasForeignKey(ch => ch.UserId);
        }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/AIServiceRegistration.cs`:

```cs
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using System;

namespace SmartAutoTrader.API.Services
{
    public static class AIServiceRegistration
    {
        public static IServiceCollection AddAIRecommendationServices(
            this IServiceCollection services,
            IConfiguration configuration)
        {
            // Register HttpClient for API calls
            services.AddHttpClient();
            
            // Determine which AI provider to use based on configuration
            var aiProvider = configuration["AI:Provider"]?.ToLower() ?? "huggingface";
            
            switch (aiProvider)
            {
                case "huggingface":
                    services.AddScoped<IAIRecommendationService, HuggingFaceRecommendationService>();
                    break;
                    
                case "openai":
                    // If you implement OpenAI in the future
                    // services.AddScoped<IAIRecommendationService, OpenAIRecommendationService>();
                    throw new NotImplementedException("OpenAI provider not yet implemented");
                    
                case "none":
                case "fallback":
                    // For a simple fallback without AI, implement a FallbackRecommendationService
                    // services.AddScoped<IAIRecommendationService, FallbackRecommendationService>();
                    throw new NotImplementedException("Fallback provider not yet implemented");
                    
                default:
                    // Default to Hugging Face
                    services.AddScoped<IAIRecommendationService, HuggingFaceRecommendationService>();
                    break;
            }
            
            return services;
        }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/RecommendationParameters.cs`:

```cs
using System.Collections.Generic;
using System.Threading.Tasks;
using SmartAutoTrader.API.Models;

namespace SmartAutoTrader.API.Services
{
    // Parameter class to pass user preferences and context to the recommendation service
    public class RecommendationParameters
    {
        public decimal? MinPrice { get; set; }
        public decimal? MaxPrice { get; set; }
        public int? MinYear { get; set; }
        public int? MaxYear { get; set; }
        public List<FuelType>? PreferredFuelTypes { get; set; }
        public List<VehicleType>? PreferredVehicleTypes { get; set; }
        public List<string>? PreferredMakes { get; set; }
        public List<string>? DesiredFeatures { get; set; }
        public int? MaxResults { get; set; } = 5; // Default to 5 recommendations
    }

    // Interface for any AI recommendation service (allows easy swapping)
    public interface IAIRecommendationService
    {
        Task<IEnumerable<Vehicle>> GetRecommendationsAsync(int userId, RecommendationParameters parameters);
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/HuggingFaceRecommendationsService.cs`:

```cs
using System.Text;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using SmartAutoTrader.API.Data;
using SmartAutoTrader.API.Models;

namespace SmartAutoTrader.API.Services;

public class HuggingFaceRecommendationService : IAIRecommendationService
{
    private readonly IConfiguration _configuration;
    private readonly ApplicationDbContext _context;
    private readonly HttpClient _httpClient;
    private readonly ILogger<HuggingFaceRecommendationService> _logger;

    public HuggingFaceRecommendationService(
        ApplicationDbContext context,
        IConfiguration configuration,
        ILogger<HuggingFaceRecommendationService> logger,
        HttpClient httpClient)
    {
        _context = context;
        _configuration = configuration;
        _logger = logger;
        _httpClient = httpClient;
    }

    public async Task<IEnumerable<Vehicle>> GetRecommendationsAsync(int userId, RecommendationParameters parameters)
    {
        try
        {
            _logger.LogInformation("Fetching recommendations for user ID: {UserId}", userId);

            // Fetch user separately to avoid SQLite APPLY issue
            var user = await _context.Users
                .Include(u => u.Preferences)
                .FirstOrDefaultAsync(u => u.Id == userId);

            if (user == null)
            {
                _logger.LogWarning("User with ID {UserId} not found, returning empty recommendations.", userId);
                return new List<Vehicle>();
            }

            // Fetch related entities separately
            user.Favorites = await _context.UserFavorites
                .Where(f => f.UserId == userId)
                .Include(f => f.Vehicle)
                .ToListAsync();

            user.BrowsingHistory = await _context.BrowsingHistory
                .Where(h => h.UserId == userId)
                .OrderByDescending(h => h.ViewDate)
                .Take(10)
                .Include(h => h.Vehicle)
                .ToListAsync();

            _logger.LogInformation("User data fetched, retrieving available vehicles.");
            var availableVehicles = await GetFilteredVehiclesAsync(parameters);

            if (!availableVehicles.Any())
            {
                _logger.LogWarning("No available vehicles found for filtering criteria.");
                return new List<Vehicle>();
            }

            // 3. Generate embeddings for user preferences and history
            _logger.LogInformation("Generating user embedding for user ID {UserId}", userId);
            var userEmbedding = await GenerateUserEmbeddingAsync(user, parameters);
            _logger.LogInformation("Generated user embedding: {Embedding}", string.Join(", ", userEmbedding));

            // 4. Generate embeddings for vehicles
            _logger.LogInformation("Generating vehicle embeddings...");
            var vehicleEmbeddings = await GenerateVehicleEmbeddingsAsync(availableVehicles);
            _logger.LogInformation("Generated vehicle embeddings for {Count} vehicles", vehicleEmbeddings.Count);

            // 5. Calculate similarity and rank vehicles
            _logger.LogInformation("Ranking vehicles by similarity score...");
            var recommendedVehicleIds = RankVehiclesBySimilarity(
                userEmbedding,
                vehicleEmbeddings,
                availableVehicles.Select(v => v.Id).ToList(),
                parameters.MaxResults ?? 5);

            _logger.LogInformation("Top {Count} recommended vehicle IDs: {VehicleIds}", recommendedVehicleIds.Count,
                string.Join(", ", recommendedVehicleIds));

            // 6. Get recommended vehicles with details
            var recommendedVehicles = await _context.Vehicles
                .Where(v => recommendedVehicleIds.Contains(v.Id))
                .Include(v => v.Images)
                .Include(v => v.Features)
                .ToListAsync();

            // 7. Add fallback recommendations if needed
            if (recommendedVehicles.Count < (parameters.MaxResults ?? 5))
            {
                _logger.LogWarning(
                    "Insufficient recommendations found ({Count}/{Max}), fetching fallback recommendations.",
                    recommendedVehicles.Count, parameters.MaxResults ?? 5);
                var additionalVehicles = await GetFallbackRecommendationsAsync(
                    userId,
                    parameters,
                    recommendedVehicles.Select(v => v.Id).ToList(),
                    (parameters.MaxResults ?? 5) - recommendedVehicles.Count);

                recommendedVehicles.AddRange(additionalVehicles);
            }

            _logger.LogInformation("Final recommendation list contains {Count} vehicles.", recommendedVehicles.Count);
            return recommendedVehicles;
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "Error retrieving Hugging Face recommendations for user ID {UserId}", userId);
            return await GetFallbackRecommendationsAsync(userId, parameters, new List<int>(),
                parameters.MaxResults ?? 5);
        }
    }


    private async Task<List<Vehicle>> GetFilteredVehiclesAsync(RecommendationParameters parameters)
    {
        var query = _context.Vehicles.AsQueryable();

        // Apply basic filters from parameters
        if (parameters.MinPrice.HasValue)
            query = query.Where(v => v.Price >= parameters.MinPrice.Value);

        if (parameters.MaxPrice.HasValue)
            query = query.Where(v => v.Price <= parameters.MaxPrice.Value);

        if (parameters.MinYear.HasValue)
            query = query.Where(v => v.Year >= parameters.MinYear.Value);

        if (parameters.MaxYear.HasValue)
            query = query.Where(v => v.Year <= parameters.MaxYear.Value);

        if (parameters.PreferredFuelTypes?.Any() == true)
            query = query.Where(v => parameters.PreferredFuelTypes.Contains(v.FuelType));

        if (parameters.PreferredVehicleTypes?.Any() == true)
            query = query.Where(v => parameters.PreferredVehicleTypes.Contains(v.VehicleType));

        if (parameters.PreferredMakes?.Any() == true)
            query = query.Where(v => parameters.PreferredMakes.Contains(v.Make));

        // Only available vehicles
        query = query.Where(v => v.Status == VehicleStatus.Available);

        // Include features for more detailed filtering
        return await query
            .Include(v => v.Features)
            .ToListAsync();
    }

    private async Task<float[]> GenerateUserEmbeddingAsync(User user, RecommendationParameters parameters)
    {
        // Prepare text that represents the user preferences and history
        var userText = new StringBuilder();

        // Add explicit parameters
        userText.AppendLine("User is looking for a car with these preferences:");
        if (parameters.MinPrice.HasValue) userText.AppendLine($"Minimum price: {parameters.MinPrice:C0}");
        if (parameters.MaxPrice.HasValue) userText.AppendLine($"Maximum price: {parameters.MaxPrice:C0}");
        if (parameters.MinYear.HasValue) userText.AppendLine($"Minimum year: {parameters.MinYear}");
        if (parameters.MaxYear.HasValue) userText.AppendLine($"Maximum year: {parameters.MaxYear}");

        if (parameters.PreferredFuelTypes?.Any() == true)
            userText.AppendLine($"Fuel types: {string.Join(", ", parameters.PreferredFuelTypes)}");

        if (parameters.PreferredVehicleTypes?.Any() == true)
            userText.AppendLine($"Vehicle types: {string.Join(", ", parameters.PreferredVehicleTypes)}");

        if (parameters.PreferredMakes?.Any() == true)
            userText.AppendLine($"Makes: {string.Join(", ", parameters.PreferredMakes)}");

        if (parameters.DesiredFeatures?.Any() == true)
            userText.AppendLine($"Desired features: {string.Join(", ", parameters.DesiredFeatures)}");

        // Add browsing history
        var recentlyViewed = user.BrowsingHistory?.OrderByDescending(h => h.ViewDate).Take(5).ToList();
        if (recentlyViewed?.Any() == true)
        {
            userText.AppendLine("\nUser recently viewed these vehicles:");
            foreach (var history in recentlyViewed)
                userText.AppendLine($"{history.Vehicle.Year} {history.Vehicle.Make} {history.Vehicle.Model}, " +
                                    $"Price: {history.Vehicle.Price:C0}, Type: {history.Vehicle.VehicleType}, " +
                                    $"Fuel: {history.Vehicle.FuelType}, View duration: {history.ViewDurationSeconds}s");
        }

        // Add favorites
        var favorites = user.Favorites?.Select(f => f.Vehicle).ToList();
        if (favorites?.Any() == true)
        {
            userText.AppendLine("\nUser favorited these vehicles:");
            foreach (var favorite in favorites)
                userText.AppendLine($"{favorite.Year} {favorite.Make} {favorite.Model}, " +
                                    $"Price: {favorite.Price:C0}, Type: {favorite.VehicleType}, " +
                                    $"Fuel: {favorite.FuelType}");
        }

        // Get user preferences
        if (user.Preferences?.Any() == true)
        {
            userText.AppendLine("\nUser has these saved preferences:");
            foreach (var pref in user.Preferences)
                userText.AppendLine($"{pref.PreferenceType}: {pref.Value} (Weight: {pref.Weight})");
        }

        // Generate embedding via Hugging Face
        return await GetEmbeddingFromHuggingFaceAsync(userText.ToString());
    }

    private async Task<Dictionary<int, float[]>> GenerateVehicleEmbeddingsAsync(List<Vehicle> vehicles)
    {
        var embeddings = new Dictionary<int, float[]>();

        // Process in batches to avoid rate limits
        var batchSize = 10;
        for (var i = 0; i < vehicles.Count; i += batchSize)
        {
            var batch = vehicles.Skip(i).Take(batchSize).ToList();
            var tasks = batch.Select(vehicle => GetVehicleEmbedding(vehicle)).ToList();
            var results = await Task.WhenAll(tasks);

            for (var j = 0; j < batch.Count; j++) embeddings[batch[j].Id] = results[j];
        }

        return embeddings;
    }

    private async Task<float[]> GetVehicleEmbedding(Vehicle vehicle)
    {
        // Generate a text description of the vehicle
        var vehicleText = new StringBuilder();

        vehicleText.AppendLine($"{vehicle.Year} {vehicle.Make} {vehicle.Model}");
        vehicleText.AppendLine($"Price: {vehicle.Price:C0}");
        vehicleText.AppendLine($"Mileage: {vehicle.Mileage} miles");
        vehicleText.AppendLine($"Type: {vehicle.VehicleType}");
        vehicleText.AppendLine($"Fuel: {vehicle.FuelType}");
        vehicleText.AppendLine($"Transmission: {vehicle.Transmission}");
        vehicleText.AppendLine($"Engine: {vehicle.EngineSize}L, {vehicle.HorsePower}hp");
        vehicleText.AppendLine($"Country: {vehicle.Country}");
        vehicleText.AppendLine(vehicle.Description);

        // Add features
        if (vehicle.Features?.Any() == true)
            vehicleText.AppendLine("Features: " +
                                   string.Join(", ", vehicle.Features.Select(f => f.Name)));

        // Generate embedding via Hugging Face
        return await GetEmbeddingFromHuggingFaceAsync(vehicleText.ToString());
    }

    private async Task<float[]> GetEmbeddingFromHuggingFaceAsync(string text)
    {
        try
        {
            // Create a request for the local embedding service
            var request = new
            {
                inputs = text,
                options = new { wait_for_model = true }
            };

            var content = new StringContent(
                JsonSerializer.Serialize(request),
                Encoding.UTF8,
                "application/json");

            // Call local Flask service instead of Hugging Face
            _logger.LogInformation("Calling local embedding service");

            var response = await _httpClient.PostAsync(
                "http://localhost:5005/embeddings", // Local Flask service 
                content);

            _logger.LogInformation("Received response from local embedding service: {StatusCode}", response.StatusCode);

            if (!response.IsSuccessStatusCode)
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                _logger.LogError("Local embedding service error: {StatusCode}, {ErrorContent}", response.StatusCode,
                    errorContent);
                return new float[384]; // Default embedding size for the model
            }

            // Parse response - the local service returns a simple float array
            var responseContent = await response.Content.ReadAsStringAsync();
            var embeddings = JsonSerializer.Deserialize<float[]>(responseContent);
            return embeddings ?? new float[384];
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "Error getting embedding from local service");
            return new float[384]; // Return empty embedding as fallback
        }
    }

    private async Task<float[]> FallbackToFeatureExtractionAsync(string text, string apiKey)
    {
        try
        {
            _logger.LogInformation("Using fallback approach with local embedding service");
        
            // Use the same request format as the primary method
            var request = new
            {
                inputs = text,
                options = new { wait_for_model = true }
            };
        
            var content = new StringContent(
                JsonSerializer.Serialize(request),
                Encoding.UTF8,
                "application/json");
        
            // Call local Flask service
            var response = await _httpClient.PostAsync(
                "http://localhost:5005/embeddings",
                content);
        
            if (!response.IsSuccessStatusCode)
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                _logger.LogError("Fallback embedding error: {StatusCode}, {ErrorContent}", 
                    response.StatusCode, errorContent);
                return new float[384];
            }
        
            var responseContent = await response.Content.ReadAsStringAsync();
        
            // Parse the direct array of floats returned by our local service
            var embeddings = JsonSerializer.Deserialize<float[]>(responseContent);
            return embeddings ?? new float[384];
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "Error in fallback embedding generation");
            return new float[384];
        }
    }

    private List<int> RankVehiclesBySimilarity(
        float[] userEmbedding,
        Dictionary<int, float[]> vehicleEmbeddings,
        List<int> vehicleIds,
        int maxResults)
    {
        // Calculate cosine similarity between user and each vehicle
        var similarities = new Dictionary<int, double>();

        foreach (var vehicleId in vehicleIds)
            if (vehicleEmbeddings.TryGetValue(vehicleId, out var vehicleEmbedding))
                similarities[vehicleId] = CalculateCosineSimilarity(userEmbedding, vehicleEmbedding);

        // Return top N vehicle IDs by similarity
        return similarities
            .OrderByDescending(s => s.Value)
            .Take(maxResults)
            .Select(s => s.Key)
            .ToList();
    }

    private double CalculateCosineSimilarity(float[] a, float[] b)
    {
        // Ensure vectors are same length
        if (a.Length != b.Length) return 0;

        double dotProduct = 0;
        double normA = 0;
        double normB = 0;

        for (var i = 0; i < a.Length; i++)
        {
            dotProduct += a[i] * b[i];
            normA += a[i] * a[i];
            normB += b[i] * b[i];
        }

        // Avoid division by zero
        if (normA == 0 || normB == 0) return 0;

        return dotProduct / (Math.Sqrt(normA) * Math.Sqrt(normB));
    }

    private async Task<List<Vehicle>> GetFallbackRecommendationsAsync(
        int userId,
        RecommendationParameters parameters,
        List<int> excludeIds,
        int count)
    {
        // Simple fallback logic based on preferences but without AI
        var query = _context.Vehicles.AsQueryable();

        // Apply filters from parameters
        if (parameters.MinPrice.HasValue)
            query = query.Where(v => v.Price >= parameters.MinPrice.Value);

        if (parameters.MaxPrice.HasValue)
            query = query.Where(v => v.Price <= parameters.MaxPrice.Value);

        if (parameters.MinYear.HasValue)
            query = query.Where(v => v.Year >= parameters.MinYear.Value);

        if (parameters.MaxYear.HasValue)
            query = query.Where(v => v.Year <= parameters.MaxYear.Value);

        if (parameters.PreferredFuelTypes?.Any() == true)
            query = query.Where(v => parameters.PreferredFuelTypes.Contains(v.FuelType));

        if (parameters.PreferredVehicleTypes?.Any() == true)
            query = query.Where(v => parameters.PreferredVehicleTypes.Contains(v.VehicleType));

        if (parameters.PreferredMakes?.Any() == true)
            query = query.Where(v => parameters.PreferredMakes.Contains(v.Make));

        if (parameters.DesiredFeatures?.Any() == true)
            query = query.Where(v => v.Features.Any(f =>
                parameters.DesiredFeatures.Contains(f.Name)));

        // Exclude already recommended vehicles
        if (excludeIds.Any())
            query = query.Where(v => !excludeIds.Contains(v.Id));

        // Get most recently listed vehicles matching criteria
        return await query
            .Where(v => v.Status == VehicleStatus.Available)
            .OrderByDescending(v => v.DateListed)
            .Take(count)
            .Include(v => v.Images)
            .Include(v => v.Features)
            .ToListAsync();
    }

    private string ConvertFuelTypeToString(int fuelType)
    {
        return fuelType switch
        {
            0 => "Petrol",
            1 => "Diesel",
            2 => "Electric",
            3 => "Hybrid",
            4 => "Hydrogen",
            _ => "Unknown"
        };
    }

    private string ConvertTransmissionToString(int transmission)
    {
        return transmission switch
        {
            0 => "Manual",
            1 => "Automatic",
            2 => "Semi-Automatic",
            _ => "Unknown"
        };
    }

    private string ConvertVehicleTypeToString(int vehicleType)
    {
        return vehicleType switch
        {
            0 => "Hatchback",
            1 => "Sedan",
            2 => "SUV",
            3 => "Coupe",
            4 => "Convertible",
            5 => "Wagon",
            6 => "Pickup",
            7 => "Minivan",
            _ => "Unknown"
        };
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/ChatRecommendationsService.cs`:

```cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using SmartAutoTrader.API.Data;
using SmartAutoTrader.API.Models;

namespace SmartAutoTrader.API.Services
{
    public interface IChatRecommendationService
    {
        Task<ChatResponse> ProcessMessageAsync(int userId, ChatMessage message);
    }

    public class ChatMessage
    {
        public string Content { get; set; }
        public DateTime Timestamp { get; set; } = DateTime.UtcNow;
    }

    public class ChatResponse
    {
        public string Message { get; set; }
        public List<Vehicle> RecommendedVehicles { get; set; } = new List<Vehicle>();
        public RecommendationParameters UpdatedParameters { get; set; }
    }

    public class ChatRecommendationService : IChatRecommendationService
    {
        private readonly ApplicationDbContext _context;
        private readonly IConfiguration _configuration;
        private readonly ILogger<ChatRecommendationService> _logger;
        private readonly HttpClient _httpClient;
        private readonly IAIRecommendationService _recommendationService;
        
        public ChatRecommendationService(
            ApplicationDbContext context,
            IConfiguration configuration,
            ILogger<ChatRecommendationService> logger,
            HttpClient httpClient,
            IAIRecommendationService recommendationService)
        {
            _context = context;
            _configuration = configuration;
            _logger = logger;
            _httpClient = httpClient;
            _recommendationService = recommendationService;
        }
        
        public async Task<ChatResponse> ProcessMessageAsync(int userId, ChatMessage message)
{
    try
    {
        _logger.LogInformation("Processing chat message for user ID: {UserId}", userId);
        
        // Get user context for personalization - MODIFIED TO AVOID APPLY
        var user = await _context.Users
            .Include(u => u.Preferences)
            .FirstOrDefaultAsync(u => u.Id == userId);
        
        if (user == null)
        {
            _logger.LogWarning("User with ID {UserId} not found", userId);
            return new ChatResponse { Message = "Sorry, I couldn't process your request. Please try again later." };
        }

        // Load related entities separately to avoid APPLY operation in SQLite
        user.Favorites = await _context.UserFavorites
            .Where(f => f.UserId == userId)
            .Include(f => f.Vehicle)
            .ToListAsync();

        user.BrowsingHistory = await _context.BrowsingHistory
            .Where(h => h.UserId == userId)
            .OrderByDescending(h => h.ViewDate)
            .Take(5)
            .Include(h => h.Vehicle)
            .ToListAsync();
        
        // Build user context for AI
        var userContext = BuildUserContext(user);
        
        // Process with AI to understand intent and extract parameters
        var processingResult = await ProcessWithAIAsync(message.Content, userContext);
        
        // Convert AI response to recommendation parameters
        var parameters = ConvertToRecommendationParameters(processingResult, user);
        
        // Save the chat history for future context
        await SaveChatHistoryAsync(userId, message, processingResult.Message);
        
        // Get recommendations based on the parameters
        var recommendations = await _recommendationService.GetRecommendationsAsync(userId, parameters);
        
        return new ChatResponse
        {
            Message = processingResult.Message,
            RecommendedVehicles = recommendations.ToList(),
            UpdatedParameters = parameters
        };
    }
    catch (Exception ex)
    {
        _logger.LogError(ex, "Error processing chat message for user ID {UserId}", userId);
        return new ChatResponse
        {
            Message = "I'm sorry, but I encountered an error processing your request. Please try again later.",
            RecommendedVehicles = new List<Vehicle>(),
            UpdatedParameters = new RecommendationParameters() // Ensure we return a non-null value
        };
    }
}
        
        private string BuildUserContext(User user)
        {
            var context = new StringBuilder();
            
            // Add basic user info
            context.AppendLine($"User ID: {user.Id}");
            context.AppendLine($"User Name: {user.FirstName} {user.LastName}");
            
            // Add preferences
            if (user.Preferences?.Any() == true)
            {
                context.AppendLine("\nUser Preferences:");
                foreach (var pref in user.Preferences)
                {
                    context.AppendLine($"- {pref.PreferenceType}: {pref.Value} (Weight: {pref.Weight})");
                }
            }
            
            // Add favorite vehicles
            if (user.Favorites?.Any() == true)
            {
                context.AppendLine("\nUser Favorites:");
                foreach (var fav in user.Favorites.Take(3)) // Limit to 3 for brevity
                {
                    context.AppendLine($"- {fav.Vehicle.Year} {fav.Vehicle.Make} {fav.Vehicle.Model}, Price: {fav.Vehicle.Price:C0}, Type: {fav.Vehicle.VehicleType}, Fuel: {fav.Vehicle.FuelType}");
                }
            }
            
            // Add recent browsing history
            if (user.BrowsingHistory?.Any() == true)
            {
                context.AppendLine("\nRecent Browsing History:");
                foreach (var history in user.BrowsingHistory.Take(3)) // Limit to 3 for brevity
                {
                    context.AppendLine($"- {history.Vehicle.Year} {history.Vehicle.Make} {history.Vehicle.Model}, Price: {history.Vehicle.Price:C0}, Type: {history.Vehicle.VehicleType}, View Duration: {history.ViewDurationSeconds}s");
                }
            }
            
            return context.ToString();
        }
        
        private async Task<(string Message, Dictionary<string, object> Parameters)> ProcessWithAIAsync(string message, string userContext)
        {
            try
            {
                // Get the API configuration
                var apiKey = _configuration["ChatAI:ApiKey"];
                var endpoint = _configuration["ChatAI:Endpoint"];
                
                // Prepare the prompt
                var prompt = new StringBuilder();
                prompt.AppendLine("You are an automotive assistant helping a customer find their ideal vehicle.");
                prompt.AppendLine("Your task is to understand their needs and preferences, then suggest appropriate vehicles.");
                prompt.AppendLine("\nUser Context:");
                prompt.AppendLine(userContext);
                prompt.AppendLine("\nUser Message:");
                prompt.AppendLine(message);
                prompt.AppendLine("\nPlease respond conversationally to the user's request.");
                prompt.AppendLine("After your response, include structured information about their preferences in a JSON format to update search parameters:");
                prompt.AppendLine(@"{
  ""minPrice"": null,
  ""maxPrice"": null,
  ""minYear"": null,
  ""maxYear"": null,
  ""preferredMakes"": [],
  ""preferredVehicleTypes"": [],
  ""preferredFuelTypes"": [],
  ""desiredFeatures"": []
}");
                
                // Prepare the request
                var request = new
                {
                    model = _configuration["ChatAI:Model"] ?? "gpt-3.5-turbo",
                    messages = new[]
                    {
                        new { role = "system", content = prompt.ToString() },
                        new { role = "user", content = message }
                    },
                    temperature = 0.7,
                    max_tokens = 500
                };
                
                // Send the request to the AI service
                _httpClient.DefaultRequestHeaders.Clear();
                if (!string.IsNullOrEmpty(apiKey))
                {
                    _httpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {apiKey}");
                }
                
                var content = new StringContent(
                    JsonSerializer.Serialize(request),
                    Encoding.UTF8,
                    "application/json");
                
                var response = await _httpClient.PostAsync(endpoint, content);
                
                if (!response.IsSuccessStatusCode)
                {
                    var errorContent = await response.Content.ReadAsStringAsync();
                    _logger.LogError("AI service error: {StatusCode}, {ErrorContent}", response.StatusCode, errorContent);
                    return ("I'm sorry, I couldn't understand your request. Could you please provide more details about the type of vehicle you're looking for?", new Dictionary<string, object>());
                }
                
                // Parse the response
                var responseContent = await response.Content.ReadAsStringAsync();
                using var document = JsonDocument.Parse(responseContent);
                
                // Extract the message content
                var choices = document.RootElement.GetProperty("choices");
                var messageContent = choices[0].GetProperty("message").GetProperty("content").GetString();
                
                // Split the response to extract parameters
                var parts = messageContent.Split("```json", StringSplitOptions.RemoveEmptyEntries);
                
                string responseMessage;
                Dictionary<string, object> parameters = new Dictionary<string, object>();
                
                if (parts.Length >= 2)
                {
                    // Extract the conversational response
                    responseMessage = parts[0].Trim();
                    
                    // Extract and parse the JSON parameters
                    var jsonPart = parts[1].Split("```", StringSplitOptions.RemoveEmptyEntries)[0].Trim();
                    try
                    {
                        parameters = JsonSerializer.Deserialize<Dictionary<string, object>>(jsonPart);
                    }
                    catch (Exception ex)
                    {
                        _logger.LogError(ex, "Error parsing JSON parameters from AI response");
                    }
                }
                else
                {
                    // If the response doesn't contain structured data, use the whole message
                    responseMessage = messageContent.Trim();
                }
                
                return (responseMessage, parameters);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error processing with AI");
                return ("I'm sorry, I encountered an error while processing your request. Could you please try again?", new Dictionary<string, object>());
            }
        }
        
        private RecommendationParameters ConvertToRecommendationParameters(
            (string Message, Dictionary<string, object> Parameters) processingResult, 
            User user)
        {
            var parameters = new RecommendationParameters();
            
            // Try to extract parameters from the AI response
            if (processingResult.Parameters.TryGetValue("minPrice", out var minPrice) && minPrice != null)
            {
                if (minPrice is JsonElement element && element.ValueKind != JsonValueKind.Null)
                {
                    parameters.MinPrice = element.GetDecimal();
                }
            }
            
            if (processingResult.Parameters.TryGetValue("maxPrice", out var maxPrice) && maxPrice != null)
            {
                if (maxPrice is JsonElement element && element.ValueKind != JsonValueKind.Null)
                {
                    parameters.MaxPrice = element.GetDecimal();
                }
            }
            
            if (processingResult.Parameters.TryGetValue("minYear", out var minYear) && minYear != null)
            {
                if (minYear is JsonElement element && element.ValueKind != JsonValueKind.Null)
                {
                    parameters.MinYear = element.GetInt32();
                }
            }
            
            if (processingResult.Parameters.TryGetValue("maxYear", out var maxYear) && maxYear != null)
            {
                if (maxYear is JsonElement element && element.ValueKind != JsonValueKind.Null)
                {
                    parameters.MaxYear = element.GetInt32();
                }
            }
            
            if (processingResult.Parameters.TryGetValue("preferredMakes", out var makes) && makes != null)
            {
                if (makes is JsonElement element && element.ValueKind == JsonValueKind.Array)
                {
                    parameters.PreferredMakes = new List<string>();
                    foreach (var item in element.EnumerateArray())
                    {
                        parameters.PreferredMakes.Add(item.GetString());
                    }
                }
            }
            
            if (processingResult.Parameters.TryGetValue("preferredVehicleTypes", out var types) && types != null)
            {
                if (types is JsonElement element && element.ValueKind == JsonValueKind.Array)
                {
                    parameters.PreferredVehicleTypes = new List<VehicleType>();
                    foreach (var item in element.EnumerateArray())
                    {
                        if (Enum.TryParse<VehicleType>(item.GetString(), true, out var vehicleType))
                        {
                            parameters.PreferredVehicleTypes.Add(vehicleType);
                        }
                    }
                }
            }
            
            if (processingResult.Parameters.TryGetValue("preferredFuelTypes", out var fuels) && fuels != null)
            {
                if (fuels is JsonElement element && element.ValueKind == JsonValueKind.Array)
                {
                    parameters.PreferredFuelTypes = new List<FuelType>();
                    foreach (var item in element.EnumerateArray())
                    {
                        if (Enum.TryParse<FuelType>(item.GetString(), true, out var fuelType))
                        {
                            parameters.PreferredFuelTypes.Add(fuelType);
                        }
                    }
                }
            }
            
            if (processingResult.Parameters.TryGetValue("desiredFeatures", out var features) && features != null)
            {
                if (features is JsonElement element && element.ValueKind == JsonValueKind.Array)
                {
                    parameters.DesiredFeatures = new List<string>();
                    foreach (var item in element.EnumerateArray())
                    {
                        parameters.DesiredFeatures.Add(item.GetString());
                    }
                }
            }
            
            // Set default Max Results
            parameters.MaxResults = 5;
            
            return parameters;
        }
        
        private async Task SaveChatHistoryAsync(int userId, ChatMessage userMessage, string aiResponse)
        {
            try
            {
                // Create a chat history record
                var chatHistory = new ChatHistory
                {
                    UserId = userId,
                    UserMessage = userMessage.Content,
                    AIResponse = aiResponse,
                    Timestamp = DateTime.UtcNow
                };
                
                _context.ChatHistory.Add(chatHistory);
                await _context.SaveChangesAsync();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error saving chat history for user ID {UserId}", userId);
                // Continue even if saving history fails
            }
        }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Services/AuthService.cs`:

```cs
using System;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using System.Text;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.IdentityModel.Tokens;
using SmartAutoTrader.API.Data;
using SmartAutoTrader.API.Models;
using BC = BCrypt.Net.BCrypt;

namespace SmartAutoTrader.API.Services
{
    public interface IAuthService
    {
        Task<User> RegisterAsync(string username, string email, string password, string firstName, string lastName, string phoneNumber);
        Task<(string token, User user)> LoginAsync(string email, string password);
        string GenerateJwtToken(User user);
    }

    public class AuthService : IAuthService
    {
        private readonly ApplicationDbContext _context;
        private readonly IConfiguration _configuration;

        public AuthService(ApplicationDbContext context, IConfiguration configuration)
        {
            _context = context;
            _configuration = configuration;
        }

        public async Task<User> RegisterAsync(string username, string email, string password, string firstName, string lastName, string phoneNumber)
        {
            // Check if user already exists
            if (await _context.Users.AnyAsync(u => u.Email == email || u.Username == username))
            {
                throw new Exception("User with this email or username already exists.");
            }

            // Create new user
            var user = new User
            {
                Username = username,
                Email = email,
                PasswordHash = BC.HashPassword(password),
                FirstName = firstName,
                LastName = lastName,
                PhoneNumber = phoneNumber,
                DateRegistered = DateTime.Now
            };

            _context.Users.Add(user);
            await _context.SaveChangesAsync();

            return user;
        }

        public async Task<(string token, User user)> LoginAsync(string email, string password)
        {
            // Find user by email
            var user = await _context.Users.FirstOrDefaultAsync(u => u.Email == email);
            
            // Check if user exists and password is correct
            if (user == null || !BC.Verify(password, user.PasswordHash))
            {
                throw new Exception("Invalid email or password.");
            }

            // Generate JWT token
            var token = GenerateJwtToken(user);

            return (token, user);
        }

        public string GenerateJwtToken(User user)
        {
            var key = Encoding.ASCII.GetBytes(_configuration["Jwt:Key"]);
            
            var tokenDescriptor = new SecurityTokenDescriptor
            {
                Subject = new ClaimsIdentity(new[]
                {
                    new Claim(ClaimTypes.NameIdentifier, user.Id.ToString()),
                    new Claim(ClaimTypes.Name, user.Username),
                    new Claim(ClaimTypes.Email, user.Email)
                }),
                Expires = DateTime.UtcNow.AddDays(7),
                SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature),
                Issuer = _configuration["Jwt:Issuer"],
                Audience = _configuration["Jwt:Audience"]
            };
            
            var tokenHandler = new JwtSecurityTokenHandler();
            var token = tokenHandler.CreateToken(tokenDescriptor);
            
            return tokenHandler.WriteToken(token);
        }
    }
}
```

`/Users/conorgillespie/Projects/SmartAutoTrader/backend/Program.cs`:

```cs
using Microsoft.AspNetCore.Authentication.JwtBearer;
using Microsoft.EntityFrameworkCore;
using Microsoft.IdentityModel.Tokens;
using SmartAutoTrader.API.Data;
using SmartAutoTrader.API.Services;
using System.Text;
using Microsoft.OpenApi.Models;
using SmartAutoTrader.API.DataSeeding;
using ZLogger;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container
builder.Services.AddControllers();

// Configure SQLite
builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseSqlite(builder.Configuration.GetConnectionString("DefaultConnection")));

// Configure Authentication
builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddJwtBearer(options =>
    {
        options.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateIssuer = true,
            ValidateAudience = true,
            ValidateLifetime = true,
            ValidateIssuerSigningKey = true,
            ValidIssuer = builder.Configuration["Jwt:Issuer"],
            ValidAudience = builder.Configuration["Jwt:Audience"],
            IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(builder.Configuration["Jwt:Key"]))
        };
    });

// Register services
builder.Services.AddScoped<IAuthService, AuthService>();
builder.Services.AddScoped<VehicleSeeder>();

builder.Services.AddHttpClient(); // For HttpClient
builder.Services.AddAIRecommendationServices(builder.Configuration);
builder.Services.AddScoped<IChatRecommendationService, ChatRecommendationService>();

builder.Services.AddControllers()
    .AddJsonOptions(options =>
    {
        options.JsonSerializerOptions.ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.IgnoreCycles;
        options.JsonSerializerOptions.Converters.Add(new System.Text.Json.Serialization.JsonStringEnumConverter());
    });

//JSON Image self reference issue fix
builder.Services.AddControllers()
    .AddJsonOptions(options =>
    {
        options.JsonSerializerOptions.ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve;
        // Or to ignore cycles completely:
        // options.JsonSerializerOptions.ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.IgnoreCycles;
    });

// Configure CORS
builder.Services.AddCors(options =>
{
    options.AddPolicy("AllowFrontend", policy =>
    {
        policy.WithOrigins("http://localhost:5173")
              .AllowAnyMethod()
              .AllowAnyHeader()
              .AllowCredentials();
    });
});

// Ensure Logs folder exists
Directory.CreateDirectory("Logs");

// Configure logging
builder.Logging.ClearProviders();
builder.Logging.AddConsole();
builder.Logging.AddDebug();
builder.Logging.AddZLoggerFile("Logs/app_log.txt");

// Configure Swagger
builder.Services.AddEndpointsApiExplorer();
// Add this in your services configuration section
builder.Services.AddSwaggerGen(options =>
{
    options.SwaggerDoc("v1", new OpenApiInfo { Title = "Smart Auto Trader API", Version = "v1" });
    
    // Define the JWT Bearer authentication scheme
    options.AddSecurityDefinition("Bearer", new OpenApiSecurityScheme
    {
        Description = "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        Name = "Authorization",
        In = ParameterLocation.Header,
        Type = SecuritySchemeType.ApiKey,
        Scheme = "Bearer"
    });
    
    options.AddSecurityRequirement(new OpenApiSecurityRequirement
    {
        {
            new OpenApiSecurityScheme
            {
                Reference = new OpenApiReference
                {
                    Type = ReferenceType.SecurityScheme,
                    Id = "Bearer"
                }
            },
            Array.Empty<string>()
        }
    });
});

var app = builder.Build();

// Configure the HTTP request pipeline
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseCors("AllowFrontend");
app.UseHttpsRedirection();
app.UseAuthentication();
app.UseAuthorization();

app.MapControllers();

// Create the database if it doesn't exist
using (var scope = app.Services.CreateScope())
{
    var services = scope.ServiceProvider;
    var context = services.GetRequiredService<ApplicationDbContext>();
    context.Database.EnsureCreated();
    var vehicleSeeder = services.GetRequiredService<VehicleSeeder>();
    vehicleSeeder.SeedVehicles(services, 200);
}

app.Run();  
```

`/Users/conorgillespie/Projects/SmartAutoTrader/README.md`:

```md
cat > README.md << 'EOL'
# Smart Auto Trader

An AI-powered vehicle marketplace that offers personalized recommendations and streamlines the car buying experience.

## Project Structure

This repository is organized as a monorepo containing both frontend and backend components:

- `/frontend`: React application with Material UI
- `/backend`: .NET Core API with SQLite database

## Features

- User authentication and profile management
- Vehicle browsing with advanced filtering
- AI-driven recommendations based on user preferences
- Inquiry messaging system between buyers and sellers
- Favorites management

## Getting Started

### Backend Setup

1. Navigate to the backend directory:
```

`/Users/conorgillespie/Projects/SmartAutoTrader/PythonServices/embedding_service/requirements.txt`:

```txt
flask
sentence-transformers
numpy

```

`/Users/conorgillespie/Projects/SmartAutoTrader/PythonServices/embedding_service/app.py`:

```py
# app.py
from flask import Flask, request, jsonify
from sentence_transformers import SentenceTransformer
import numpy as np

app = Flask(__name__)

# Load the model once at startup - this is where the M1 acceleration helps
print("Loading model...")
model = SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2')
print("Model loaded successfully!")

@app.route('/embeddings', methods=['POST'])
def get_embeddings():
    data = request.json
    
    # Extract text from request
    if not data or 'inputs' not in data:
        return jsonify({'error': 'No inputs provided'}), 400
    
    text = data['inputs']
    
    # Generate embeddings
    embeddings = model.encode([text])
    
    # Convert to list for JSON serialization
    embeddings_list = embeddings[0].tolist()
    
    return jsonify(embeddings_list)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5005)
```