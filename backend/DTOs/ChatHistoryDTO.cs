/* <copyright file="ChatHistoryDTO.cs" company="PlaceholderCompany">
 * Copyright (c) PlaceholderCompany. All rights reserved.
 * </copyright>
 *
<summary>
This file defines the ChatHistoryDto class, which serves as a Data Transfer Object (DTO) for representing chat history records in the Smart Auto Trader application.
</summary>
<remarks>
The ChatHistoryDto class is used to encapsulate data related to chat interactions between users and the AI assistant. It includes properties for storing user messages, AI responses, timestamps, and conversation identifiers. This DTO is typically used for transferring chat history data between the backend and frontend or other application layers.
</remarks>
<dependencies>
- None
</dependencies>
 */

namespace SmartAutoTrader.API.DTOs
{
    /// <summary>
    /// Represents a Data Transfer Object (DTO) for chat history records.
    /// </summary>
    /// <remarks>
    /// This class is used to encapsulate chat history data, including user messages, AI responses, timestamps, and conversation identifiers. It is designed for use in API responses or other data transfer scenarios.
    /// </remarks>
    public class ChatHistoryDto
    {
        /// <summary>
        /// Gets or sets the unique identifier for the chat history record.
        /// </summary>
        /// <value>An integer representing the unique ID of the chat history record.</value>
        /// <example>1.</example>
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the message sent by the user.
        /// </summary>
        /// <value>A string containing the user's message.</value>
        /// <example>"What is the price of the Tesla Model 3?".</example>
        public string? UserMessage { get; set; }

        /// <summary>
        /// Gets or sets the response generated by the AI assistant.
        /// </summary>
        /// <value>A string containing the AI's response.</value>
        /// <example>"The Tesla Model 3 starts at $35,000.".</example>
        public string? AIResponse { get; set; }

        /// <summary>
        /// Gets or sets the timestamp of the chat interaction.
        /// </summary>
        /// <value>A string representing the timestamp of the interaction in ISO 8601 format.</value>
        /// <example>"2025-05-22T14:30:00Z".</example>
        public string? Timestamp { get; set; }

        /// <summary>
        /// Gets or sets the identifier for the conversation to which this chat belongs.
        /// </summary>
        /// <value>A string representing the unique ID of the conversation.</value>
        /// <example>"abc123-conversation-id".</example>
        public string? ConversationId { get; set; }
    }
}