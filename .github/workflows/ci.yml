name: SmartAutoTrader CI

on:
    push:
        branches: [main, devops-pipeline]
    pull_request:
        branches: [main]

jobs:
    # -----------------------------------
    # 1) .NET Backend Build & Test
    # -----------------------------------
    dotnet_tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "8.0.x"

            - name: Restore dependencies
              run: dotnet restore ./backend/SmartAutoTrader.API.csproj

            - name: Build API project
              run: dotnet build ./backend/SmartAutoTrader.API.csproj --no-restore --configuration Release

            - name: Run unit tests
              run: dotnet test ./SmartAutoTrader.Tests/SmartAutoTrader.Tests.csproj --verbosity normal

    # -----------------------------------
    # 4) Backend Linting / Formatting
    # -----------------------------------
    backend_lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "8.0.x"

            - name: Restore backend dependencies
              run: dotnet restore ./backend/SmartAutoTrader.API.csproj

            - name: Run dotnet format (fail on unformatted code)
              run: dotnet format ./backend/SmartAutoTrader.API.csproj --verify-no-changes --severity error

    # -----------------------------------
    # 2) Frontend Linting
    # -----------------------------------
    frontend_lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Install frontend dependencies
              run: npm ci
              working-directory: ./frontend

            - name: Run frontend lint
              run: npm run lint
              working-directory: ./frontend

    # -----------------------------------
    # 3) Python Linting
    # -----------------------------------
    python_lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install flake8
              run: pip install flake8

            - name: Lint Python
              run: flake8 .
              working-directory: ./PythonServices
    # -----------------------------------
    # 3) Python Testing
    # -----------------------------------
    python_tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install dependencies
              run: pip install -r parameter_extraction_service/requirements.txt
              working-directory: ./PythonServices

            - name: Run tests
              run: pytest --maxfail=1 --disable-warnings -q
              working-directory: ./PythonServices
    # -----------------------------------
